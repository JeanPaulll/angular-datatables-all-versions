var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/directives/DataTableColumnDirective.html",[0,0.969,1,0.969]],["body/directives/DataTableColumnDirective.html",[0,1.277,1,1.277,2,1.022,3,0.399,4,0.399,5,0.301,6,2.467,7,1.403,8,1.935,9,1.022,10,1.056,11,1.277,12,0.621,13,2.821,14,0.532,15,0.957,16,4.67,17,4.67,18,1.866,19,4.67,20,1.056,21,5.026,22,4.09,23,1.894,24,2.573,25,4.67,26,2.358,27,3.334,28,3.864,29,3.864,30,4.67,31,3.334,32,2.358,33,0.493,34,0.038,35,3.334,36,1.406,37,2.981,38,1.08,39,2.981,40,2.981,41,1.724,42,0.857,43,1.428,44,2.981,45,2.981,46,2.981,47,1.602,48,2.981,49,1.233,50,2.981,51,2.981,52,1.093,53,1.056,54,4.09,55,1.57,56,2.981,57,0.769,58,0.698,59,0.508,60,2.573,61,2.981,62,2.956,63,1.868,64,4.09,65,2.981,66,4.09,67,2.981,68,2.467,69,2.981,70,0.796,71,2.981,72,2.907,73,0.568,74,2.467,75,2.467,76,2.467,77,0.349,78,0.399,79,3.385,80,2.981,81,2.981,82,2.981,83,1.673,84,0.63,85,2.981,86,2.981,87,5.267,88,4.09,89,4.09,90,4.09,91,2.981,92,2.981,93,2.981,94,1.361,95,2.981,96,0.018,97,0.024,98,0.018]],["title/components/DataTableHeaderComponent.html",[99,0.529,100,1.064]],["body/components/DataTableHeaderComponent.html",[0,0.825,1,0.825,2,0.907,3,0.354,4,0.354,5,0.267,9,0.907,10,1.562,11,1.683,12,0.795,13,3.091,14,0.38,15,0.88,18,0.907,20,0.971,26,2.21,32,1.335,33,0.375,34,0.037,36,1.226,41,0.907,42,0.451,43,1.355,52,0.619,53,0.682,55,0.825,57,0.971,58,1.179,59,0.641,62,2.677,63,1.207,70,0.641,72,1.335,73,0.503,77,0.31,78,0.354,96,0.016,97,0.022,98,0.016,99,0.747,100,1.636,101,1.558,102,1.207,103,1.207,104,1.335,105,1.335,106,2.187,107,1.417,108,4.378,109,1.417,110,3.761,111,4.378,112,1.502,113,2.677,114,3.761,115,3.761,116,3.761,117,3.761,118,0.825,119,1.663,120,2.03,121,4.378,122,3.761,123,3.761,124,2.282,125,2.643,126,2.643,127,2.643,128,2.643,129,3.761,130,2.643,131,1.663,132,2.643,133,1.663,134,2.643,135,0.996,136,1.663,137,1.887,138,2.643,139,2.643,140,3.761,141,3.761,142,2.643,143,2.643,144,2.685,145,2.643,146,2.643,147,1.999,148,3.761,149,2.643,150,3.761,151,2.643,152,2.643,153,2.187,154,2.685,155,2.643,156,2.643,157,2.643,158,2.643,159,2.643,160,2.643,161,2.643,162,2.643,163,1.663,164,1.484,165,2.643,166,3.947,167,2.685,168,3.126,169,1.887,170,2.643,171,2.643,172,3.112,173,1.636,174,2.754,175,3.761,176,2.643,177,3.623,178,1.663,179,1.335,180,1.663,181,2.643,182,3.761,183,2.643,184,2.829,185,1.887,186,2.643,187,1.484,188,2.643,189,2.643,190,1.899,191,2.643,192,2.187,193,2.187,194,2.643,195,2.643,196,3.623,197,4.378,198,4.378,199,2.187,200,2.643,201,2.187,202,2.643,203,1.484,204,2.643,205,2.643,206,1.095,207,1.899,208,1.899,209,2.408,210,1.335,211,1.335,212,1.335,213,0.907,214,1.335,215,1.335,216,0.825,217,1.29,218,1.069,219,0.926,220,0.996,221,1.069,222,1.899,223,0.751,224,0.907,225,1.335,226,1.335,227,0.825,228,1.207,229,1.335]],["title/modules/DataTableModule.html",[230,1.952,231,1.742]],["body/modules/DataTableModule.html",[1,1.841,2,0.944,3,0.369,4,0.369,5,0.278,12,0.679,20,0.71,34,0.037,35,2.762,36,0.644,52,0.644,55,1.702,70,1.066,73,0.524,74,2.277,75,2.277,76,3.202,77,0.453,78,0.369,84,0.582,96,0.016,97,0.023,98,0.016,100,1.87,101,1.14,112,0.944,120,2.221,206,1.14,213,1.87,216,1.738,218,0.782,219,1.027,220,1.458,221,1.454,223,1.581,224,1.82,227,1.657,230,1.731,231,3.493,232,2.762,233,1.545,234,3.703,235,1.731,236,3.703,237,3.703,238,2.277,239,2.277,240,2.277,241,2.978,242,2.978,243,3.202,244,2.277,245,1.964,246,2.752,247,3.869,248,2.434,249,4.475,250,2.752,251,4.475,252,4.018,253,3.869,254,2.277,255,3.869,256,1.545,257,2.752,258,3.869,259,2.752,260,3.869,261,2.752,262,3.869,263,1.256,264,3.869,265,2.752,266,3.869,267,2.752,268,3.869,269,2.752,270,3.869,271,1.964,272,3.869,273,2.752,274,3.869,275,2.752,276,3.869,277,2.752,278,3.869,279,2.752,280,3.869,281,1.731,282,2.752,283,2.752,284,2.752,285,2.752,286,3.869,287,3.202,288,1.14,289,1.854,290,2.752,291,2.752,292,1.208,293,1.767,294,1.389,295,3.202,296,2.752,297,2.434,298,2.752,299,2.752,300,2.172,301,2.277,302,2.752,303,2.752,304,2.752,305,2.752,306,4.475,307,1.964,308,2.752,309,1.767,310,1.603,311,2.277]],["title/components/DataTablePaginationComponent.html",[99,0.529,213,1.064]],["body/components/DataTablePaginationComponent.html",[0,0.737,1,0.737,2,0.809,3,0.316,4,0.316,5,0.238,9,0.809,10,1.45,11,1.573,12,0.731,14,0.238,15,0.811,20,0.894,24,2.179,32,1.191,33,0.413,34,0.038,36,1.374,41,1.653,42,0.822,49,0.811,52,1.218,53,1.344,55,0.737,57,1.168,58,1.218,59,0.771,62,2.304,63,1.582,70,0.591,72,1.749,73,0.449,77,0.276,78,0.316,84,0.868,96,0.014,97,0.02,98,0.014,99,0.7,100,0.809,101,1.435,102,1.077,103,1.077,104,1.191,105,1.191,107,1.305,109,1.305,112,1.408,113,2.539,118,0.737,119,1.484,120,1.961,124,0.977,131,1.484,133,1.484,135,0.889,136,1.484,137,1.684,147,1.077,163,1.484,166,2.866,172,1.952,173,1.282,174,1.484,177,2.866,178,1.484,179,1.191,180,1.484,184,1.324,190,1.191,193,1.952,199,1.952,206,0.977,207,1.749,208,1.749,209,2.284,210,1.191,211,1.191,212,1.191,213,1.551,214,1.191,215,1.191,216,0.737,217,1.188,218,0.984,219,0.868,220,0.889,221,0.984,222,1.749,223,0.67,224,0.809,225,1.191,226,1.191,227,0.737,228,1.077,229,1.191,312,1.684,313,4.702,314,4.105,315,3.464,316,4.105,317,4.523,318,4.105,319,4.523,320,4.523,321,4.105,322,4.523,323,3.464,324,4.105,325,2.473,326,4.105,327,2.845,328,3.229,329,3.464,330,2.359,331,2.359,332,2.359,333,2.359,334,3.464,335,2.359,336,2.359,337,2.93,338,2.359,339,2.359,340,3.464,341,2.359,342,2.359,343,2.359,344,2.359,345,2.359,346,2.359,347,2.359,348,2.359,349,2.359,350,2.359,351,2.359,352,2.359,353,2.359,354,2.359,355,4.818,356,2.179,357,2.359,358,2.359,359,2.359,360,1.684,361,4.105,362,1.188,363,3.464,364,2.359,365,5.037,366,2.359,367,3.464,368,4.105,369,4.105,370,4.105,371,3.464,372,3.464,373,3.464,374,3.464,375,2.359,376,3.464,377,4.523,378,3.464,379,4.523,380,4.523,381,2.473,382,3.464,383,2.473,384,2.359,385,1.484,386,2.866,387,0.977,388,1.684,389,2.359,390,1.952,391,2.359]],["title/interfaces/DataTableParams.html",[300,1.742,392,0.529]],["body/interfaces/DataTableParams.html",[3,0.572,4,0.572,5,0.431,12,0.783,14,0.56,15,1.207,33,0.493,34,0.036,36,0.998,38,1.122,49,1.402,59,1.042,77,0.5,96,0.025,97,0.03,98,0.025,300,2.894,327,3.621,392,0.727,393,1.948,394,3.243,395,3.53,396,5.757,397,4.764,398,4.764,399,4.266,400,4.266,401,1.901]],["title/classes/DataTableResource.html",[78,0.416,297,1.952]],["body/classes/DataTableResource.html",[3,0.461,4,0.461,5,0.347,12,0.839,14,0.455,20,1.162,33,0.386,34,0.038,36,1.175,38,0.655,43,0.977,49,0.805,52,1.054,53,0.888,57,1.162,58,1.054,59,0.768,70,0.586,77,0.403,78,0.461,83,2.527,84,1.126,96,0.033,97,0.026,98,0.02,118,1.074,219,1.126,293,1.57,297,2.832,300,3.183,301,2.846,401,1.18,402,2.455,403,4.407,404,2.846,405,4.407,406,4.502,407,3.439,408,5.778,409,3.439,410,3.583,411,3.439,412,5.325,413,4.502,414,3.214,415,3.439,416,3.439,417,3.439,418,3.439,419,1.57,420,2.455,421,2.846,422,3.439,423,3.439,424,3.439,425,2.846,426,2.455,427,2.846,428,3.439,429,3.439,430,3.439,431,3.439,432,3.439,433,3.439,434,1.736,435,4.502,436,3.439,437,3.439,438,3.439,439,3.439,440,4.502,441,4.502,442,4.502,443,3.439,444,1.696,445,4.502,446,4.502,447,4.502,448,3.439,449,3.439]],["title/components/DataTableRowComponent.html",[55,0.969,99,0.529]],["body/components/DataTableRowComponent.html",[0,0.751,1,0.751,2,0.825,3,0.322,4,0.322,5,0.243,7,1.206,8,1.72,9,0.825,10,1.456,11,1.426,12,0.63,13,1.351,14,0.461,15,0.823,18,1.842,20,0.907,23,1.721,24,2.211,31,1.718,33,0.46,34,0.037,36,1.369,41,1.206,42,0.599,43,0.684,49,0.823,52,1.069,53,1.072,55,1.426,57,0.907,58,1.137,59,0.599,60,2.211,62,2.94,63,1.099,70,0.599,72,2.097,73,0.458,77,0.282,78,0.322,84,1.027,96,0.014,97,0.021,98,0.014,99,0.708,100,0.825,101,1.456,102,1.099,103,1.099,104,1.215,105,1.215,107,1.324,109,1.324,112,1.74,113,2.563,118,0.751,119,1.514,120,1.974,124,1.892,131,1.514,133,1.514,135,0.907,136,1.514,137,1.718,164,1.351,173,1.297,174,2.211,179,2.306,184,2.847,187,1.351,190,1.215,203,1.973,206,0.997,207,1.775,208,1.775,209,2.306,210,1.215,211,1.215,212,1.215,213,0.825,214,1.215,215,1.215,216,0.751,217,1.206,218,0.999,219,0.878,220,0.907,221,0.999,222,1.775,223,0.684,224,0.825,225,1.215,226,1.215,227,0.751,228,1.099,229,1.215,325,2.509,356,1.514,362,1.206,385,2.873,387,0.997,388,1.718,390,1.991,401,1.566,414,2.964,444,0.907,450,1.991,451,4.152,452,3.515,453,4.152,454,3.515,455,4.152,456,4.152,457,4.152,458,4.152,459,4.566,460,4.566,461,3.515,462,4.152,463,4.857,464,4.152,465,3.436,466,3.779,467,3.515,468,2.406,469,2.406,470,4.152,471,2.406,472,2.406,473,2.406,474,2.406,475,2.406,476,2.406,477,2.406,478,2.406,479,2.406,480,2.406,481,2.406,482,2.406,483,2.406,484,2.406,485,3.515,486,1.991,487,3.515,488,2.406,489,2.406,490,2.406,491,2.406,492,4.152,493,2.406,494,2.406,495,2.406,496,3.515,497,3.515,498,1.991,499,2.406,500,2.406,501,2.406,502,2.406,503,2.406,504,2.406,505,2.406,506,1.991,507,1.991,508,2.964,509,4.152,510,2.964,511,3.515,512,1.514,513,1.351,514,3.515,515,2.908,516,2.908,517,2.406,518,2.406,519,1.718,520,2.406,521,2.406,522,4.152,523,2.406,524,2.406,525,2.406,526,2.406,527,2.406]],["title/interfaces/DataTableTranslations.html",[292,0.969,392,0.529]],["body/interfaces/DataTableTranslations.html",[3,0.326,4,0.326,5,0.246,12,0.369,14,0.246,15,0.829,33,0.534,34,0.037,38,1.222,42,0.782,43,0.691,47,0.834,59,1.087,77,0.415,96,0.014,97,0.021,98,0.014,292,1.106,381,3.276,383,3.276,392,0.415,393,1.11,394,1.529,528,1.529,529,3.797,530,3.797,531,2.095,532,3.797,533,3.797,534,2.575,535,3.797,536,3.797,537,3.797,538,3.797,539,3.797,540,3.276,541,3.797,542,3.797,543,3.797,544,3.797,545,3.797,546,3.797,547,3.797,548,3.797,549,3.797,550,3.797,551,3.797,552,3.797,553,3.276,554,3.797,555,3.797,556,3.797,557,3.797,558,3.797,559,3.797,560,3.797,561,3.797,562,2.012,563,2.93,564,1.227,565,1.364,566,1.227,567,1.364,568,1.227,569,1.227,570,1.227,571,1.227,572,1.227,573,1.227,574,1.007,575,1.529]],["title/interfaces/DialogData.html",[392,0.529,576,1.286]],["body/interfaces/DialogData.html",[3,0.44,4,0.44,5,0.332,7,1.126,8,1.809,10,0.847,11,1.025,12,0.498,14,0.332,15,1.021,18,1.126,23,1.236,33,0.374,34,0.038,38,0.625,43,1.24,53,0.847,70,0.989,73,0.625,77,0.384,78,0.44,84,0.923,96,0.019,97,0.026,98,0.019,99,0.744,107,1.236,109,1.236,112,1.126,118,1.025,124,1.36,135,1.236,144,3.732,216,1.025,217,1.126,218,1.394,219,1.151,220,2.051,221,1.59,263,1.498,271,2.343,288,1.36,289,1.809,292,1.633,293,1.498,294,1.657,309,1.498,310,1.36,362,1.126,392,0.56,393,1.498,444,1.236,575,2.064,576,2.032,577,1.498,578,1.657,579,3.732,580,2.387,581,2.555,582,3.612,583,2.715,584,1.842,585,1.842,586,2.343,587,2.064,588,3.612,589,2.715,590,4.059,591,3.116,592,3.612,593,2.715,594,4.059,595,1.657,596,1.842,597,1.842,598,2.715,599,2.715,600,2.715,601,4.504,602,2.715,603,2.715,604,1.842,605,1.842,606,1.842,607,1.842,608,3.612,609,2.715,610,2.715,611,3.612,612,2.715,613,2.715,614,2.715,615,2.715,616,2.715,617,2.715,618,2.715,619,2.715,620,2.715,621,2.715,622,2.715,623,2.715,624,2.715,625,2.715,626,4.326,627,3.612,628,2.715,629,2.715,630,2.715,631,2.715]],["title/interfaces/DialogData-1.html",[362,0.894,392,0.444,576,1.08]],["body/interfaces/DialogData-1.html",[3,0.34,4,0.34,5,0.256,7,1.253,8,1.513,10,0.655,11,1.141,12,0.385,14,0.432,15,0.855,18,1.869,23,0.956,33,0.367,34,0.038,38,0.815,42,0.881,47,1.253,49,0.594,53,0.655,70,0.908,73,0.483,77,0.428,78,0.489,84,1.206,94,2.265,96,0.015,97,0.021,98,0.015,99,0.623,107,0.956,109,0.956,112,0.87,118,0.792,135,0.956,147,1.158,173,1.141,217,0.87,218,1.33,219,1.174,221,1.468,223,0.721,248,3.12,256,1.424,263,1.158,281,1.596,288,1.051,289,1.513,292,1.462,293,1.158,294,1.281,309,1.158,310,1.051,362,1.701,387,1.051,392,0.433,393,1.158,401,1.253,434,1.844,444,1.612,531,2.265,534,1.424,564,1.281,565,1.424,566,1.281,567,1.424,568,2.363,569,2.161,570,1.281,571,1.281,572,1.281,573,1.281,574,1.939,576,1.773,577,1.158,578,1.281,580,2.137,584,1.424,585,1.424,595,1.281,596,1.424,597,1.424,604,1.424,605,1.424,606,1.424,607,1.424,632,2.945,633,2.607,634,2.607,635,2.607,636,2.607,637,1.596,638,1.811,639,1.811,640,2.607,641,1.811,642,1.811,643,1.811,644,2.05,645,1.811,646,2.607,647,2.607,648,1.811,649,1.811,650,1.811,651,1.811,652,1.811,653,1.811,654,1.811,655,1.811,656,1.811,657,2.607,658,1.811,659,2.161,660,1.811,661,1.844,662,1.811,663,1.811,664,1.811,665,1.596,666,1.811,667,1.811,668,1.596,669,1.811,670,1.811,671,3.8,672,1.811,673,2.607,674,1.811,675,1.811,676,1.811,677,1.811,678,3.055,679,1.811,680,1.811,681,3.342,682,1.811,683,2.607,684,2.607,685,1.811,686,1.596,687,2.607,688,2.607,689,1.811,690,1.811,691,1.811,692,1.811,693,1.596,694,1.811,695,2.607,696,1.811,697,2.607,698,1.811,699,1.811,700,1.811,701,1.811,702,1.811,703,1.811,704,1.811,705,1.811,706,1.811,707,1.811,708,3.342,709,1.811,710,1.811,711,1.811,712,1.811,713,1.811,714,1.811,715,1.811,716,1.811,717,1.596,718,1.811,719,1.811,720,1.811,721,1.811,722,1.811]],["title/components/FieldFilterChooserPopupDialog.html",[99,0.529,216,0.969]],["body/components/FieldFilterChooserPopupDialog.html",[0,0.635,1,0.635,2,0.697,3,0.272,4,0.272,5,0.205,7,1.063,8,1.556,9,0.697,10,1.401,11,1.634,12,0.637,14,0.205,15,0.725,18,0.697,20,0.8,23,1.583,32,1.026,33,0.457,34,0.037,36,1.288,38,0.8,41,0.697,42,0.347,43,0.88,52,1.058,53,1.23,55,0.635,57,1.084,58,1.16,59,0.716,63,1.415,70,0.871,73,0.387,77,0.238,78,0.272,84,0.655,96,0.012,97,0.018,98,0.012,99,0.64,100,0.697,101,1.284,102,0.928,103,0.928,104,1.026,105,1.026,107,1.168,109,1.168,112,1.288,118,0.968,120,0.766,124,1.284,135,0.766,144,2.999,164,1.141,167,2.212,168,1.451,173,1.488,184,1.141,185,1.451,187,2.108,190,1.896,196,2.564,206,0.842,207,1.565,208,1.565,209,2.121,210,1.026,211,1.026,212,1.026,213,0.697,214,1.026,215,1.026,216,1.312,217,1.441,218,1.542,219,1.299,220,2.306,221,1.745,222,1.565,223,0.578,224,0.697,225,1.026,226,1.026,227,0.635,228,0.928,229,1.026,263,0.928,271,1.451,288,0.842,289,1.74,292,0.968,293,0.928,294,1.026,309,2.544,310,2.308,362,0.697,386,1.682,392,0.347,401,0.697,419,0.928,444,0.766,508,2.681,512,1.279,513,1.739,519,1.451,575,1.279,576,1.873,577,2.544,578,1.026,579,2.212,580,0.928,581,2.262,582,3.108,583,1.682,584,1.141,585,1.141,586,1.451,587,1.279,588,3.108,589,1.682,590,3.108,591,2.212,592,2.564,593,1.682,594,3.108,595,1.026,596,1.739,597,2.108,598,2.564,599,3.108,600,3.108,601,4.1,602,3.108,603,3.108,604,1.141,605,1.739,606,1.739,607,1.739,608,2.564,609,1.682,610,3.476,611,2.564,612,1.682,613,2.564,614,1.682,615,1.682,616,2.564,617,1.682,618,2.564,619,3.108,620,1.682,621,1.682,622,1.682,623,1.682,624,1.682,625,1.682,626,3.476,627,2.564,628,1.682,629,1.682,630,1.682,631,1.682,723,3.099,724,3.099,725,3.099,726,1.682,727,3.099,728,1.682,729,1.682,730,1.682,731,2.033,732,1.682,733,2.033,734,2.033,735,1.682,736,2.033,737,2.033,738,2.033,739,3.099,740,1.682,741,3.099,742,1.682,743,1.682,744,2.033,745,1.682,746,1.682,747,2.564,748,2.564,749,1.682,750,1.682,751,1.682,752,1.682,753,2.564,754,1.682,755,1.682,756,1.682,757,2.033,758,2.033]],["title/components/FieldFilterPopupDialog.html",[99,0.529,223,0.882]],["body/components/FieldFilterPopupDialog.html",[0,0.399,1,0.399,2,0.438,3,0.171,4,0.171,5,0.129,7,0.945,8,1.141,9,0.438,10,1.225,11,1.443,12,0.488,14,0.278,15,0.5,18,1.884,20,0.552,23,1.213,26,0.645,32,2.397,33,0.416,34,0.037,36,1.302,38,0.682,41,1.536,42,0.914,47,0.945,49,0.5,52,1.048,53,0.924,55,0.399,57,1.112,58,1.111,59,0.735,60,0.804,63,0.584,68,1.058,70,0.701,73,0.243,77,0.25,78,0.286,84,1.004,94,1.635,96,0.008,97,0.013,98,0.008,99,0.47,100,0.438,101,0.885,102,0.584,103,0.584,104,0.645,105,0.645,107,0.805,109,0.805,112,0.945,118,0.667,120,0.482,135,0.482,147,0.584,163,1.732,164,0.717,168,0.912,169,1.966,173,1.443,174,0.804,178,0.804,179,0.645,180,2.024,184,0.717,185,0.912,187,2.513,190,1.625,201,1.058,203,0.717,206,0.53,207,1.079,208,1.625,209,1.625,210,0.645,211,0.645,212,0.645,213,0.438,214,0.645,215,0.645,216,0.399,217,1.104,218,1.432,219,1.293,220,0.482,221,1.733,222,1.079,223,0.914,224,0.438,225,0.645,226,0.645,227,0.399,228,0.584,229,0.645,248,3.219,256,0.717,263,0.584,281,0.804,288,0.53,289,1.141,292,0.667,293,0.584,294,0.645,309,2.556,310,2.32,362,1.228,385,1.344,387,0.885,388,0.912,392,0.218,401,1.228,410,0.912,419,0.584,434,1.079,444,1.213,506,1.058,508,1.966,510,1.966,512,1.732,513,2.513,519,1.525,531,1.967,534,1.546,564,1.079,565,1.199,566,1.079,567,1.199,568,2.175,569,1.955,570,1.079,571,1.079,572,1.079,573,1.079,574,1.703,576,1.484,577,2.556,578,0.645,580,0.584,584,0.717,585,0.717,595,0.645,596,1.199,597,1.546,604,0.717,605,1.199,606,1.199,607,1.199,632,0.804,633,1.525,634,1.525,635,1.525,636,1.525,637,0.804,638,0.912,639,0.912,640,1.525,641,0.912,642,0.912,643,0.912,644,1.546,645,0.912,646,2.298,647,1.525,648,0.912,649,0.912,650,0.912,651,0.912,652,1.966,653,1.966,654,1.966,655,1.966,656,1.966,657,2.298,658,1.525,659,1.625,660,1.525,661,1.39,662,1.525,663,2.556,664,1.525,665,1.732,666,1.966,667,1.966,668,1.732,669,1.966,670,1.966,671,2.934,672,0.912,673,1.525,674,0.912,675,0.912,676,0.912,677,0.912,678,1.966,679,0.912,680,0.912,681,2.298,682,0.912,683,1.525,684,1.525,685,0.912,686,0.804,687,1.525,688,1.525,689,2.298,690,0.912,691,0.912,692,0.912,693,0.804,694,1.525,695,2.556,696,0.912,697,1.525,698,0.912,699,1.525,700,1.525,701,0.912,702,0.912,703,0.912,704,0.912,705,0.912,706,0.912,707,1.525,708,2.764,709,0.912,710,2.298,711,0.912,712,1.525,713,0.912,714,0.912,715,0.912,716,1.525,717,1.344,718,0.912,719,0.912,720,0.912,721,0.912,722,0.912,726,1.058,728,1.768,729,1.058,730,1.058,732,1.058,735,1.058,743,1.768,745,1.058,746,3.401,747,1.768,748,1.768,749,1.058,750,1.058,751,1.768,752,1.058,753,1.058,754,1.058,755,1.058,756,4.512,759,2.137,760,2.137,761,2.137,762,2.137,763,2.137,764,2.137,765,2.137,766,1.278,767,1.278,768,1.278,769,1.278,770,1.278,771,1.278,772,1.278,773,1.278,774,1.278,775,1.278,776,1.278,777,1.278,778,1.278,779,1.278,780,1.278,781,1.278,782,1.278,783,1.278,784,1.278,785,2.137,786,3.218,787,2.137,788,2.137,789,3.871,790,2.137,791,3.581,792,2.137,793,1.278,794,1.278,795,1.058,796,2.137,797,1.278,798,1.278,799,1.278,800,1.278,801,2.754,802,0.912,803,2.137,804,1.278,805,2.137,806,2.137,807,1.278,808,1.278,809,3.581,810,3.705,811,4.477,812,1.278,813,1.058,814,1.278,815,3.204,816,1.278,817,3.581,818,3.218,819,1.278,820,1.278,821,4.11,822,2.754,823,1.278,824,2.137,825,1.278,826,1.278,827,1.278,828,1.278,829,1.278,830,1.278,831,2.137]],["title/interfaces/Filter.html",[219,0.656,392,0.529]],["body/interfaces/Filter.html",[3,0.599,4,0.599,5,0.452,14,0.452,15,1.241,33,0.484,34,0.036,38,1.076,42,0.997,59,0.997,70,0.762,77,0.523,96,0.026,97,0.031,98,0.026,218,1.661,219,1.122,392,0.762,393,2.041,581,2.67,587,2.812,693,3.678,832,3.699,833,4.47]],["title/components/FilterBarComponent.html",[99,0.529,224,1.064]],["body/components/FilterBarComponent.html",[0,0.597,1,0.597,2,0.656,3,0.256,4,0.256,5,0.193,7,1.015,8,1.498,9,0.656,10,1.38,11,1.452,12,0.549,14,0.411,15,0.692,18,1.24,20,0.764,23,1.533,33,0.471,34,0.038,36,1.314,38,0.364,41,0.656,42,0.75,43,0.544,47,1.015,52,1.203,53,1.136,55,0.597,57,1.327,58,1.27,59,0.877,63,0.874,70,0.877,72,0.966,73,0.364,77,0.224,78,0.256,84,1.111,94,0.874,96,0.028,97,0.017,98,0.011,99,0.617,100,0.656,101,1.226,102,0.874,103,0.874,104,0.966,105,0.966,107,1.115,109,1.115,112,1.595,113,2.284,118,0.924,119,1.204,120,1.827,124,2.076,131,1.204,133,1.204,135,0.721,136,1.204,147,1.858,164,1.074,173,1.271,178,1.204,179,0.966,187,1.074,190,0.966,206,0.793,207,1.494,208,1.494,209,2.054,210,0.966,211,0.966,212,0.966,213,0.656,214,0.966,215,0.966,216,1.129,217,1.015,218,1.25,219,1.319,220,1.363,221,1.423,222,1.494,223,1.027,224,1.396,225,1.826,226,0.966,227,0.597,228,0.874,229,0.966,263,0.874,287,4.347,288,1.226,289,1.686,307,4.044,310,1.226,362,0.656,420,1.366,434,0.966,444,0.721,512,1.204,513,1.66,515,1.583,516,1.583,574,1.226,577,2.586,579,2.905,580,1.351,581,1.651,586,1.366,587,1.204,632,1.204,637,1.204,659,1.826,661,0.966,668,1.204,686,1.861,740,1.583,795,1.583,802,1.366,834,1.583,835,3.616,836,2.958,837,3.616,838,3.616,839,2.958,840,2.958,841,2.958,842,2.958,843,2.958,844,2.958,845,2.958,846,2.958,847,2.958,848,2.958,849,1.913,850,2.958,851,1.913,852,4.069,853,1.913,854,2.958,855,1.913,856,2.958,857,1.913,858,1.913,859,2.958,860,1.913,861,4.069,862,2.958,863,1.913,864,2.958,865,1.913,866,1.913,867,3.616,868,1.913,869,1.913,870,1.913,871,1.913,872,1.913,873,1.913,874,1.913,875,2.958,876,1.913,877,2.958,878,1.913,879,1.913,880,1.913,881,1.913,882,4.069,883,1.913,884,2.958,885,1.913,886,1.913,887,1.913,888,1.913,889,2.958,890,1.913,891,3.616,892,3.616,893,3.616,894,2.958,895,2.958,896,2.958,897,1.913,898,1.913,899,1.913,900,1.913,901,1.913,902,1.913,903,1.583,904,1.913,905,1.913,906,3.616,907,1.913,908,2.958,909,1.913,910,1.913,911,1.913,912,1.913,913,1.913,914,3.616,915,1.913,916,1.913,917,1.583,918,1.913,919,1.913,920,1.913,921,1.583,922,2.958,923,1.913,924,1.913,925,1.913,926,1.913,927,2.958,928,1.913,929,1.913]],["title/interfaces/FilterableField.html",[392,0.529,581,1.417]],["body/interfaces/FilterableField.html",[3,0.559,4,0.559,5,0.422,14,0.422,15,1.191,26,2.885,27,4.08,33,0.517,34,0.037,38,1.18,42,0.712,49,0.977,59,0.868,77,0.596,96,0.025,97,0.03,98,0.025,387,1.73,392,0.712,393,1.906,531,1.906,562,3.454,581,2.324,659,2.108,661,2.108,665,3.595,930,2.98,931,2.98,932,5.715,933,4.729,934,5.089,935,4.174]],["title/directives/HideDirective.html",[0,0.969,227,0.969]],["body/directives/HideDirective.html",[0,1.416,2,1.193,3,0.466,4,0.466,5,0.351,9,1.193,10,1.171,14,0.351,15,1.061,18,2.055,20,1.171,24,2.853,33,0.458,34,0.037,36,1.331,38,0.864,41,1.193,42,0.593,43,1.434,47,1.193,52,1.061,53,1.171,57,1.171,58,1.061,59,0.773,62,3.002,70,0.593,72,2.29,73,0.662,77,0.407,78,0.466,83,2.546,84,0.736,94,1.588,96,0.02,97,0.027,98,0.02,118,1.086,147,1.588,169,3.238,179,2.29,227,1.416,228,2.597,325,3.238,356,2.188,401,1.903,419,1.588,421,2.878,465,4.176,466,4.426,936,2.483,937,5.047,938,5.047,939,5.348,940,3.478,941,4.535,942,4.535,943,4.535,944,3.478,945,3.478,946,3.478,947,5.047,948,2.878,949,3.753,950,3.478,951,3.478,952,4.535,953,5.348,954,4.535,955,5.047,956,5.047,957,3.478]],["title/pipes/MinPipe.html",[241,1.742,958,1.742]],["body/pipes/MinPipe.html",[3,0.592,4,0.592,5,0.446,7,1.514,9,1.514,20,1.14,33,0.378,34,0.036,36,1.033,38,1.071,42,0.898,49,1.316,52,1.033,57,1.14,58,1.316,59,0.753,70,0.753,73,0.841,77,0.517,78,0.592,84,0.934,96,0.026,97,0.031,98,0.026,163,3.311,241,2.954,958,2.954,959,3.152,960,3.653,961,3.653,962,4.356,963,4.654,964,4.415,965,4.356,966,4.415]],["title/classes/MyErrorStateMatcher.html",[78,0.416,644,1.742]],["body/classes/MyErrorStateMatcher.html",[3,0.327,4,0.327,5,0.246,7,1.435,8,1.471,10,0.63,11,1.108,12,0.37,14,0.423,18,1.849,20,0.916,23,0.919,33,0.304,34,0.038,36,0.571,38,0.797,42,0.869,47,1.217,49,0.571,52,0.571,53,0.63,57,0.63,58,0.571,59,0.416,70,0.897,73,0.464,77,0.416,78,0.476,84,1.196,94,2.509,96,0.014,97,0.021,98,0.014,99,0.605,107,0.919,109,0.919,112,0.837,118,0.762,135,0.919,147,1.114,173,1.108,217,0.837,218,1.306,219,1.162,221,1.531,223,0.693,248,3.072,256,1.369,263,1.114,281,1.534,288,1.011,289,1.471,292,1.108,293,1.114,294,1.232,309,1.621,310,1.471,362,1.675,387,1.011,392,0.416,401,1.435,402,1.741,434,1.792,444,1.577,531,2.23,534,1.369,564,1.232,565,1.369,566,1.232,567,1.369,568,2.32,569,2.113,570,1.232,571,1.232,572,1.232,573,1.232,574,1.904,576,1.471,577,1.621,578,1.232,580,1.114,584,1.369,585,1.369,595,1.232,596,1.369,597,1.369,604,1.369,605,1.369,606,1.369,607,1.369,632,1.534,633,3.281,634,3.281,635,3.281,636,2.987,637,1.534,638,2.534,639,2.534,640,3.281,641,2.534,642,2.534,643,2.534,644,2.349,645,2.534,646,3.281,647,2.534,648,1.741,649,1.741,650,1.741,651,1.741,652,1.741,653,1.741,654,1.741,655,1.741,656,1.741,657,2.534,658,1.741,659,2.113,660,1.741,661,1.792,662,1.741,663,1.741,664,1.741,665,1.534,666,1.741,667,1.741,668,1.534,669,1.741,670,1.741,671,3.755,672,1.741,673,2.534,674,1.741,675,1.741,676,1.741,677,1.741,678,2.987,679,1.741,680,1.741,681,3.281,682,1.741,683,2.534,684,2.534,685,1.741,686,1.534,687,2.534,688,2.534,689,1.741,690,1.741,691,1.741,692,1.741,693,1.534,694,1.741,695,2.534,696,1.741,697,2.534,698,1.741,699,1.741,700,1.741,701,1.741,702,1.741,703,1.741,704,1.741,705,1.741,706,1.741,707,1.741,708,3.281,709,1.741,710,1.741,711,1.741,712,1.741,713,1.741,714,1.741,715,1.741,716,1.741,717,1.534,718,1.741,719,1.741,720,1.741,721,1.741,722,1.741,967,2.439,968,3.55,969,2.439]],["title/pipes/PixelConverter.html",[242,1.742,958,1.742]],["body/pipes/PixelConverter.html",[3,0.559,4,0.559,5,0.422,7,1.432,9,1.432,20,1.078,33,0.358,34,0.037,36,0.977,38,1.149,42,1.016,49,1.337,52,0.977,57,1.078,58,1.285,59,0.712,70,0.712,73,0.795,77,0.489,78,0.559,83,2.343,84,1.161,96,0.025,97,0.03,98,0.025,242,2.856,420,2.98,434,2.569,958,2.856,959,2.98,961,3.454,962,4.211,963,4.543,965,4.211,970,3.454,971,5.49,972,4.174]],["title/coverage.html",[973,3.479]],["body/coverage.html",[0,1.388,1,1.054,5,0.341,6,2.792,12,0.802,33,0.289,34,0.037,55,1.054,78,0.596,96,0.02,97,0.026,98,0.02,99,0.981,100,1.157,106,2.792,120,1.271,173,1.956,213,1.157,216,1.054,219,1.271,220,1.992,221,1.694,223,0.959,224,1.157,227,1.054,241,1.894,242,1.894,292,1.054,297,2.123,300,1.894,307,2.409,309,2.508,310,2.276,312,3.174,337,3.174,392,0.962,394,2.797,395,2.792,403,2.792,404,2.792,419,2.03,444,1.271,450,2.792,528,2.797,576,1.842,577,2.576,578,2.774,581,1.541,644,1.894,832,2.792,834,2.792,930,2.409,931,2.409,936,3.174,958,2.496,960,2.792,970,2.792,973,2.792,974,2.792,975,3.374,976,3.374,977,4.446,978,4.446,979,3.374,980,2.792,981,3.374,982,3.374,983,3.374,984,3.374,985,4.973,986,5.751,987,3.679,988,3.374,989,3.374,990,4.446,991,4.446,992,3.374,993,2.792,994,2.409,995,2.409,996,2.792,997,3.374,998,2.792,999,3.374]],["title/dependencies.html",[233,2.09,1000,2.606]],["body/dependencies.html",[34,0.037,73,0.786,96,0.024,97,0.03,98,0.024,203,2.316,221,1.172,233,2.316,235,2.596,254,3.415,256,2.316,288,2.094,289,1.71,595,2.083,1001,4.126,1002,6.122,1003,4.126,1004,5.053,1005,4.126,1006,4.126,1007,4.126,1008,4.126,1009,4.126,1010,4.126,1011,4.126,1012,4.181,1013,3.607,1014,4.126,1015,4.126,1016,4.126,1017,4.126,1018,4.126,1019,3.415,1020,4.126,1021,4.126,1022,4.126,1023,4.126,1024,4.126,1025,4.126,1026,4.126,1027,4.126,1028,4.126,1029,4.126,1030,4.126,1031,4.126,1032,4.126,1033,4.126,1034,4.126,1035,4.126,1036,4.126,1037,3.415,1038,4.126,1039,4.126,1040,4.126]],["title/miscellaneous/functions.html",[1041,1.316,1042,3.081]],["body/miscellaneous/functions.html",[14,0.469,33,0.398,34,0.035,52,1.087,57,1.4,58,1.269,59,0.925,83,2.607,96,0.027,97,0.032,98,0.027,124,1.924,401,1.593,936,3.315,948,3.843,949,3.843,995,3.315,996,4.488,998,4.488,1041,2.345,1042,3.843,1043,3.843,1044,4.644,1045,4.644]],["title/index.html",[14,0.263,1046,2.157,1047,2.157]],["body/index.html",[5,0.203,10,0.964,11,1.59,12,0.844,13,3.209,14,0.203,23,0.759,26,2.635,27,1.438,28,2.546,29,2.546,31,2.984,32,1.553,34,0.037,38,0.994,41,2.093,42,0.525,43,1.447,47,1.927,49,1.192,53,0.52,58,0.72,60,3.283,70,0.637,73,0.383,77,0.236,78,0.27,79,1.666,84,0.426,94,1.705,96,0.012,97,0.018,98,0.012,99,0.81,102,0.919,103,0.919,113,1.727,154,2.984,167,1.438,173,1.166,180,1.267,192,1.666,203,1.727,217,0.691,230,1.267,231,1.13,233,1.727,235,1.935,252,2.546,292,0.629,311,1.666,313,4.087,327,1.935,328,2.984,356,1.935,360,2.665,387,1.547,392,0.343,397,1.666,398,2.546,401,1.927,405,1.666,410,2.665,414,2.984,419,2.255,426,2.196,427,3.09,486,2.546,498,1.666,510,3.215,513,1.727,540,1.438,553,1.438,574,0.834,575,1.267,580,1.908,717,1.267,802,1.438,810,2.546,813,1.666,815,2.546,903,1.666,917,1.666,921,1.666,980,1.666,994,1.438,1012,1.666,1013,1.438,1019,1.666,1037,3.726,1048,2.014,1049,2.014,1050,2.014,1051,2.014,1052,1.666,1053,2.014,1054,2.014,1055,1.666,1056,2.014,1057,3.077,1058,3.726,1059,3.733,1060,3.733,1061,2.014,1062,2.014,1063,2.014,1064,2.014,1065,1.666,1066,2.014,1067,3.077,1068,2.014,1069,2.014,1070,2.014,1071,2.014,1072,2.014,1073,2.014,1074,2.014,1075,3.733,1076,2.014,1077,2.014,1078,2.014,1079,3.733,1080,2.014,1081,3.733,1082,4.18,1083,3.733,1084,2.014,1085,2.014,1086,2.014,1087,2.014,1088,3.733,1089,2.014,1090,2.014,1091,2.014,1092,2.014,1093,2.014,1094,2.014,1095,2.014,1096,2.014,1097,2.014,1098,2.014,1099,3.077,1100,2.014,1101,2.014,1102,2.014,1103,2.014,1104,2.014,1105,2.014,1106,2.014,1107,1.666,1108,2.014,1109,2.014,1110,2.014,1111,4.503,1112,2.014,1113,2.014,1114,2.014,1115,2.014,1116,2.014,1117,2.014,1118,2.014,1119,2.014,1120,2.014,1121,3.077,1122,2.014,1123,4.503,1124,2.014,1125,2.014,1126,3.459,1127,2.014,1128,3.077,1129,3.077,1130,2.014,1131,2.014,1132,2.014,1133,2.014,1134,2.014,1135,3.733,1136,2.014,1137,2.014,1138,3.077,1139,2.014,1140,2.014,1141,2.014,1142,2.014,1143,2.014,1144,2.014,1145,2.014,1146,2.014,1147,2.014,1148,2.014,1149,2.014,1150,2.014,1151,2.014,1152,3.733,1153,2.014,1154,3.077,1155,2.014,1156,2.014,1157,2.014,1158,2.014,1159,2.014,1160,3.077,1161,2.014,1162,2.014,1163,2.014,1164,2.014,1165,2.014,1166,2.014,1167,2.014,1168,2.014,1169,3.733,1170,2.014,1171,2.014,1172,2.014,1173,2.014,1174,2.014,1175,2.014,1176,3.733,1177,2.014,1178,2.014,1179,2.014,1180,2.014,1181,2.014,1182,2.014,1183,2.014,1184,2.014,1185,2.014,1186,2.014,1187,3.077,1188,2.014,1189,3.077,1190,3.077,1191,2.014,1192,2.014,1193,3.077,1194,2.014,1195,2.014,1196,2.014,1197,3.077,1198,2.014,1199,2.014,1200,2.014,1201,2.014,1202,3.459,1203,3.077,1204,2.014,1205,2.014,1206,2.014,1207,1.666,1208,3.077,1209,1.666,1210,1.666,1211,1.666,1212,1.666,1213,2.014,1214,2.014,1215,3.077,1216,3.733,1217,2.014,1218,2.014,1219,2.014,1220,2.014,1221,2.014,1222,2.014,1223,2.014,1224,2.014,1225,3.077,1226,2.014,1227,3.077,1228,3.077,1229,2.014,1230,2.014,1231,2.014,1232,2.014,1233,2.014,1234,1.666,1235,2.014,1236,2.014,1237,2.014,1238,2.014,1239,2.014,1240,2.014,1241,2.014,1242,2.014,1243,2.014,1244,3.077,1245,2.014,1246,2.014,1247,2.014,1248,2.014,1249,2.014,1250,2.014,1251,2.014,1252,2.014,1253,2.014,1254,2.014,1255,2.014,1256,2.014,1257,2.014,1258,2.014,1259,2.196,1260,1.666]],["title/license.html",[1046,2.157,1047,2.157,1259,1.861]],["body/license.html",[34,0.029,96,0.024,97,0.029,98,0.024,124,1.687,245,2.907,425,4.147,426,3.578,974,3.369,1052,4.147,1065,3.369,1212,3.369,1234,3.369,1259,2.907,1260,3.369,1261,5.429,1262,4.072,1263,4.072,1264,4.072,1265,4.072,1266,5.012,1267,4.072,1268,4.072,1269,4.072,1270,4.072,1271,4.072,1272,4.072,1273,6.109,1274,4.072,1275,4.072,1276,4.072,1277,5.429,1278,4.072,1279,4.072,1280,4.072,1281,4.072,1282,4.072,1283,4.072,1284,4.072,1285,4.072,1286,4.072,1287,5.012,1288,4.072,1289,4.072,1290,4.072,1291,4.072,1292,4.072,1293,4.072,1294,5.012,1295,5.012,1296,4.072,1297,4.072,1298,4.072,1299,4.072,1300,4.072,1301,4.072,1302,4.072,1303,4.072,1304,4.072,1305,4.072,1306,4.072,1307,4.072,1308,4.072,1309,4.072,1310,4.072,1311,4.072,1312,4.072,1313,4.072,1314,4.072,1315,4.072,1316,4.072,1317,4.072,1318,4.072,1319,4.072,1320,4.072,1321,4.072,1322,4.072,1323,4.072]],["title/modules.html",[232,3.001]],["body/modules.html",[34,0.033,96,0.029,97,0.033,98,0.029,231,2.737,232,3.481,1013,3.481,1324,4.876,1325,4.876,1326,4.876]],["title/overview.html",[1327,3.479]],["body/overview.html",[1,1.864,2,1.36,34,0.037,55,1.676,96,0.023,97,0.029,98,0.023,100,1.841,101,1.643,120,2.249,206,1.643,213,1.841,216,1.676,223,1.525,224,1.841,227,1.676,230,3.102,231,3.569,233,2.226,234,3.282,235,2.495,236,3.282,237,3.282,238,3.282,239,3.282,240,3.282,241,3.012,242,3.012,243,4.081,244,3.282,245,2.832,362,1.36,393,1.811,402,2.832,959,2.832,1107,4.441,1327,3.282,1328,3.966,1329,3.966]],["title/miscellaneous/typealiases.html",[1041,1.316,1330,3.723]],["body/miscellaneous/typealiases.html",[12,0.777,14,0.426,33,0.361,34,0.037,35,3.655,43,1.198,47,1.446,49,0.987,96,0.025,97,0.03,98,0.025,295,4.236,387,1.747,394,2.652,419,2.618,528,3.22,531,1.925,563,4.236,564,2.128,565,2.366,566,2.128,567,2.366,568,2.128,569,2.128,570,2.128,571,2.128,572,2.128,573,2.128,574,1.747,659,2.128,661,2.128,930,3.009,931,3.655,933,4.236,995,3.009,1041,2.128,1043,4.236,1331,4.215,1332,4.215,1333,5.734,1334,4.215,1335,4.215,1336,5.119,1337,4.215,1338,5.119,1339,4.215,1340,4.215]],["title/miscellaneous/variables.html",[1041,1.316,1341,3.081]],["body/miscellaneous/variables.html",[10,0.901,12,0.892,13,1.959,14,0.459,26,2.295,33,0.433,34,0.036,41,1.734,42,1.003,43,1.291,47,1.559,49,1.183,96,0.02,97,0.027,98,0.027,153,3.761,154,4.197,173,1.419,218,0.991,219,0.738,292,1.09,312,2.491,327,2.195,328,4.064,337,3.823,360,2.491,381,2.491,383,2.491,385,3.369,507,3.761,528,2.859,529,2.888,530,3.761,531,2.308,532,2.888,533,2.888,534,1.959,535,2.888,536,2.888,537,2.888,538,2.888,539,2.888,540,2.491,541,2.888,542,2.888,543,2.888,544,2.888,545,2.888,546,2.888,547,2.888,548,2.888,549,2.888,550,2.888,551,2.888,552,2.888,553,2.491,554,2.888,555,2.888,556,2.888,557,2.888,558,2.888,559,2.888,560,2.888,561,2.888,564,1.762,566,1.762,568,1.762,569,1.762,570,2.552,571,1.762,572,2.295,573,2.295,574,1.883,591,3.609,742,2.888,987,2.888,993,2.888,994,3.245,1041,1.762,1055,2.888,1058,2.888,1126,2.888,1202,2.888,1207,3.761,1209,3.761,1210,3.761,1211,3.761,1341,2.888,1342,3.489,1343,3.489,1344,3.489,1345,3.489,1346,3.489,1347,3.489,1348,3.489,1349,4.545,1350,4.545,1351,3.489,1352,3.489,1353,3.489,1354,3.489,1355,3.489,1356,3.489,1357,3.489,1358,3.489,1359,3.489,1360,3.489,1361,3.489]]],"invertedIndex":[["",{"_index":34,"title":{},"body":{"directives/DataTableColumnDirective.html":{},"components/DataTableHeaderComponent.html":{},"modules/DataTableModule.html":{},"components/DataTablePaginationComponent.html":{},"interfaces/DataTableParams.html":{},"classes/DataTableResource.html":{},"components/DataTableRowComponent.html":{},"interfaces/DataTableTranslations.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"interfaces/Filter.html":{},"components/FilterBarComponent.html":{},"interfaces/FilterableField.html":{},"directives/HideDirective.html":{},"pipes/MinPipe.html":{},"classes/MyErrorStateMatcher.html":{},"pipes/PixelConverter.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":173,"title":{},"body":{"components/DataTableHeaderComponent.html":{},"components/DataTablePaginationComponent.html":{},"components/DataTableRowComponent.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{},"classes/MyErrorStateMatcher.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["0.15rem",{"_index":390,"title":{},"body":{"components/DataTablePaginationComponent.html":{},"components/DataTableRowComponent.html":{}}}],["0.26",{"_index":830,"title":{},"body":{"components/FieldFilterPopupDialog.html":{}}}],["0.75rem",{"_index":520,"title":{},"body":{"components/DataTableRowComponent.html":{}}}],["0.8.29",{"_index":1040,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":986,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":984,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":977,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":989,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":982,"title":{},"body":{"coverage.html":{}}}],["0/25",{"_index":979,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":978,"title":{},"body":{"coverage.html":{}}}],["0/38",{"_index":992,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":990,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":991,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":997,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":983,"title":{},"body":{"coverage.html":{}}}],["0/90",{"_index":988,"title":{},"body":{"coverage.html":{}}}],["04",{"_index":758,"title":{},"body":{"components/FieldFilterChooserPopupDialog.html":{}}}],["0px",{"_index":386,"title":{},"body":{"components/DataTablePaginationComponent.html":{},"components/FieldFilterChooserPopupDialog.html":{}}}],["1",{"_index":362,"title":{"interfaces/DialogData-1.html":{}},"body":{"components/DataTablePaginationComponent.html":{},"components/DataTableRowComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{},"classes/MyErrorStateMatcher.html":{},"overview.html":{}}}],["1.0.8",{"_index":1028,"title":{},"body":{"dependencies.html":{}}}],["1.1.1",{"_index":1038,"title":{},"body":{"dependencies.html":{}}}],["1.14.3",{"_index":1033,"title":{},"body":{"dependencies.html":{}}}],["1.5rem",{"_index":391,"title":{},"body":{"components/DataTablePaginationComponent.html":{}}}],["1.import",{"_index":1101,"title":{},"body":{"index.html":{}}}],["1/2",{"_index":981,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1190,"title":{},"body":{"index.html":{}}}],["100",{"_index":813,"title":{},"body":{"components/FieldFilterPopupDialog.html":{},"index.html":{}}}],["1060",{"_index":195,"title":{},"body":{"components/DataTableHeaderComponent.html":{}}}],["10px",{"_index":168,"title":{},"body":{"components/DataTableHeaderComponent.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{}}}],["12px",{"_index":741,"title":{},"body":{"components/FieldFilterChooserPopupDialog.html":{}}}],["133",{"_index":828,"title":{},"body":{"components/FieldFilterPopupDialog.html":{}}}],["150px",{"_index":189,"title":{},"body":{"components/DataTableHeaderComponent.html":{}}}],["15px",{"_index":799,"title":{},"body":{"components/FieldFilterPopupDialog.html":{}}}],["176px",{"_index":800,"title":{},"body":{"components/FieldFilterPopupDialog.html":{}}}],["1px",{"_index":193,"title":{},"body":{"components/DataTableHeaderComponent.html":{},"components/DataTablePaginationComponent.html":{}}}],["2",{"_index":1107,"title":{},"body":{"index.html":{},"overview.html":{}}}],["2.6.3",{"_index":1018,"title":{},"body":{"dependencies.html":{}}}],["200px",{"_index":806,"title":{},"body":{"components/FieldFilterPopupDialog.html":{}}}],["2018",{"_index":1263,"title":{},"body":{"license.html":{}}}],["244",{"_index":829,"title":{},"body":{"components/FieldFilterPopupDialog.html":{}}}],["24px",{"_index":805,"title":{},"body":{"components/FieldFilterPopupDialog.html":{}}}],["25",{"_index":1191,"title":{},"body":{"index.html":{}}}],["250",{"_index":1192,"title":{},"body":{"index.html":{}}}],["250px",{"_index":744,"title":{},"body":{"components/FieldFilterChooserPopupDialog.html":{}}}],["25px",{"_index":165,"title":{},"body":{"components/DataTableHeaderComponent.html":{}}}],["25rem",{"_index":200,"title":{},"body":{"components/DataTableHeaderComponent.html":{}}}],["27",{"_index":145,"title":{},"body":{"components/DataTableHeaderComponent.html":{}}}],["2px",{"_index":796,"title":{},"body":{"components/FieldFilterPopupDialog.html":{}}}],["2rem",{"_index":1217,"title":{},"body":{"index.html":{}}}],["3",{"_index":754,"title":{},"body":{"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{}}}],["32px",{"_index":929,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["3367d6",{"_index":795,"title":{},"body":{"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{}}}],["4.0.0",{"_index":1015,"title":{},"body":{"dependencies.html":{}}}],["4.12.0",{"_index":1031,"title":{},"body":{"dependencies.html":{}}}],["4.17.4",{"_index":1025,"title":{},"body":{"dependencies.html":{}}}],["4.7.0",{"_index":1020,"title":{},"body":{"dependencies.html":{}}}],["4285f4",{"_index":809,"title":{},"body":{"components/FieldFilterPopupDialog.html":{}}}],["4px",{"_index":202,"title":{},"body":{"components/DataTableHeaderComponent.html":{}}}],["50",{"_index":980,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["5px",{"_index":172,"title":{},"body":{"components/DataTableHeaderComponent.html":{},"components/DataTablePaginationComponent.html":{}}}],["5rem",{"_index":199,"title":{},"body":{"components/DataTableHeaderComponent.html":{},"components/DataTablePaginationComponent.html":{}}}],["6",{"_index":1329,"title":{},"body":{"overview.html":{}}}],["6.4.0",{"_index":1035,"title":{},"body":{"dependencies.html":{}}}],["6px",{"_index":748,"title":{},"body":{"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{}}}],["7",{"_index":1328,"title":{},"body":{"overview.html":{}}}],["7.0.0",{"_index":1008,"title":{},"body":{"dependencies.html":{}}}],["7.1.3",{"_index":1027,"title":{},"body":{"dependencies.html":{}}}],["7.2.4",{"_index":1002,"title":{},"body":{"dependencies.html":{}}}],["7.3.1",{"_index":1004,"title":{},"body":{"dependencies.html":{}}}],["8px",{"_index":801,"title":{},"body":{"components/FieldFilterPopupDialog.html":{}}}],["9",{"_index":146,"title":{},"body":{"components/DataTableHeaderComponent.html":{}}}],["9.12.0",{"_index":1022,"title":{},"body":{"dependencies.html":{}}}],["9_]+$/.test(this.property",{"_index":91,"title":{},"body":{"directives/DataTableColumnDirective.html":{}}}],["9_]/g",{"_index":93,"title":{},"body":{"directives/DataTableColumnDirective.html":{}}}],["_dialogcloser",{"_index":605,"title":{},"body":{"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["_displaystyle",{"_index":937,"title":{},"body":{"directives/HideDirective.html":{}}}],["_elementref",{"_index":942,"title":{},"body":{"directives/HideDirective.html":{}}}],["_initcellclass",{"_index":21,"title":{},"body":{"directives/DataTableColumnDirective.html":{}}}],["_listeners",{"_index":455,"title":{},"body":{"components/DataTableRowComponent.html":{}}}],["_prevcondition",{"_index":938,"title":{},"body":{"directives/HideDirective.html":{}}}],["_selected",{"_index":456,"title":{},"body":{"components/DataTableRowComponent.html":{}}}],["_this",{"_index":457,"title":{},"body":{"components/DataTableRowComponent.html":{}}}],["a[params.sortby",{"_index":435,"title":{},"body":{"classes/DataTableResource.html":{}}}],["a[params.sortby].localecompare(b[params.sortby",{"_index":436,"title":{},"body":{"classes/DataTableResource.html":{}}}],["above",{"_index":1234,"title":{},"body":{"index.html":{},"license.html":{}}}],["absolute",{"_index":191,"title":{},"body":{"components/DataTableHeaderComponent.html":{}}}],["accent",{"_index":817,"title":{},"body":{"components/FieldFilterPopupDialog.html":{}}}],["accent.mat",{"_index":825,"title":{},"body":{"components/FieldFilterPopupDialog.html":{}}}],["access",{"_index":1250,"title":{},"body":{"index.html":{}}}],["accessibility",{"_index":1059,"title":{},"body":{"index.html":{}}}],["accessors",{"_index":325,"title":{},"body":{"components/DataTablePaginationComponent.html":{},"components/DataTableRowComponent.html":{},"directives/HideDirective.html":{}}}],["action",{"_index":1318,"title":{},"body":{"license.html":{}}}],["actions",{"_index":1231,"title":{},"body":{"index.html":{}}}],["activate",{"_index":1350,"title":{},"body":{"miscellaneous/variables.html":{}}}],["activeitem",{"_index":601,"title":{},"body":{"interfaces/DialogData.html":{},"components/FieldFilterChooserPopupDialog.html":{}}}],["actual_component",{"_index":229,"title":{},"body":{"components/DataTableHeaderComponent.html":{},"components/DataTablePaginationComponent.html":{},"components/DataTableRowComponent.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{}}}],["add",{"_index":1359,"title":{},"body":{"miscellaneous/variables.html":{}}}],["added",{"_index":1347,"title":{},"body":{"miscellaneous/variables.html":{}}}],["addfilter",{"_index":529,"title":{},"body":{"interfaces/DataTableTranslations.html":{},"miscellaneous/variables.html":{}}}],["adds",{"_index":1345,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aliases",{"_index":1331,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":388,"title":{},"body":{"components/DataTablePaginationComponent.html":{},"components/DataTableRowComponent.html":{},"components/FieldFilterPopupDialog.html":{}}}],["all_filter_operators",{"_index":656,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["allows",{"_index":1143,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":1065,"title":{},"body":{"index.html":{},"license.html":{}}}],["angular",{"_index":1037,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":1001,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1003,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/a11y",{"_index":589,"title":{},"body":{"interfaces/DialogData.html":{},"components/FieldFilterChooserPopupDialog.html":{}}}],["angular/cdk/keycodes",{"_index":593,"title":{},"body":{"interfaces/DialogData.html":{},"components/FieldFilterChooserPopupDialog.html":{}}}],["angular/common",{"_index":254,"title":{},"body":{"modules/DataTableModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":1005,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":73,"title":{},"body":{"directives/DataTableColumnDirective.html":{},"components/DataTableHeaderComponent.html":{},"modules/DataTableModule.html":{},"components/DataTablePaginationComponent.html":{},"components/DataTableRowComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{},"directives/HideDirective.html":{},"pipes/MinPipe.html":{},"classes/MyErrorStateMatcher.html":{},"pipes/PixelConverter.html":{},"dependencies.html":{},"index.html":{}}}],["angular/flex",{"_index":1006,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":256,"title":{},"body":{"modules/DataTableModule.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1010,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":1011,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":259,"title":{},"body":{"modules/DataTableModule.html":{}}}],["angular/material/checkbox",{"_index":275,"title":{},"body":{"modules/DataTableModule.html":{}}}],["angular/material/chips",{"_index":261,"title":{},"body":{"modules/DataTableModule.html":{}}}],["angular/material/core",{"_index":281,"title":{},"body":{"modules/DataTableModule.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["angular/material/datepicker",{"_index":279,"title":{},"body":{"modules/DataTableModule.html":{}}}],["angular/material/dialog",{"_index":263,"title":{},"body":{"modules/DataTableModule.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["angular/material/form",{"_index":265,"title":{},"body":{"modules/DataTableModule.html":{}}}],["angular/material/icon",{"_index":267,"title":{},"body":{"modules/DataTableModule.html":{}}}],["angular/material/input",{"_index":269,"title":{},"body":{"modules/DataTableModule.html":{}}}],["angular/material/list",{"_index":271,"title":{},"body":{"modules/DataTableModule.html":{},"interfaces/DialogData.html":{},"components/FieldFilterChooserPopupDialog.html":{}}}],["angular/material/radio",{"_index":277,"title":{},"body":{"modules/DataTableModule.html":{}}}],["angular/material/select",{"_index":273,"title":{},"body":{"modules/DataTableModule.html":{}}}],["angular/platform",{"_index":1012,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["angular/router",{"_index":1014,"title":{},"body":{"dependencies.html":{}}}],["any[]).map(v",{"_index":909,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["api",{"_index":1109,"title":{},"body":{"index.html":{}}}],["app",{"_index":217,"title":{},"body":{"components/DataTableHeaderComponent.html":{},"components/DataTablePaginationComponent.html":{},"components/DataTableRowComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{},"classes/MyErrorStateMatcher.html":{},"index.html":{}}}],["appcomponent",{"_index":1105,"title":{},"body":{"index.html":{}}}],["appearance",{"_index":521,"title":{},"body":{"components/DataTableRowComponent.html":{}}}],["application",{"_index":1251,"title":{},"body":{"index.html":{}}}],["applied",{"_index":1177,"title":{},"body":{"index.html":{}}}],["apply",{"_index":530,"title":{},"body":{"interfaces/DataTableTranslations.html":{},"miscellaneous/variables.html":{}}}],["appmodule",{"_index":1106,"title":{},"body":{"index.html":{}}}],["apps",{"_index":1090,"title":{},"body":{"index.html":{}}}],["args",{"_index":963,"title":{},"body":{"pipes/MinPipe.html":{},"pipes/PixelConverter.html":{}}}],["arguments",{"_index":123,"title":{},"body":{"components/DataTableHeaderComponent.html":{}}}],["arising",{"_index":1321,"title":{},"body":{"license.html":{}}}],["array",{"_index":1205,"title":{},"body":{"index.html":{}}}],["array.isarray(value",{"_index":911,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["ascending",{"_index":1210,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["aspect",{"_index":1198,"title":{},"body":{"index.html":{}}}],["associated",{"_index":1274,"title":{},"body":{"license.html":{}}}],["authors",{"_index":1311,"title":{},"body":{"license.html":{}}}],["auto",{"_index":746,"title":{},"body":{"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{}}}],["autoreload",{"_index":1172,"title":{},"body":{"index.html":{}}}],["awesome",{"_index":1019,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["awesome.css",{"_index":1096,"title":{},"body":{"index.html":{}}}],["awesome/css/font",{"_index":1095,"title":{},"body":{"index.html":{}}}],["awesome@4.7.0",{"_index":1085,"title":{},"body":{"index.html":{}}}],["b",{"_index":433,"title":{},"body":{"classes/DataTableResource.html":{}}}],["b[params.sortby",{"_index":437,"title":{},"body":{"classes/DataTableResource.html":{}}}],["back",{"_index":359,"title":{},"body":{"components/DataTablePaginationComponent.html":{}}}],["background",{"_index":187,"title":{},"body":{"components/DataTableHeaderComponent.html":{},"components/DataTableRowComponent.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{}}}],["bar",{"_index":225,"title":{},"body":{"components/DataTableHeaderComponent.html":{},"components/DataTablePaginationComponent.html":{},"components/DataTableRowComponent.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{}}}],["bar.component",{"_index":308,"title":{},"body":{"modules/DataTableModule.html":{}}}],["bar.component.css",{"_index":835,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["bar.component.html",{"_index":836,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["bar.component.ts",{"_index":834,"title":{},"body":{"components/FilterBarComponent.html":{},"coverage.html":{}}}],["bar.component.ts:105",{"_index":855,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["bar.component.ts:120",{"_index":853,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["bar.component.ts:128",{"_index":851,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["bar.component.ts:18",{"_index":868,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["bar.component.ts:19",{"_index":869,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["bar.component.ts:20",{"_index":847,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["bar.component.ts:23",{"_index":866,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["bar.component.ts:24",{"_index":870,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["bar.component.ts:31",{"_index":858,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["bar.component.ts:34",{"_index":857,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["bar.component.ts:39",{"_index":849,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["bar.component.ts:54",{"_index":860,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["bar.component.ts:80",{"_index":863,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["bar.component.ts:95",{"_index":865,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["bar/field",{"_index":309,"title":{},"body":{"modules/DataTableModule.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{},"coverage.html":{}}}],["bar/filter",{"_index":307,"title":{},"body":{"modules/DataTableModule.html":{},"components/FilterBarComponent.html":{},"coverage.html":{}}}],["based",{"_index":1073,"title":{},"body":{"index.html":{}}}],["below",{"_index":1089,"title":{},"body":{"index.html":{}}}],["beta.23",{"_index":1009,"title":{},"body":{"dependencies.html":{}}}],["better",{"_index":1116,"title":{},"body":{"index.html":{}}}],["between",{"_index":794,"title":{},"body":{"components/FieldFilterPopupDialog.html":{}}}],["block",{"_index":171,"title":{},"body":{"components/DataTableHeaderComponent.html":{}}}],["bool",{"_index":661,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{},"interfaces/FilterableField.html":{},"classes/MyErrorStateMatcher.html":{},"miscellaneous/typealiases.html":{}}}],["boolean",{"_index":401,"title":{},"body":{"interfaces/DataTableParams.html":{},"classes/DataTableResource.html":{},"components/DataTableRowComponent.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"directives/HideDirective.html":{},"classes/MyErrorStateMatcher.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["booloperators",{"_index":655,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["bootstrap",{"_index":235,"title":{},"body":{"modules/DataTableModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["bootstrap@4.0.0",{"_index":1084,"title":{},"body":{"index.html":{}}}],["border",{"_index":512,"title":{},"body":{"components/DataTableRowComponent.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{}}}],["both",{"_index":1239,"title":{},"body":{"index.html":{}}}],["bottom",{"_index":167,"title":{},"body":{"components/DataTableHeaderComponent.html":{},"components/FieldFilterChooserPopupDialog.html":{},"index.html":{}}}],["box",{"_index":184,"title":{},"body":{"components/DataTableHeaderComponent.html":{},"components/DataTablePaginationComponent.html":{},"components/DataTableRowComponent.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{}}}],["browse",{"_index":1326,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1013,"title":{},"body":{"dependencies.html":{},"index.html":{},"modules.html":{}}}],["browsermodule",{"_index":1102,"title":{},"body":{"index.html":{}}}],["bruno",{"_index":1264,"title":{},"body":{"license.html":{}}}],["bruzzano",{"_index":1265,"title":{},"body":{"license.html":{}}}],["btn",{"_index":380,"title":{},"body":{"components/DataTablePaginationComponent.html":{}}}],["built",{"_index":1049,"title":{},"body":{"index.html":{}}}],["bundles",{"_index":1086,"title":{},"body":{"index.html":{}}}],["button",{"_index":174,"title":{},"body":{"components/DataTableHeaderComponent.html":{},"components/DataTablePaginationComponent.html":{},"components/DataTableRowComponent.html":{},"components/FieldFilterPopupDialog.html":{}}}],["button.mat",{"_index":822,"title":{},"body":{"components/FieldFilterPopupDialog.html":{}}}],["buttons",{"_index":1128,"title":{},"body":{"index.html":{}}}],["buy",{"_index":1232,"title":{},"body":{"index.html":{}}}],["c",{"_index":1262,"title":{},"body":{"license.html":{}}}],["c.header.tolowercase().indexof(searchquery.tolowercase",{"_index":615,"title":{},"body":{"interfaces/DialogData.html":{},"components/FieldFilterChooserPopupDialog.html":{}}}],["callback.type",{"_index":76,"title":{},"body":{"directives/DataTableColumnDirective.html":{},"modules/DataTableModule.html":{}}}],["callback.type.ts",{"_index":1333,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["cancel",{"_index":927,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["cases",{"_index":1240,"title":{},"body":{"index.html":{}}}],["cdk",{"_index":902,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["cell",{"_index":1215,"title":{},"body":{"index.html":{}}}],["cell_content",{"_index":1349,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cellcallback",{"_index":35,"title":{},"body":{"directives/DataTableColumnDirective.html":{},"modules/DataTableModule.html":{},"miscellaneous/typealiases.html":{}}}],["cellcolors",{"_index":25,"title":{},"body":{"directives/DataTableColumnDirective.html":{}}}],["celltemplate",{"_index":16,"title":{},"body":{"directives/DataTableColumnDirective.html":{}}}],["center",{"_index":506,"title":{},"body":{"components/DataTableRowComponent.html":{},"components/FieldFilterPopupDialog.html":{}}}],["change",{"_index":623,"title":{},"body":{"interfaces/DialogData.html":{},"components/FieldFilterChooserPopupDialog.html":{}}}],["changing",{"_index":429,"title":{},"body":{"classes/DataTableResource.html":{}}}],["charge",{"_index":1270,"title":{},"body":{"license.html":{}}}],["check",{"_index":790,"title":{},"body":{"components/FieldFilterPopupDialog.html":{}}}],["checkbox",{"_index":815,"title":{},"body":{"components/FieldFilterPopupDialog.html":{},"index.html":{}}}],["checkbox:not(.mat",{"_index":814,"title":{},"body":{"components/FieldFilterPopupDialog.html":{}}}],["checked",{"_index":695,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["checked.mat",{"_index":819,"title":{},"body":{"components/FieldFilterPopupDialog.html":{}}}],["chipclicked",{"_index":839,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["chipclicked(event",{"_index":848,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["chooser",{"_index":220,"title":{},"body":{"components/DataTableHeaderComponent.html":{},"modules/DataTableModule.html":{},"components/DataTablePaginationComponent.html":{},"components/DataTableRowComponent.html":{},"interfaces/DialogData.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{},"coverage.html":{}}}],["circle",{"_index":824,"title":{},"body":{"components/FieldFilterPopupDialog.html":{}}}],["claim",{"_index":1314,"title":{},"body":{"license.html":{}}}],["class",{"_index":78,"title":{"classes/DataTableResource.html":{},"classes/MyErrorStateMatcher.html":{}},"body":{"directives/DataTableColumnDirective.html":{},"components/DataTableHeaderComponent.html":{},"modules/DataTableModule.html":{},"components/DataTablePaginationComponent.html":{},"classes/DataTableResource.html":{},"components/DataTableRowComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{},"directives/HideDirective.html":{},"pipes/MinPipe.html":{},"classes/MyErrorStateMatcher.html":{},"pipes/PixelConverter.html":{},"coverage.html":{},"index.html":{}}}],["class=\"btn",{"_index":379,"title":{},"body":{"components/DataTablePaginationComponent.html":{}}}],["classes",{"_index":402,"title":{},"body":{"classes/DataTableResource.html":{},"classes/MyErrorStateMatcher.html":{},"overview.html":{}}}],["cli.json",{"_index":1087,"title":{},"body":{"index.html":{}}}],["click",{"_index":498,"title":{},"body":{"components/DataTableRowComponent.html":{},"index.html":{}}}],["clickable",{"_index":524,"title":{},"body":{"components/DataTableRowComponent.html":{}}}],["clone",{"_index":917,"title":{},"body":{"components/FilterBarComponent.html":{},"index.html":{}}}],["clonedfilter",{"_index":922,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["clonedfilter.field.datatype",{"_index":925,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["clonedfilter.operator",{"_index":924,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["clonedfilter.value",{"_index":926,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["close",{"_index":786,"title":{},"body":{"components/FieldFilterPopupDialog.html":{}}}],["cluster_datatablemodule",{"_index":238,"title":{},"body":{"modules/DataTableModule.html":{},"overview.html":{}}}],["cluster_datatablemodule_declarations",{"_index":239,"title":{},"body":{"modules/DataTableModule.html":{},"overview.html":{}}}],["cluster_datatablemodule_exports",{"_index":240,"title":{},"body":{"modules/DataTableModule.html":{},"overview.html":{}}}],["code",{"_index":1255,"title":{},"body":{"index.html":{}}}],["collapsible",{"_index":1155,"title":{},"body":{"index.html":{}}}],["color",{"_index":513,"title":{},"body":{"components/DataTableRowComponent.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{},"index.html":{}}}],["column",{"_index":13,"title":{},"body":{"directives/DataTableColumnDirective.html":{},"components/DataTableHeaderComponent.html":{},"components/DataTableRowComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["column's",{"_index":1221,"title":{},"body":{"index.html":{}}}],["column'},{'name",{"_index":226,"title":{},"body":{"components/DataTableHeaderComponent.html":{},"components/DataTablePaginationComponent.html":{},"components/DataTableRowComponent.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{}}}],["column_name",{"_index":153,"title":{},"body":{"components/DataTableHeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["columnname",{"_index":150,"title":{},"body":{"components/DataTableHeaderComponent.html":{}}}],["columns",{"_index":1058,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["columnselectoropen",{"_index":111,"title":{},"body":{"components/DataTableHeaderComponent.html":{}}}],["commonmodule",{"_index":253,"title":{},"body":{"modules/DataTableModule.html":{}}}],["complex",{"_index":1224,"title":{},"body":{"index.html":{}}}],["component",{"_index":99,"title":{"components/DataTableHeaderComponent.html":{},"components/DataTablePaginationComponent.html":{},"components/DataTableRowComponent.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{}},"body":{"components/DataTableHeaderComponent.html":{},"components/DataTablePaginationComponent.html":{},"components/DataTableRowComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{},"classes/MyErrorStateMatcher.html":{},"coverage.html":{},"index.html":{}}}],["component's",{"_index":1108,"title":{},"body":{"index.html":{}}}],["component_template",{"_index":210,"title":{},"body":{"components/DataTableHeaderComponent.html":{},"components/DataTablePaginationComponent.html":{},"components/DataTableRowComponent.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{}}}],["components",{"_index":101,"title":{},"body":{"components/DataTableHeaderComponent.html":{},"modules/DataTableModule.html":{},"components/DataTablePaginationComponent.html":{},"components/DataTableRowComponent.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{},"overview.html":{}}}],["components/filter",{"_index":306,"title":{},"body":{"modules/DataTableModule.html":{}}}],["components/header/header.component",{"_index":304,"title":{},"body":{"modules/DataTableModule.html":{}}}],["components/pagination/pagination.component",{"_index":305,"title":{},"body":{"modules/DataTableModule.html":{}}}],["components/row/row.component",{"_index":74,"title":{},"body":{"directives/DataTableColumnDirective.html":{},"modules/DataTableModule.html":{}}}],["components/table/table.component",{"_index":302,"title":{},"body":{"modules/DataTableModule.html":{}}}],["conditions",{"_index":1293,"title":{},"body":{"license.html":{}}}],["connection",{"_index":1322,"title":{},"body":{"license.html":{}}}],["connects",{"_index":1168,"title":{},"body":{"index.html":{}}}],["considered",{"_index":1218,"title":{},"body":{"index.html":{}}}],["const",{"_index":147,"title":{},"body":{"components/DataTableHeaderComponent.html":{},"components/DataTablePaginationComponent.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{},"directives/HideDirective.html":{},"classes/MyErrorStateMatcher.html":{}}}],["constructor",{"_index":118,"title":{},"body":{"components/DataTableHeaderComponent.html":{},"components/DataTablePaginationComponent.html":{},"classes/DataTableResource.html":{},"components/DataTableRowComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{},"directives/HideDirective.html":{},"classes/MyErrorStateMatcher.html":{}}}],["constructor(@inject(forwardref",{"_index":137,"title":{},"body":{"components/DataTableHeaderComponent.html":{},"components/DataTablePaginationComponent.html":{},"components/DataTableRowComponent.html":{}}}],["constructor(_dialogcloser",{"_index":726,"title":{},"body":{"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{}}}],["constructor(_elementref",{"_index":940,"title":{},"body":{"directives/HideDirective.html":{}}}],["constructor(datatable",{"_index":119,"title":{},"body":{"components/DataTableHeaderComponent.html":{},"components/DataTablePaginationComponent.html":{},"components/DataTableRowComponent.html":{},"components/FilterBarComponent.html":{}}}],["constructor(items",{"_index":407,"title":{},"body":{"classes/DataTableResource.html":{}}}],["constructor(private",{"_index":421,"title":{},"body":{"classes/DataTableResource.html":{},"directives/HideDirective.html":{}}}],["contained",{"_index":1204,"title":{},"body":{"index.html":{}}}],["container",{"_index":740,"title":{},"body":{"components/FieldFilterChooserPopupDialog.html":{},"components/FilterBarComponent.html":{}}}],["contains",{"_index":570,"title":{},"body":{"interfaces/DataTableTranslations.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["content",{"_index":510,"title":{},"body":{"components/DataTableRowComponent.html":{},"components/FieldFilterPopupDialog.html":{},"index.html":{}}}],["contentchild",{"_index":71,"title":{},"body":{"directives/DataTableColumnDirective.html":{}}}],["contentchild('datatablecell",{"_index":64,"title":{},"body":{"directives/DataTableColumnDirective.html":{}}}],["contentchild('datatableheader",{"_index":66,"title":{},"body":{"directives/DataTableColumnDirective.html":{}}}],["contract",{"_index":1319,"title":{},"body":{"license.html":{}}}],["control",{"_index":640,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["control.dirty",{"_index":650,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["control.invalid",{"_index":649,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["control.touched",{"_index":651,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["controllers",{"_index":384,"title":{},"body":{"components/DataTablePaginationComponent.html":{}}}],["controls",{"_index":1137,"title":{},"body":{"index.html":{}}}],["convertfiltertoemittedfilter",{"_index":840,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["convertfiltertoemittedfilter(filter",{"_index":850,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["copies",{"_index":1287,"title":{},"body":{"license.html":{}}}],["copy",{"_index":425,"title":{},"body":{"classes/DataTableResource.html":{},"license.html":{}}}],["copyright",{"_index":1261,"title":{},"body":{"license.html":{}}}],["core",{"_index":1016,"title":{},"body":{"dependencies.html":{}}}],["coulumn",{"_index":1127,"title":{},"body":{"index.html":{}}}],["count",{"_index":405,"title":{},"body":{"classes/DataTableResource.html":{},"index.html":{}}}],["coverage",{"_index":973,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["covertriggeringelement",{"_index":895,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["css",{"_index":1075,"title":{},"body":{"index.html":{}}}],["cursor",{"_index":515,"title":{},"body":{"components/DataTableRowComponent.html":{},"components/FilterBarComponent.html":{}}}],["custom",{"_index":1176,"title":{},"body":{"index.html":{}}}],["d",{"_index":767,"title":{},"body":{"components/FieldFilterPopupDialog.html":{}}}],["d.getdate",{"_index":713,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["d.getfullyear()].join",{"_index":715,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["d.getmonth",{"_index":714,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["d9d9d9",{"_index":755,"title":{},"body":{"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{}}}],["damages",{"_index":1315,"title":{},"body":{"license.html":{}}}],["data",{"_index":11,"title":{},"body":{"directives/DataTableColumnDirective.html":{},"components/DataTableHeaderComponent.html":{},"components/DataTablePaginationComponent.html":{},"components/DataTableRowComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{},"classes/MyErrorStateMatcher.html":{},"index.html":{}}}],["data.fieldfilter.field.header",{"_index":785,"title":{},"body":{"components/FieldFilterPopupDialog.html":{}}}],["data.fields",{"_index":609,"title":{},"body":{"interfaces/DialogData.html":{},"components/FieldFilterChooserPopupDialog.html":{}}}],["data.labels.apply",{"_index":788,"title":{},"body":{"components/FieldFilterPopupDialog.html":{}}}],["data.labels.filteroperators[operator",{"_index":787,"title":{},"body":{"components/FieldFilterPopupDialog.html":{}}}],["datatable",{"_index":113,"title":{},"body":{"components/DataTableHeaderComponent.html":{},"components/DataTablePaginationComponent.html":{},"components/DataTableRowComponent.html":{},"components/FilterBarComponent.html":{},"index.html":{}}}],["datatable.filters",{"_index":877,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["datatable.itemcount",{"_index":377,"title":{},"body":{"components/DataTablePaginationComponent.html":{}}}],["datatable.labels.pagenumberlabel",{"_index":373,"title":{},"body":{"components/DataTablePaginationComponent.html":{}}}],["datatable.labels.paginationtotalpages",{"_index":374,"title":{},"body":{"components/DataTablePaginationComponent.html":{}}}],["datatable.lastpage",{"_index":376,"title":{},"body":{"components/DataTablePaginationComponent.html":{}}}],["datatablecell",{"_index":1228,"title":{},"body":{"index.html":{}}}],["datatablecolumndirective",{"_index":1,"title":{"directives/DataTableColumnDirective.html":{}},"body":{"directives/DataTableColumnDirective.html":{},"components/DataTableHeaderComponent.html":{},"modules/DataTableModule.html":{},"components/DataTablePaginationComponent.html":{},"components/DataTableRowComponent.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["datatablecomponent",{"_index":120,"title":{},"body":{"components/DataTableHeaderComponent.html":{},"modules/DataTableModule.html":{},"components/DataTablePaginationComponent.html":{},"components/DataTableRowComponent.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["datatableheader",{"_index":1227,"title":{},"body":{"index.html":{}}}],["datatableheadercomponent",{"_index":100,"title":{"components/DataTableHeaderComponent.html":{}},"body":{"components/DataTableHeaderComponent.html":{},"modules/DataTableModule.html":{},"components/DataTablePaginationComponent.html":{},"components/DataTableRowComponent.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["datatablemodule",{"_index":231,"title":{"modules/DataTableModule.html":{}},"body":{"modules/DataTableModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["datatablemodule.forroot",{"_index":1104,"title":{},"body":{"index.html":{}}}],["datatablepaginationcomponent",{"_index":213,"title":{"components/DataTablePaginationComponent.html":{}},"body":{"components/DataTableHeaderComponent.html":{},"modules/DataTableModule.html":{},"components/DataTablePaginationComponent.html":{},"components/DataTableRowComponent.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["datatableparams",{"_index":300,"title":{"interfaces/DataTableParams.html":{}},"body":{"modules/DataTableModule.html":{},"interfaces/DataTableParams.html":{},"classes/DataTableResource.html":{},"coverage.html":{}}}],["datatableresource",{"_index":297,"title":{"classes/DataTableResource.html":{}},"body":{"modules/DataTableModule.html":{},"classes/DataTableResource.html":{},"coverage.html":{}}}],["datatablerow",{"_index":452,"title":{},"body":{"components/DataTableRowComponent.html":{}}}],["datatablerow]'},{'name",{"_index":215,"title":{},"body":{"components/DataTableHeaderComponent.html":{},"components/DataTablePaginationComponent.html":{},"components/DataTableRowComponent.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{}}}],["datatablerowcomponent",{"_index":55,"title":{"components/DataTableRowComponent.html":{}},"body":{"directives/DataTableColumnDirective.html":{},"components/DataTableHeaderComponent.html":{},"modules/DataTableModule.html":{},"components/DataTablePaginationComponent.html":{},"components/DataTableRowComponent.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["datatables",{"_index":1099,"title":{},"body":{"index.html":{}}}],["datatabletranslations",{"_index":292,"title":{"interfaces/DataTableTranslations.html":{}},"body":{"modules/DataTableModule.html":{},"interfaces/DataTableTranslations.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["datatype",{"_index":665,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"interfaces/FilterableField.html":{},"classes/MyErrorStateMatcher.html":{}}}],["date",{"_index":531,"title":{},"body":{"interfaces/DataTableTranslations.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"interfaces/FilterableField.html":{},"classes/MyErrorStateMatcher.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["date(number(split[2",{"_index":720,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["dblclick",{"_index":501,"title":{},"body":{"components/DataTableRowComponent.html":{}}}],["deal",{"_index":1276,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1323,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":234,"title":{},"body":{"modules/DataTableModule.html":{},"overview.html":{}}}],["declare",{"_index":562,"title":{},"body":{"interfaces/DataTableTranslations.html":{},"interfaces/FilterableField.html":{}}}],["decorators",{"_index":63,"title":{},"body":{"directives/DataTableColumnDirective.html":{},"components/DataTableHeaderComponent.html":{},"components/DataTablePaginationComponent.html":{},"components/DataTableRowComponent.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{}}}],["deep",{"_index":811,"title":{},"body":{"components/FieldFilterPopupDialog.html":{}}}],["default",{"_index":41,"title":{},"body":{"directives/DataTableColumnDirective.html":{},"components/DataTableHeaderComponent.html":{},"components/DataTablePaginationComponent.html":{},"components/DataTableRowComponent.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{},"directives/HideDirective.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defaulted",{"_index":1152,"title":{},"body":{"index.html":{}}}],["defaulttranslations",{"_index":994,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":36,"title":{},"body":{"directives/DataTableColumnDirective.html":{},"components/DataTableHeaderComponent.html":{},"modules/DataTableModule.html":{},"components/DataTablePaginationComponent.html":{},"interfaces/DataTableParams.html":{},"classes/DataTableResource.html":{},"components/DataTableRowComponent.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{},"directives/HideDirective.html":{},"pipes/MinPipe.html":{},"classes/MyErrorStateMatcher.html":{},"pipes/PixelConverter.html":{}}}],["defines",{"_index":1208,"title":{},"body":{"index.html":{}}}],["demo",{"_index":1244,"title":{},"body":{"index.html":{}}}],["demos",{"_index":1254,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":233,"title":{"dependencies.html":{}},"body":{"modules/DataTableModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["descending",{"_index":1211,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["description",{"_index":967,"title":{},"body":{"classes/MyErrorStateMatcher.html":{}}}],["developer",{"_index":1167,"title":{},"body":{"index.html":{}}}],["developers",{"_index":1225,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":289,"title":{},"body":{"modules/DataTableModule.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{},"classes/MyErrorStateMatcher.html":{},"dependencies.html":{}}}],["dialog'},{'name",{"_index":222,"title":{},"body":{"components/DataTableHeaderComponent.html":{},"components/DataTablePaginationComponent.html":{},"components/DataTableRowComponent.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{}}}],["dialog.css",{"_index":597,"title":{},"body":{"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["dialog.html",{"_index":596,"title":{},"body":{"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["dialog.ts",{"_index":578,"title":{},"body":{"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{},"coverage.html":{}}}],["dialog.ts:104",{"_index":770,"title":{},"body":{"components/FieldFilterPopupDialog.html":{}}}],["dialog.ts:108",{"_index":769,"title":{},"body":{"components/FieldFilterPopupDialog.html":{}}}],["dialog.ts:112",{"_index":766,"title":{},"body":{"components/FieldFilterPopupDialog.html":{}}}],["dialog.ts:116",{"_index":774,"title":{},"body":{"components/FieldFilterPopupDialog.html":{}}}],["dialog.ts:17",{"_index":969,"title":{},"body":{"classes/MyErrorStateMatcher.html":{}}}],["dialog.ts:24",{"_index":738,"title":{},"body":{"components/FieldFilterChooserPopupDialog.html":{}}}],["dialog.ts:25",{"_index":737,"title":{},"body":{"components/FieldFilterChooserPopupDialog.html":{}}}],["dialog.ts:26",{"_index":734,"title":{},"body":{"components/FieldFilterChooserPopupDialog.html":{}}}],["dialog.ts:28",{"_index":736,"title":{},"body":{"components/FieldFilterChooserPopupDialog.html":{}}}],["dialog.ts:29",{"_index":727,"title":{},"body":{"components/FieldFilterChooserPopupDialog.html":{}}}],["dialog.ts:30",{"_index":782,"title":{},"body":{"components/FieldFilterPopupDialog.html":{}}}],["dialog.ts:31",{"_index":783,"title":{},"body":{"components/FieldFilterPopupDialog.html":{}}}],["dialog.ts:32",{"_index":778,"title":{},"body":{"components/FieldFilterPopupDialog.html":{}}}],["dialog.ts:33",{"_index":735,"title":{},"body":{"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{}}}],["dialog.ts:34",{"_index":776,"title":{},"body":{"components/FieldFilterPopupDialog.html":{}}}],["dialog.ts:38",{"_index":731,"title":{},"body":{"components/FieldFilterChooserPopupDialog.html":{}}}],["dialog.ts:41",{"_index":730,"title":{},"body":{"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{}}}],["dialog.ts:42",{"_index":777,"title":{},"body":{"components/FieldFilterPopupDialog.html":{}}}],["dialog.ts:43",{"_index":779,"title":{},"body":{"components/FieldFilterPopupDialog.html":{}}}],["dialog.ts:44",{"_index":780,"title":{},"body":{"components/FieldFilterPopupDialog.html":{}}}],["dialog.ts:45",{"_index":732,"title":{},"body":{"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{}}}],["dialog.ts:46",{"_index":784,"title":{},"body":{"components/FieldFilterPopupDialog.html":{}}}],["dialog.ts:47",{"_index":781,"title":{},"body":{"components/FieldFilterPopupDialog.html":{}}}],["dialog.ts:49",{"_index":728,"title":{},"body":{"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{}}}],["dialog.ts:53",{"_index":729,"title":{},"body":{"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{}}}],["dialog.ts:69",{"_index":772,"title":{},"body":{"components/FieldFilterPopupDialog.html":{}}}],["dialog.ts:72",{"_index":773,"title":{},"body":{"components/FieldFilterPopupDialog.html":{}}}],["dialog.ts:83",{"_index":775,"title":{},"body":{"components/FieldFilterPopupDialog.html":{}}}],["dialog.ts:93",{"_index":771,"title":{},"body":{"components/FieldFilterPopupDialog.html":{}}}],["dialog.ts:97",{"_index":768,"title":{},"body":{"components/FieldFilterPopupDialog.html":{}}}],["dialog/field",{"_index":310,"title":{},"body":{"modules/DataTableModule.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{},"classes/MyErrorStateMatcher.html":{},"coverage.html":{}}}],["dialog/lib/popup",{"_index":872,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["dialog/popup",{"_index":873,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["dialogdata",{"_index":576,"title":{"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{}},"body":{"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{},"coverage.html":{}}}],["dialogref",{"_index":882,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["dialogref.afterclosed().subscribe((result",{"_index":884,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["dialogresult",{"_index":606,"title":{},"body":{"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["direction",{"_index":803,"title":{},"body":{"components/FieldFilterPopupDialog.html":{}}}],["directive",{"_index":0,"title":{"directives/DataTableColumnDirective.html":{},"directives/HideDirective.html":{}},"body":{"directives/DataTableColumnDirective.html":{},"components/DataTableHeaderComponent.html":{},"components/DataTablePaginationComponent.html":{},"components/DataTableRowComponent.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{},"directives/HideDirective.html":{},"coverage.html":{}}}],["directives",{"_index":2,"title":{},"body":{"directives/DataTableColumnDirective.html":{},"components/DataTableHeaderComponent.html":{},"modules/DataTableModule.html":{},"components/DataTablePaginationComponent.html":{},"components/DataTableRowComponent.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{},"directives/HideDirective.html":{},"overview.html":{}}}],["directives/column/column.directive",{"_index":303,"title":{},"body":{"modules/DataTableModule.html":{}}}],["dirty",{"_index":641,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["disabled).mat",{"_index":816,"title":{},"body":{"components/FieldFilterPopupDialog.html":{}}}],["display",{"_index":169,"title":{},"body":{"components/DataTableHeaderComponent.html":{},"components/FieldFilterPopupDialog.html":{},"directives/HideDirective.html":{}}}],["displayed",{"_index":1187,"title":{},"body":{"index.html":{}}}],["displayindex",{"_index":464,"title":{},"body":{"components/DataTableRowComponent.html":{}}}],["displaystyle",{"_index":956,"title":{},"body":{"directives/HideDirective.html":{}}}],["displaytext",{"_index":935,"title":{},"body":{"interfaces/FilterableField.html":{}}}],["distribute",{"_index":1284,"title":{},"body":{"license.html":{}}}],["docs",{"_index":1257,"title":{},"body":{"index.html":{}}}],["document:click",{"_index":116,"title":{},"body":{"components/DataTableHeaderComponent.html":{}}}],["document:click(event",{"_index":125,"title":{},"body":{"components/DataTableHeaderComponent.html":{}}}],["document:keyup",{"_index":117,"title":{},"body":{"components/DataTableHeaderComponent.html":{}}}],["document:keyup(event",{"_index":127,"title":{},"body":{"components/DataTableHeaderComponent.html":{}}}],["documentation",{"_index":974,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["dom",{"_index":104,"title":{},"body":{"components/DataTableHeaderComponent.html":{},"components/DataTablePaginationComponent.html":{},"components/DataTableRowComponent.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{}}}],["down",{"_index":1171,"title":{},"body":{"index.html":{}}}],["down_arrow",{"_index":590,"title":{},"body":{"interfaces/DialogData.html":{},"components/FieldFilterChooserPopupDialog.html":{}}}],["drag",{"_index":996,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["drag(event",{"_index":1045,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dynamic",{"_index":595,"title":{},"body":{"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{},"dependencies.html":{}}}],["each",{"_index":1154,"title":{},"body":{"index.html":{}}}],["element",{"_index":208,"title":{},"body":{"components/DataTableHeaderComponent.html":{},"components/DataTablePaginationComponent.html":{},"components/DataTableRowComponent.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{}}}],["elementref",{"_index":62,"title":{},"body":{"directives/DataTableColumnDirective.html":{},"components/DataTableHeaderComponent.html":{},"components/DataTablePaginationComponent.html":{},"components/DataTableRowComponent.html":{},"directives/HideDirective.html":{}}}],["elemref",{"_index":121,"title":{},"body":{"components/DataTableHeaderComponent.html":{}}}],["empty",{"_index":574,"title":{},"body":{"interfaces/DataTableTranslations.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{},"classes/MyErrorStateMatcher.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["enable",{"_index":1136,"title":{},"body":{"index.html":{}}}],["enabled",{"_index":1203,"title":{},"body":{"index.html":{}}}],["end",{"_index":808,"title":{},"body":{"components/FieldFilterPopupDialog.html":{}}}],["ends",{"_index":573,"title":{},"body":{"interfaces/DataTableTranslations.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["enter",{"_index":591,"title":{},"body":{"interfaces/DialogData.html":{},"components/FieldFilterChooserPopupDialog.html":{},"miscellaneous/variables.html":{}}}],["entire",{"_index":1178,"title":{},"body":{"index.html":{}}}],["entrycomponents",{"_index":247,"title":{},"body":{"modules/DataTableModule.html":{}}}],["enum",{"_index":659,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{},"interfaces/FilterableField.html":{},"classes/MyErrorStateMatcher.html":{},"miscellaneous/typealiases.html":{}}}],["enumoperators",{"_index":654,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["eq",{"_index":568,"title":{},"body":{"interfaces/DataTableTranslations.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["equal",{"_index":1361,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error",{"_index":638,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["errorstatematcher",{"_index":636,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["es",{"_index":1024,"title":{},"body":{"dependencies.html":{}}}],["especially",{"_index":1119,"title":{},"body":{"index.html":{}}}],["event",{"_index":124,"title":{},"body":{"components/DataTableHeaderComponent.html":{},"components/DataTablePaginationComponent.html":{},"components/DataTableRowComponent.html":{},"interfaces/DialogData.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FilterBarComponent.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["event.currenttarget",{"_index":879,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["event.keycode",{"_index":144,"title":{},"body":{"components/DataTableHeaderComponent.html":{},"interfaces/DialogData.html":{},"components/FieldFilterChooserPopupDialog.html":{}}}],["event.stopimmediatepropagation",{"_index":620,"title":{},"body":{"interfaces/DialogData.html":{},"components/FieldFilterChooserPopupDialog.html":{}}}],["event.target).checked",{"_index":149,"title":{},"body":{"components/DataTableHeaderComponent.html":{}}}],["event.target).parentelement.textcontent.trim",{"_index":151,"title":{},"body":{"components/DataTableHeaderComponent.html":{}}}],["event.target.value",{"_index":371,"title":{},"body":{"components/DataTablePaginationComponent.html":{}}}],["eventemitter",{"_index":470,"title":{},"body":{"components/DataTableRowComponent.html":{}}}],["examples",{"_index":1258,"title":{},"body":{"index.html":{}}}],["expand",{"_index":507,"title":{},"body":{"components/DataTableRowComponent.html":{},"miscellaneous/variables.html":{}}}],["expandable",{"_index":1054,"title":{},"body":{"index.html":{}}}],["expandablerow",{"_index":1153,"title":{},"body":{"index.html":{}}}],["expandcolumn",{"_index":532,"title":{},"body":{"interfaces/DataTableTranslations.html":{},"miscellaneous/variables.html":{}}}],["expanded",{"_index":458,"title":{},"body":{"components/DataTableRowComponent.html":{}}}],["expandrow",{"_index":533,"title":{},"body":{"interfaces/DataTableTranslations.html":{},"miscellaneous/variables.html":{}}}],["experience",{"_index":1117,"title":{},"body":{"index.html":{}}}],["export",{"_index":77,"title":{},"body":{"directives/DataTableColumnDirective.html":{},"components/DataTableHeaderComponent.html":{},"modules/DataTableModule.html":{},"components/DataTablePaginationComponent.html":{},"interfaces/DataTableParams.html":{},"classes/DataTableResource.html":{},"components/DataTableRowComponent.html":{},"interfaces/DataTableTranslations.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"interfaces/Filter.html":{},"components/FilterBarComponent.html":{},"interfaces/FilterableField.html":{},"directives/HideDirective.html":{},"pipes/MinPipe.html":{},"classes/MyErrorStateMatcher.html":{},"pipes/PixelConverter.html":{},"index.html":{}}}],["exports",{"_index":237,"title":{},"body":{"modules/DataTableModule.html":{},"overview.html":{}}}],["express",{"_index":1302,"title":{},"body":{"license.html":{}}}],["extract",{"_index":918,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["f5f5f5",{"_index":749,"title":{},"body":{"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{}}}],["false",{"_index":43,"title":{},"body":{"directives/DataTableColumnDirective.html":{},"components/DataTableHeaderComponent.html":{},"classes/DataTableResource.html":{},"components/DataTableRowComponent.html":{},"interfaces/DataTableTranslations.html":{},"interfaces/DialogData.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FilterBarComponent.html":{},"directives/HideDirective.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["features",{"_index":1051,"title":{},"body":{"index.html":{}}}],["few",{"_index":1253,"title":{},"body":{"index.html":{}}}],["fff",{"_index":797,"title":{},"body":{"components/FieldFilterPopupDialog.html":{}}}],["field",{"_index":218,"title":{},"body":{"components/DataTableHeaderComponent.html":{},"modules/DataTableModule.html":{},"components/DataTablePaginationComponent.html":{},"components/DataTableRowComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"interfaces/Filter.html":{},"components/FilterBarComponent.html":{},"classes/MyErrorStateMatcher.html":{},"miscellaneous/variables.html":{}}}],["field.haserror('matdatepickerparse",{"_index":701,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["field.haserror('pattern",{"_index":705,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["field.haserror('required",{"_index":703,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["field.header",{"_index":739,"title":{},"body":{"components/FieldFilterChooserPopupDialog.html":{}}}],["field.type",{"_index":587,"title":{},"body":{"interfaces/DialogData.html":{},"components/FieldFilterChooserPopupDialog.html":{},"interfaces/Filter.html":{},"components/FilterBarComponent.html":{}}}],["field.type.ts",{"_index":931,"title":{},"body":{"interfaces/FilterableField.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["fieldchooserdialogref",{"_index":837,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["fielddatatype",{"_index":933,"title":{},"body":{"interfaces/FilterableField.html":{},"miscellaneous/typealiases.html":{}}}],["fieldfilter",{"_index":632,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["fieldfilterchooserpopupdialog",{"_index":216,"title":{"components/FieldFilterChooserPopupDialog.html":{}},"body":{"components/DataTableHeaderComponent.html":{},"modules/DataTableModule.html":{},"components/DataTablePaginationComponent.html":{},"components/DataTableRowComponent.html":{},"interfaces/DialogData.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["fieldfilterpopupdialog",{"_index":223,"title":{"components/FieldFilterPopupDialog.html":{}},"body":{"components/DataTableHeaderComponent.html":{},"modules/DataTableModule.html":{},"components/DataTablePaginationComponent.html":{},"components/DataTableRowComponent.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{},"classes/MyErrorStateMatcher.html":{},"coverage.html":{},"overview.html":{}}}],["fieldfilterpopupdialog.all_filter_operators[this.datatype",{"_index":674,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["fieldfilterpopupdialog.booloperators",{"_index":662,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["fieldfilterpopupdialog.enumoperators",{"_index":660,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["fieldfilterpopupdialog.numericoperators",{"_index":657,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["fieldfilterpopupdialog.textualoperators",{"_index":658,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["fields",{"_index":579,"title":{},"body":{"interfaces/DialogData.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FilterBarComponent.html":{}}}],["fieldsearchquery",{"_index":602,"title":{},"body":{"interfaces/DialogData.html":{},"components/FieldFilterChooserPopupDialog.html":{}}}],["fieldselected",{"_index":723,"title":{},"body":{"components/FieldFilterChooserPopupDialog.html":{}}}],["fieldselected(field",{"_index":616,"title":{},"body":{"interfaces/DialogData.html":{},"components/FieldFilterChooserPopupDialog.html":{}}}],["file",{"_index":5,"title":{},"body":{"directives/DataTableColumnDirective.html":{},"components/DataTableHeaderComponent.html":{},"modules/DataTableModule.html":{},"components/DataTablePaginationComponent.html":{},"interfaces/DataTableParams.html":{},"classes/DataTableResource.html":{},"components/DataTableRowComponent.html":{},"interfaces/DataTableTranslations.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"interfaces/Filter.html":{},"components/FilterBarComponent.html":{},"interfaces/FilterableField.html":{},"directives/HideDirective.html":{},"pipes/MinPipe.html":{},"classes/MyErrorStateMatcher.html":{},"pipes/PixelConverter.html":{},"coverage.html":{},"index.html":{}}}],["files",{"_index":1275,"title":{},"body":{"license.html":{}}}],["filter",{"_index":219,"title":{"interfaces/Filter.html":{}},"body":{"components/DataTableHeaderComponent.html":{},"modules/DataTableModule.html":{},"components/DataTablePaginationComponent.html":{},"classes/DataTableResource.html":{},"components/DataTableRowComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"interfaces/Filter.html":{},"components/FilterBarComponent.html":{},"classes/MyErrorStateMatcher.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filter.field.datatype",{"_index":908,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["filter.field.header",{"_index":914,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["filter.operator",{"_index":907,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["filter.value",{"_index":906,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["filterable",{"_index":833,"title":{},"body":{"interfaces/Filter.html":{}}}],["filterablefield",{"_index":581,"title":{"interfaces/FilterableField.html":{}},"body":{"interfaces/DialogData.html":{},"components/FieldFilterChooserPopupDialog.html":{},"interfaces/Filter.html":{},"components/FilterBarComponent.html":{},"interfaces/FilterableField.html":{},"coverage.html":{}}}],["filterbarcomponent",{"_index":224,"title":{"components/FilterBarComponent.html":{}},"body":{"components/DataTableHeaderComponent.html":{},"modules/DataTableModule.html":{},"components/DataTablePaginationComponent.html":{},"components/DataTableRowComponent.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["filteredfields",{"_index":603,"title":{},"body":{"interfaces/DialogData.html":{},"components/FieldFilterChooserPopupDialog.html":{}}}],["filteroperator",{"_index":563,"title":{},"body":{"interfaces/DataTableTranslations.html":{},"miscellaneous/typealiases.html":{}}}],["filteroperators",{"_index":534,"title":{},"body":{"interfaces/DataTableTranslations.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{},"miscellaneous/variables.html":{}}}],["filters",{"_index":838,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["filtervalue",{"_index":666,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["fired",{"_index":624,"title":{},"body":{"interfaces/DialogData.html":{},"components/FieldFilterChooserPopupDialog.html":{}}}],["first",{"_index":360,"title":{},"body":{"components/DataTablePaginationComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["firstpage",{"_index":535,"title":{},"body":{"interfaces/DataTableTranslations.html":{},"miscellaneous/variables.html":{}}}],["fitness",{"_index":1307,"title":{},"body":{"license.html":{}}}],["flex",{"_index":791,"title":{},"body":{"components/FieldFilterPopupDialog.html":{}}}],["float",{"_index":176,"title":{},"body":{"components/DataTableHeaderComponent.html":{}}}],["fn",{"_index":505,"title":{},"body":{"components/DataTableRowComponent.html":{}}}],["following",{"_index":1292,"title":{},"body":{"license.html":{}}}],["font",{"_index":203,"title":{},"body":{"components/DataTableHeaderComponent.html":{},"components/DataTableRowComponent.html":{},"components/FieldFilterPopupDialog.html":{},"dependencies.html":{},"index.html":{}}}],["footer",{"_index":807,"title":{},"body":{"components/FieldFilterPopupDialog.html":{}}}],["form",{"_index":646,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["form.submitted",{"_index":648,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["formatchipdisplaytext",{"_index":841,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["formatchipdisplaytext(filter",{"_index":852,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["formatdate",{"_index":759,"title":{},"body":{"components/FieldFilterPopupDialog.html":{}}}],["formatdate(d",{"_index":712,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["formatvalue",{"_index":842,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["formatvalue(filter",{"_index":854,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["formcontrol",{"_index":633,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["formgroupdirective",{"_index":634,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["formsmodule",{"_index":255,"title":{},"body":{"modules/DataTableModule.html":{}}}],["forroot",{"_index":249,"title":{},"body":{"modules/DataTableModule.html":{}}}],["forwardref",{"_index":133,"title":{},"body":{"components/DataTableHeaderComponent.html":{},"components/DataTablePaginationComponent.html":{},"components/DataTableRowComponent.html":{},"components/FilterBarComponent.html":{}}}],["free",{"_index":1269,"title":{},"body":{"license.html":{}}}],["function",{"_index":419,"title":{},"body":{"classes/DataTableResource.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"directives/HideDirective.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":1042,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1290,"title":{},"body":{"license.html":{}}}],["furthermore",{"_index":1072,"title":{},"body":{"index.html":{}}}],["gear",{"_index":1183,"title":{},"body":{"index.html":{}}}],["getcellcolor",{"_index":22,"title":{},"body":{"directives/DataTableColumnDirective.html":{}}}],["getcellcolor(row",{"_index":54,"title":{},"body":{"directives/DataTableColumnDirective.html":{}}}],["getdisplayindex",{"_index":483,"title":{},"body":{"components/DataTableRowComponent.html":{}}}],["geterrormessage",{"_index":760,"title":{},"body":{"components/FieldFilterPopupDialog.html":{}}}],["geterrormessage(field",{"_index":700,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["geterrormessage(filtervalueinput",{"_index":789,"title":{},"body":{"components/FieldFilterPopupDialog.html":{}}}],["getlimit",{"_index":344,"title":{},"body":{"components/DataTablePaginationComponent.html":{}}}],["getmaxpage",{"_index":342,"title":{},"body":{"components/DataTablePaginationComponent.html":{}}}],["getpage",{"_index":348,"title":{},"body":{"components/DataTablePaginationComponent.html":{}}}],["getpossibleoptiondisplaytext",{"_index":761,"title":{},"body":{"components/FieldFilterPopupDialog.html":{}}}],["getpossibleoptiondisplaytext(option",{"_index":710,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["getpossibleoptionvalue",{"_index":762,"title":{},"body":{"components/FieldFilterPopupDialog.html":{}}}],["getpossibleoptionvalue(option",{"_index":707,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["gets",{"_index":1173,"title":{},"body":{"index.html":{}}}],["getselected",{"_index":479,"title":{},"body":{"components/DataTableRowComponent.html":{}}}],["getting",{"_index":1046,"title":{"index.html":{},"license.html":{}},"body":{}}],["gettooltip",{"_index":459,"title":{},"body":{"components/DataTableRowComponent.html":{}}}],["given",{"_index":1200,"title":{},"body":{"index.html":{}}}],["granted",{"_index":1268,"title":{},"body":{"license.html":{}}}],["group",{"_index":197,"title":{},"body":{"components/DataTableHeaderComponent.html":{}}}],["gt",{"_index":565,"title":{},"body":{"interfaces/DataTableTranslations.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{},"miscellaneous/typealiases.html":{}}}],["gte",{"_index":567,"title":{},"body":{"interfaces/DataTableTranslations.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{},"miscellaneous/typealiases.html":{}}}],["handlekeydown",{"_index":724,"title":{},"body":{"components/FieldFilterChooserPopupDialog.html":{}}}],["handlekeydown(event",{"_index":618,"title":{},"body":{"interfaces/DialogData.html":{},"components/FieldFilterChooserPopupDialog.html":{}}}],["header",{"_index":26,"title":{},"body":{"directives/DataTableColumnDirective.html":{},"components/DataTableHeaderComponent.html":{},"components/FieldFilterPopupDialog.html":{},"interfaces/FilterableField.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["header'},{'name",{"_index":212,"title":{},"body":{"components/DataTableHeaderComponent.html":{},"components/DataTablePaginationComponent.html":{},"components/DataTableRowComponent.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{}}}],["header.component.css",{"_index":108,"title":{},"body":{"components/DataTableHeaderComponent.html":{}}}],["header.component.html",{"_index":110,"title":{},"body":{"components/DataTableHeaderComponent.html":{}}}],["headercolumnselector",{"_index":536,"title":{},"body":{"interfaces/DataTableTranslations.html":{},"miscellaneous/variables.html":{}}}],["headercolumnselectoradded",{"_index":537,"title":{},"body":{"interfaces/DataTableTranslations.html":{},"miscellaneous/variables.html":{}}}],["headercolumnselectorremoved",{"_index":538,"title":{},"body":{"interfaces/DataTableTranslations.html":{},"miscellaneous/variables.html":{}}}],["headerreload",{"_index":539,"title":{},"body":{"interfaces/DataTableTranslations.html":{},"miscellaneous/variables.html":{}}}],["headertemplate",{"_index":17,"title":{},"body":{"directives/DataTableColumnDirective.html":{}}}],["height",{"_index":164,"title":{},"body":{"components/DataTableHeaderComponent.html":{},"components/DataTableRowComponent.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{}}}],["hence",{"_index":1077,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":1267,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":804,"title":{},"body":{"components/FieldFilterPopupDialog.html":{}}}],["hide",{"_index":228,"title":{},"body":{"components/DataTableHeaderComponent.html":{},"components/DataTablePaginationComponent.html":{},"components/DataTableRowComponent.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{},"directives/HideDirective.html":{}}}],["hide(newcondition",{"_index":950,"title":{},"body":{"directives/HideDirective.html":{}}}],["hidedirective",{"_index":227,"title":{"directives/HideDirective.html":{}},"body":{"components/DataTableHeaderComponent.html":{},"modules/DataTableModule.html":{},"components/DataTablePaginationComponent.html":{},"components/DataTableRowComponent.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{},"directives/HideDirective.html":{},"coverage.html":{},"overview.html":{}}}],["highlight.js",{"_index":1021,"title":{},"body":{"dependencies.html":{}}}],["highly",{"_index":1112,"title":{},"body":{"index.html":{}}}],["hold",{"_index":1223,"title":{},"body":{"index.html":{}}}],["holders",{"_index":1312,"title":{},"body":{"license.html":{}}}],["holding",{"_index":1147,"title":{},"body":{"index.html":{}}}],["holds",{"_index":1134,"title":{},"body":{"index.html":{}}}],["hostlistener",{"_index":134,"title":{},"body":{"components/DataTableHeaderComponent.html":{}}}],["hostlistener('document:click",{"_index":138,"title":{},"body":{"components/DataTableHeaderComponent.html":{}}}],["hostlistener('document:keyup",{"_index":142,"title":{},"body":{"components/DataTableHeaderComponent.html":{}}}],["hostlisteners",{"_index":115,"title":{},"body":{"components/DataTableHeaderComponent.html":{}}}],["hovering",{"_index":1181,"title":{},"body":{"index.html":{}}}],["html",{"_index":207,"title":{},"body":{"components/DataTableHeaderComponent.html":{},"components/DataTablePaginationComponent.html":{},"components/DataTableRowComponent.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{}}}],["htmlelement).blur",{"_index":880,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["http:localhost:4200",{"_index":1249,"title":{},"body":{"index.html":{}}}],["icon",{"_index":802,"title":{},"body":{"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{},"index.html":{}}}],["id",{"_index":316,"title":{},"body":{"components/DataTablePaginationComponent.html":{}}}],["identifier",{"_index":975,"title":{},"body":{"coverage.html":{}}}],["identifies",{"_index":1195,"title":{},"body":{"index.html":{}}}],["ie",{"_index":1064,"title":{},"body":{"index.html":{}}}],["implemented",{"_index":1066,"title":{},"body":{"index.html":{}}}],["implements",{"_index":7,"title":{},"body":{"directives/DataTableColumnDirective.html":{},"components/DataTableRowComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{},"pipes/MinPipe.html":{},"classes/MyErrorStateMatcher.html":{},"pipes/PixelConverter.html":{}}}],["implied",{"_index":1303,"title":{},"body":{"license.html":{}}}],["import",{"_index":70,"title":{},"body":{"directives/DataTableColumnDirective.html":{},"components/DataTableHeaderComponent.html":{},"modules/DataTableModule.html":{},"components/DataTablePaginationComponent.html":{},"classes/DataTableResource.html":{},"components/DataTableRowComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"interfaces/Filter.html":{},"components/FilterBarComponent.html":{},"directives/HideDirective.html":{},"pipes/MinPipe.html":{},"classes/MyErrorStateMatcher.html":{},"pipes/PixelConverter.html":{},"index.html":{}}}],["important",{"_index":180,"title":{},"body":{"components/DataTableHeaderComponent.html":{},"components/DataTablePaginationComponent.html":{},"components/FieldFilterPopupDialog.html":{},"index.html":{}}}],["imports",{"_index":311,"title":{},"body":{"modules/DataTableModule.html":{},"index.html":{}}}],["include",{"_index":1079,"title":{},"body":{"index.html":{}}}],["included",{"_index":1296,"title":{},"body":{"license.html":{}}}],["including",{"_index":1052,"title":{},"body":{"index.html":{},"license.html":{}}}],["indeterminate.mat",{"_index":820,"title":{},"body":{"components/FieldFilterPopupDialog.html":{}}}],["index",{"_index":14,"title":{"index.html":{}},"body":{"directives/DataTableColumnDirective.html":{},"components/DataTableHeaderComponent.html":{},"components/DataTablePaginationComponent.html":{},"interfaces/DataTableParams.html":{},"classes/DataTableResource.html":{},"components/DataTableRowComponent.html":{},"interfaces/DataTableTranslations.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"interfaces/Filter.html":{},"components/FilterBarComponent.html":{},"interfaces/FilterableField.html":{},"directives/HideDirective.html":{},"classes/MyErrorStateMatcher.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":399,"title":{},"body":{"interfaces/DataTableParams.html":{}}}],["indexcolumn",{"_index":540,"title":{},"body":{"interfaces/DataTableTranslations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["indexcolumnheader",{"_index":1140,"title":{},"body":{"index.html":{}}}],["indexed",{"_index":1139,"title":{},"body":{"index.html":{}}}],["infix",{"_index":812,"title":{},"body":{"components/FieldFilterPopupDialog.html":{}}}],["info",{"_index":3,"title":{},"body":{"directives/DataTableColumnDirective.html":{},"components/DataTableHeaderComponent.html":{},"modules/DataTableModule.html":{},"components/DataTablePaginationComponent.html":{},"interfaces/DataTableParams.html":{},"classes/DataTableResource.html":{},"components/DataTableRowComponent.html":{},"interfaces/DataTableTranslations.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"interfaces/Filter.html":{},"components/FilterBarComponent.html":{},"interfaces/FilterableField.html":{},"directives/HideDirective.html":{},"pipes/MinPipe.html":{},"classes/MyErrorStateMatcher.html":{},"pipes/PixelConverter.html":{}}}],["inherit",{"_index":514,"title":{},"body":{"components/DataTableRowComponent.html":{}}}],["init",{"_index":79,"title":{},"body":{"directives/DataTableColumnDirective.html":{},"index.html":{}}}],["initdisplaystyle",{"_index":939,"title":{},"body":{"directives/HideDirective.html":{}}}],["initial",{"_index":527,"title":{},"body":{"components/DataTableRowComponent.html":{}}}],["inject",{"_index":135,"title":{},"body":{"components/DataTableHeaderComponent.html":{},"components/DataTablePaginationComponent.html":{},"components/DataTableRowComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["inject(forwardref",{"_index":874,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["inject(mat_dialog_data",{"_index":607,"title":{},"body":{"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["inject(popup_dialog_close",{"_index":604,"title":{},"body":{"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["inject(undefined",{"_index":131,"title":{},"body":{"components/DataTableHeaderComponent.html":{},"components/DataTablePaginationComponent.html":{},"components/DataTableRowComponent.html":{},"components/FilterBarComponent.html":{}}}],["inline",{"_index":170,"title":{},"body":{"components/DataTableHeaderComponent.html":{}}}],["inner",{"_index":823,"title":{},"body":{"components/FieldFilterPopupDialog.html":{}}}],["input",{"_index":72,"title":{},"body":{"directives/DataTableColumnDirective.html":{},"components/DataTableHeaderComponent.html":{},"components/DataTablePaginationComponent.html":{},"components/DataTableRowComponent.html":{},"components/FilterBarComponent.html":{},"directives/HideDirective.html":{}}}],["inputfocused",{"_index":843,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["inputfocused(event",{"_index":856,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["inputs",{"_index":24,"title":{},"body":{"directives/DataTableColumnDirective.html":{},"components/DataTablePaginationComponent.html":{},"components/DataTableRowComponent.html":{},"directives/HideDirective.html":{}}}],["inset",{"_index":752,"title":{},"body":{"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{}}}],["install",{"_index":1082,"title":{},"body":{"index.html":{}}}],["installation",{"_index":1098,"title":{},"body":{"index.html":{}}}],["instead",{"_index":428,"title":{},"body":{"classes/DataTableResource.html":{}}}],["interacting",{"_index":1118,"title":{},"body":{"index.html":{}}}],["interface",{"_index":392,"title":{"interfaces/DataTableParams.html":{},"interfaces/DataTableTranslations.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/Filter.html":{},"interfaces/FilterableField.html":{}},"body":{"interfaces/DataTableParams.html":{},"interfaces/DataTableTranslations.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"interfaces/Filter.html":{},"interfaces/FilterableField.html":{},"classes/MyErrorStateMatcher.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":393,"title":{},"body":{"interfaces/DataTableParams.html":{},"interfaces/DataTableTranslations.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/Filter.html":{},"interfaces/FilterableField.html":{},"overview.html":{}}}],["interpolateparams",{"_index":152,"title":{},"body":{"components/DataTableHeaderComponent.html":{}}}],["interpolateparams.column_name",{"_index":160,"title":{},"body":{"components/DataTableHeaderComponent.html":{}}}],["interpolateparams.title",{"_index":162,"title":{},"body":{"components/DataTableHeaderComponent.html":{}}}],["invalid",{"_index":639,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["invoked",{"_index":1160,"title":{},"body":{"index.html":{}}}],["isatleastonevalueselected",{"_index":669,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["isblank",{"_index":998,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isblank(obj",{"_index":948,"title":{},"body":{"directives/HideDirective.html":{},"miscellaneous/functions.html":{}}}],["isblank(this._prevcondition",{"_index":952,"title":{},"body":{"directives/HideDirective.html":{}}}],["ischecked",{"_index":148,"title":{},"body":{"components/DataTableHeaderComponent.html":{}}}],["iserrorstate",{"_index":968,"title":{},"body":{"classes/MyErrorStateMatcher.html":{}}}],["iserrorstate(control",{"_index":645,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["issubmitted",{"_index":647,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["isvaluechecked",{"_index":763,"title":{},"body":{"components/FieldFilterPopupDialog.html":{}}}],["isvaluechecked(value",{"_index":699,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["it's",{"_index":1111,"title":{},"body":{"index.html":{}}}],["italic",{"_index":205,"title":{},"body":{"components/DataTableHeaderComponent.html":{}}}],["item",{"_index":414,"title":{},"body":{"classes/DataTableResource.html":{},"components/DataTableRowComponent.html":{},"index.html":{}}}],["item's",{"_index":1213,"title":{},"body":{"index.html":{}}}],["item.active",{"_index":757,"title":{},"body":{"components/FieldFilterChooserPopupDialog.html":{}}}],["item.column",{"_index":198,"title":{},"body":{"components/DataTableHeaderComponent.html":{}}}],["itemcount",{"_index":1130,"title":{},"body":{"index.html":{}}}],["items",{"_index":410,"title":{},"body":{"classes/DataTableResource.html":{},"components/FieldFilterPopupDialog.html":{},"index.html":{}}}],["items's",{"_index":1131,"title":{},"body":{"index.html":{}}}],["js",{"_index":1017,"title":{},"body":{"dependencies.html":{}}}],["json.parse(json.stringify(filter",{"_index":923,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["jsonobject",{"_index":1129,"title":{},"body":{"index.html":{}}}],["justify",{"_index":792,"title":{},"body":{"components/FieldFilterPopupDialog.html":{}}}],["key",{"_index":575,"title":{},"body":{"interfaces/DataTableTranslations.html":{},"interfaces/DialogData.html":{},"components/FieldFilterChooserPopupDialog.html":{},"index.html":{}}}],["keyboardevent",{"_index":619,"title":{},"body":{"interfaces/DialogData.html":{},"components/FieldFilterChooserPopupDialog.html":{}}}],["keyboardeventsmanager",{"_index":600,"title":{},"body":{"interfaces/DialogData.html":{},"components/FieldFilterChooserPopupDialog.html":{}}}],["kind",{"_index":1301,"title":{},"body":{"license.html":{}}}],["l",{"_index":372,"title":{},"body":{"components/DataTablePaginationComponent.html":{}}}],["label",{"_index":201,"title":{},"body":{"components/DataTableHeaderComponent.html":{},"components/FieldFilterPopupDialog.html":{}}}],["labels",{"_index":580,"title":{},"body":{"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{},"classes/MyErrorStateMatcher.html":{},"index.html":{}}}],["last",{"_index":1356,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lastpage",{"_index":383,"title":{},"body":{"components/DataTablePaginationComponent.html":{},"interfaces/DataTableTranslations.html":{},"miscellaneous/variables.html":{}}}],["layout",{"_index":1007,"title":{},"body":{"dependencies.html":{}}}],["legend",{"_index":206,"title":{},"body":{"components/DataTableHeaderComponent.html":{},"modules/DataTableModule.html":{},"components/DataTablePaginationComponent.html":{},"components/DataTableRowComponent.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{},"overview.html":{}}}],["liability",{"_index":1316,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1313,"title":{},"body":{"license.html":{}}}],["library",{"_index":1069,"title":{},"body":{"index.html":{}}}],["libs/.../cell",{"_index":1332,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/.../data",{"_index":1335,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/.../default",{"_index":1342,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../drag.ts",{"_index":1043,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["libs/.../filterable",{"_index":1334,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/.../hide.ts",{"_index":1044,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../pagination.component.ts",{"_index":1343,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../row",{"_index":1337,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/.../table.component.ts",{"_index":1344,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/datatable/src/components/filter",{"_index":577,"title":{},"body":{"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{},"classes/MyErrorStateMatcher.html":{},"coverage.html":{}}}],["libs/datatable/src/components/header/header.component.ts",{"_index":106,"title":{},"body":{"components/DataTableHeaderComponent.html":{},"coverage.html":{}}}],["libs/datatable/src/components/header/header.component.ts:11",{"_index":122,"title":{},"body":{"components/DataTableHeaderComponent.html":{}}}],["libs/datatable/src/components/header/header.component.ts:13",{"_index":132,"title":{},"body":{"components/DataTableHeaderComponent.html":{}}}],["libs/datatable/src/components/header/header.component.ts:17",{"_index":126,"title":{},"body":{"components/DataTableHeaderComponent.html":{}}}],["libs/datatable/src/components/header/header.component.ts:23",{"_index":128,"title":{},"body":{"components/DataTableHeaderComponent.html":{}}}],["libs/datatable/src/components/header/header.component.ts:29",{"_index":130,"title":{},"body":{"components/DataTableHeaderComponent.html":{}}}],["libs/datatable/src/components/pagination/pagination.component.ts",{"_index":312,"title":{},"body":{"components/DataTablePaginationComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/datatable/src/components/pagination/pagination.component.ts:13",{"_index":338,"title":{},"body":{"components/DataTablePaginationComponent.html":{}}}],["libs/datatable/src/components/pagination/pagination.component.ts:15",{"_index":341,"title":{},"body":{"components/DataTablePaginationComponent.html":{}}}],["libs/datatable/src/components/pagination/pagination.component.ts:17",{"_index":339,"title":{},"body":{"components/DataTablePaginationComponent.html":{}}}],["libs/datatable/src/components/pagination/pagination.component.ts:19",{"_index":329,"title":{},"body":{"components/DataTablePaginationComponent.html":{}}}],["libs/datatable/src/components/pagination/pagination.component.ts:21",{"_index":336,"title":{},"body":{"components/DataTablePaginationComponent.html":{}}}],["libs/datatable/src/components/pagination/pagination.component.ts:25",{"_index":343,"title":{},"body":{"components/DataTablePaginationComponent.html":{}}}],["libs/datatable/src/components/pagination/pagination.component.ts:29",{"_index":345,"title":{},"body":{"components/DataTablePaginationComponent.html":{}}}],["libs/datatable/src/components/pagination/pagination.component.ts:33",{"_index":347,"title":{},"body":{"components/DataTablePaginationComponent.html":{}}}],["libs/datatable/src/components/pagination/pagination.component.ts:39",{"_index":349,"title":{},"body":{"components/DataTablePaginationComponent.html":{}}}],["libs/datatable/src/components/pagination/pagination.component.ts:43",{"_index":351,"title":{},"body":{"components/DataTablePaginationComponent.html":{}}}],["libs/datatable/src/components/pagination/pagination.component.ts:47",{"_index":330,"title":{},"body":{"components/DataTablePaginationComponent.html":{}}}],["libs/datatable/src/components/pagination/pagination.component.ts:54",{"_index":332,"title":{},"body":{"components/DataTablePaginationComponent.html":{}}}],["libs/datatable/src/components/pagination/pagination.component.ts:61",{"_index":331,"title":{},"body":{"components/DataTablePaginationComponent.html":{}}}],["libs/datatable/src/components/pagination/pagination.component.ts:66",{"_index":333,"title":{},"body":{"components/DataTablePaginationComponent.html":{}}}],["libs/datatable/src/components/pagination/pagination.component.ts:73",{"_index":335,"title":{},"body":{"components/DataTablePaginationComponent.html":{}}}],["libs/datatable/src/components/row/row.component.ts",{"_index":450,"title":{},"body":{"components/DataTableRowComponent.html":{},"coverage.html":{}}}],["libs/datatable/src/components/row/row.component.ts:22",{"_index":476,"title":{},"body":{"components/DataTableRowComponent.html":{}}}],["libs/datatable/src/components/row/row.component.ts:24",{"_index":469,"title":{},"body":{"components/DataTableRowComponent.html":{}}}],["libs/datatable/src/components/row/row.component.ts:25",{"_index":468,"title":{},"body":{"components/DataTableRowComponent.html":{}}}],["libs/datatable/src/components/row/row.component.ts:26",{"_index":478,"title":{},"body":{"components/DataTableRowComponent.html":{}}}],["libs/datatable/src/components/row/row.component.ts:27",{"_index":471,"title":{},"body":{"components/DataTableRowComponent.html":{}}}],["libs/datatable/src/components/row/row.component.ts:28",{"_index":467,"title":{},"body":{"components/DataTableRowComponent.html":{}}}],["libs/datatable/src/components/row/row.component.ts:30",{"_index":477,"title":{},"body":{"components/DataTableRowComponent.html":{}}}],["libs/datatable/src/components/row/row.component.ts:35",{"_index":475,"title":{},"body":{"components/DataTableRowComponent.html":{}}}],["libs/datatable/src/components/row/row.component.ts:37",{"_index":480,"title":{},"body":{"components/DataTableRowComponent.html":{}}}],["libs/datatable/src/components/row/row.component.ts:41",{"_index":482,"title":{},"body":{"components/DataTableRowComponent.html":{}}}],["libs/datatable/src/components/row/row.component.ts:47",{"_index":484,"title":{},"body":{"components/DataTableRowComponent.html":{}}}],["libs/datatable/src/components/row/row.component.ts:55",{"_index":472,"title":{},"body":{"components/DataTableRowComponent.html":{}}}],["libs/datatable/src/components/row/row.component.ts:62",{"_index":474,"title":{},"body":{"components/DataTableRowComponent.html":{}}}],["libs/datatable/src/components/row/row.component.ts:77",{"_index":473,"title":{},"body":{"components/DataTableRowComponent.html":{}}}],["libs/datatable/src/components/table/table.component.ts",{"_index":987,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/datatable/src/datatable.module.ts",{"_index":246,"title":{},"body":{"modules/DataTableModule.html":{}}}],["libs/datatable/src/datatable.module.ts:92",{"_index":250,"title":{},"body":{"modules/DataTableModule.html":{}}}],["libs/datatable/src/directives/column/column.directive.ts",{"_index":6,"title":{},"body":{"directives/DataTableColumnDirective.html":{},"coverage.html":{}}}],["libs/datatable/src/directives/column/column.directive.ts:12",{"_index":39,"title":{},"body":{"directives/DataTableColumnDirective.html":{}}}],["libs/datatable/src/directives/column/column.directive.ts:13",{"_index":45,"title":{},"body":{"directives/DataTableColumnDirective.html":{}}}],["libs/datatable/src/directives/column/column.directive.ts:14",{"_index":44,"title":{},"body":{"directives/DataTableColumnDirective.html":{}}}],["libs/datatable/src/directives/column/column.directive.ts:15",{"_index":40,"title":{},"body":{"directives/DataTableColumnDirective.html":{}}}],["libs/datatable/src/directives/column/column.directive.ts:16",{"_index":46,"title":{},"body":{"directives/DataTableColumnDirective.html":{}}}],["libs/datatable/src/directives/column/column.directive.ts:17",{"_index":37,"title":{},"body":{"directives/DataTableColumnDirective.html":{}}}],["libs/datatable/src/directives/column/column.directive.ts:19",{"_index":50,"title":{},"body":{"directives/DataTableColumnDirective.html":{}}}],["libs/datatable/src/directives/column/column.directive.ts:20",{"_index":48,"title":{},"body":{"directives/DataTableColumnDirective.html":{}}}],["libs/datatable/src/directives/column/column.directive.ts:21",{"_index":65,"title":{},"body":{"directives/DataTableColumnDirective.html":{}}}],["libs/datatable/src/directives/column/column.directive.ts:22",{"_index":67,"title":{},"body":{"directives/DataTableColumnDirective.html":{}}}],["libs/datatable/src/directives/column/column.directive.ts:23",{"_index":69,"title":{},"body":{"directives/DataTableColumnDirective.html":{}}}],["libs/datatable/src/directives/column/column.directive.ts:25",{"_index":56,"title":{},"body":{"directives/DataTableColumnDirective.html":{}}}],["libs/datatable/src/directives/column/column.directive.ts:31",{"_index":61,"title":{},"body":{"directives/DataTableColumnDirective.html":{}}}],["libs/datatable/src/directives/column/column.directive.ts:35",{"_index":51,"title":{},"body":{"directives/DataTableColumnDirective.html":{}}}],["libs/datatable/src/tools/data",{"_index":403,"title":{},"body":{"classes/DataTableResource.html":{},"coverage.html":{}}}],["libs/datatable/src/types/cell",{"_index":1339,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/datatable/src/types/data",{"_index":394,"title":{},"body":{"interfaces/DataTableParams.html":{},"interfaces/DataTableTranslations.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["libs/datatable/src/types/default",{"_index":993,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/datatable/src/types/filter.type.ts",{"_index":832,"title":{},"body":{"interfaces/Filter.html":{},"coverage.html":{}}}],["libs/datatable/src/types/filterable",{"_index":930,"title":{},"body":{"interfaces/FilterableField.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["libs/datatable/src/types/row",{"_index":1340,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/datatable/src/utils/drag.ts",{"_index":995,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["libs/datatable/src/utils/hide.ts",{"_index":936,"title":{},"body":{"directives/HideDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["libs/datatable/src/utils/hide.ts:12",{"_index":945,"title":{},"body":{"directives/HideDirective.html":{}}}],["libs/datatable/src/utils/hide.ts:13",{"_index":941,"title":{},"body":{"directives/HideDirective.html":{}}}],["libs/datatable/src/utils/hide.ts:19",{"_index":943,"title":{},"body":{"directives/HideDirective.html":{}}}],["libs/datatable/src/utils/hide.ts:31",{"_index":944,"title":{},"body":{"directives/HideDirective.html":{}}}],["libs/datatable/src/utils/min.ts",{"_index":960,"title":{},"body":{"pipes/MinPipe.html":{},"coverage.html":{}}}],["libs/datatable/src/utils/min.ts:8",{"_index":964,"title":{},"body":{"pipes/MinPipe.html":{}}}],["libs/datatable/src/utils/px.ts",{"_index":970,"title":{},"body":{"pipes/PixelConverter.html":{},"coverage.html":{}}}],["libs/datatable/src/utils/px.ts:7",{"_index":972,"title":{},"body":{"pipes/PixelConverter.html":{}}}],["license",{"_index":1259,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["lightgray",{"_index":186,"title":{},"body":{"components/DataTableHeaderComponent.html":{}}}],["limit",{"_index":327,"title":{},"body":{"components/DataTablePaginationComponent.html":{},"interfaces/DataTableParams.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["limit(value",{"_index":357,"title":{},"body":{"components/DataTablePaginationComponent.html":{}}}],["limitation",{"_index":1279,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1304,"title":{},"body":{"license.html":{}}}],["limits",{"_index":324,"title":{},"body":{"components/DataTablePaginationComponent.html":{}}}],["line",{"_index":517,"title":{},"body":{"components/DataTableRowComponent.html":{}}}],["list",{"_index":196,"title":{},"body":{"components/DataTableHeaderComponent.html":{},"components/FieldFilterChooserPopupDialog.html":{}}}],["listitem",{"_index":599,"title":{},"body":{"interfaces/DialogData.html":{},"components/FieldFilterChooserPopupDialog.html":{}}}],["listkeymanager",{"_index":588,"title":{},"body":{"interfaces/DialogData.html":{},"components/FieldFilterChooserPopupDialog.html":{}}}],["listkeymanager(this.listitem",{"_index":612,"title":{},"body":{"interfaces/DialogData.html":{},"components/FieldFilterChooserPopupDialog.html":{}}}],["literal",{"_index":934,"title":{},"body":{"interfaces/FilterableField.html":{}}}],["load",{"_index":1201,"title":{},"body":{"index.html":{}}}],["loaded",{"_index":1358,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loadedtext",{"_index":541,"title":{},"body":{"interfaces/DataTableTranslations.html":{},"miscellaneous/variables.html":{}}}],["loading",{"_index":1357,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loadingtext",{"_index":542,"title":{},"body":{"interfaces/DataTableTranslations.html":{},"miscellaneous/variables.html":{}}}],["local",{"_index":1061,"title":{},"body":{"index.html":{}}}],["lodash",{"_index":1023,"title":{},"body":{"dependencies.html":{}}}],["lt",{"_index":564,"title":{},"body":{"interfaces/DataTableTranslations.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["lte",{"_index":566,"title":{},"body":{"interfaces/DataTableTranslations.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ltr",{"_index":831,"title":{},"body":{"components/FieldFilterPopupDialog.html":{}}}],["m",{"_index":1354,"title":{},"body":{"miscellaneous/variables.html":{}}}],["manager",{"_index":622,"title":{},"body":{"interfaces/DialogData.html":{},"components/FieldFilterChooserPopupDialog.html":{}}}],["margin",{"_index":166,"title":{},"body":{"components/DataTableHeaderComponent.html":{},"components/DataTablePaginationComponent.html":{}}}],["marked",{"_index":1196,"title":{},"body":{"index.html":{}}}],["marks",{"_index":1216,"title":{},"body":{"index.html":{}}}],["mat",{"_index":756,"title":{},"body":{"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{}}}],["mat_dialog_data",{"_index":584,"title":{},"body":{"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["matbuttonmodule",{"_index":258,"title":{},"body":{"modules/DataTableModule.html":{}}}],["matcheckboxmodule",{"_index":274,"title":{},"body":{"modules/DataTableModule.html":{}}}],["matcher",{"_index":670,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["matching",{"_index":97,"title":{},"body":{"directives/DataTableColumnDirective.html":{},"components/DataTableHeaderComponent.html":{},"modules/DataTableModule.html":{},"components/DataTablePaginationComponent.html":{},"interfaces/DataTableParams.html":{},"classes/DataTableResource.html":{},"components/DataTableRowComponent.html":{},"interfaces/DataTableTranslations.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"interfaces/Filter.html":{},"components/FilterBarComponent.html":{},"interfaces/FilterableField.html":{},"directives/HideDirective.html":{},"pipes/MinPipe.html":{},"classes/MyErrorStateMatcher.html":{},"pipes/PixelConverter.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matchipsmodule",{"_index":260,"title":{},"body":{"modules/DataTableModule.html":{}}}],["matdatepickermodule",{"_index":278,"title":{},"body":{"modules/DataTableModule.html":{}}}],["matdialogmodule",{"_index":262,"title":{},"body":{"modules/DataTableModule.html":{}}}],["matdialogref",{"_index":867,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["material",{"_index":257,"title":{},"body":{"modules/DataTableModule.html":{}}}],["matformfieldmodule",{"_index":264,"title":{},"body":{"modules/DataTableModule.html":{}}}],["math",{"_index":317,"title":{},"body":{"components/DataTablePaginationComponent.html":{}}}],["math.ceil(this.datatable.itemcount",{"_index":354,"title":{},"body":{"components/DataTablePaginationComponent.html":{}}}],["math.min(this.datatable.limit",{"_index":366,"title":{},"body":{"components/DataTablePaginationComponent.html":{}}}],["math.min.apply(null",{"_index":966,"title":{},"body":{"pipes/MinPipe.html":{}}}],["maticonmodule",{"_index":266,"title":{},"body":{"modules/DataTableModule.html":{}}}],["matinputmodule",{"_index":268,"title":{},"body":{"modules/DataTableModule.html":{}}}],["matlistitem",{"_index":594,"title":{},"body":{"interfaces/DialogData.html":{},"components/FieldFilterChooserPopupDialog.html":{}}}],["matlistitem)._gethostelement().click",{"_index":631,"title":{},"body":{"interfaces/DialogData.html":{},"components/FieldFilterChooserPopupDialog.html":{}}}],["matlistitem)._gethostelement().scrollintoview",{"_index":630,"title":{},"body":{"interfaces/DialogData.html":{},"components/FieldFilterChooserPopupDialog.html":{}}}],["matlistmodule",{"_index":270,"title":{},"body":{"modules/DataTableModule.html":{}}}],["matnativedatemodule",{"_index":280,"title":{},"body":{"modules/DataTableModule.html":{}}}],["matradiomodule",{"_index":276,"title":{},"body":{"modules/DataTableModule.html":{}}}],["matselectmodule",{"_index":272,"title":{},"body":{"modules/DataTableModule.html":{}}}],["max",{"_index":743,"title":{},"body":{"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{}}}],["maxpage",{"_index":326,"title":{},"body":{"components/DataTablePaginationComponent.html":{}}}],["md",{"_index":1026,"title":{},"body":{"dependencies.html":{}}}],["merchantability",{"_index":1306,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1282,"title":{},"body":{"license.html":{}}}],["message",{"_index":1186,"title":{},"body":{"index.html":{}}}],["metadata",{"_index":9,"title":{},"body":{"directives/DataTableColumnDirective.html":{},"components/DataTableHeaderComponent.html":{},"components/DataTablePaginationComponent.html":{},"components/DataTableRowComponent.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{},"directives/HideDirective.html":{},"pipes/MinPipe.html":{},"pipes/PixelConverter.html":{}}}],["methods",{"_index":20,"title":{},"body":{"directives/DataTableColumnDirective.html":{},"components/DataTableHeaderComponent.html":{},"modules/DataTableModule.html":{},"components/DataTablePaginationComponent.html":{},"classes/DataTableResource.html":{},"components/DataTableRowComponent.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{},"directives/HideDirective.html":{},"pipes/MinPipe.html":{},"classes/MyErrorStateMatcher.html":{},"pipes/PixelConverter.html":{}}}],["min",{"_index":163,"title":{},"body":{"components/DataTableHeaderComponent.html":{},"components/DataTablePaginationComponent.html":{},"components/FieldFilterPopupDialog.html":{},"pipes/MinPipe.html":{}}}],["minpipe",{"_index":241,"title":{"pipes/MinPipe.html":{}},"body":{"modules/DataTableModule.html":{},"pipes/MinPipe.html":{},"coverage.html":{},"overview.html":{}}}],["miscellaneous",{"_index":1041,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":1151,"title":{},"body":{"index.html":{}}}],["mit",{"_index":1260,"title":{},"body":{"index.html":{},"license.html":{}}}],["modify",{"_index":1281,"title":{},"body":{"license.html":{}}}],["module",{"_index":230,"title":{"modules/DataTableModule.html":{}},"body":{"modules/DataTableModule.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":232,"title":{"modules.html":{}},"body":{"modules/DataTableModule.html":{},"modules.html":{}}}],["modulewithproviders",{"_index":251,"title":{},"body":{"modules/DataTableModule.html":{}}}],["movehandler",{"_index":1336,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["moz",{"_index":511,"title":{},"body":{"components/DataTableRowComponent.html":{}}}],["ms",{"_index":523,"title":{},"body":{"components/DataTableRowComponent.html":{}}}],["multi",{"_index":1144,"title":{},"body":{"index.html":{}}}],["multiselect",{"_index":1142,"title":{},"body":{"index.html":{}}}],["must_select_value_validation",{"_index":663,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["myerrorstatematcher",{"_index":644,"title":{"classes/MyErrorStateMatcher.html":{}},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{},"coverage.html":{}}}],["n",{"_index":1353,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name",{"_index":58,"title":{},"body":{"directives/DataTableColumnDirective.html":{},"components/DataTableHeaderComponent.html":{},"components/DataTablePaginationComponent.html":{},"classes/DataTableResource.html":{},"components/DataTableRowComponent.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{},"directives/HideDirective.html":{},"pipes/MinPipe.html":{},"classes/MyErrorStateMatcher.html":{},"pipes/PixelConverter.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["navigate",{"_index":1248,"title":{},"body":{"index.html":{}}}],["nbsp",{"_index":375,"title":{},"body":{"components/DataTablePaginationComponent.html":{}}}],["ne",{"_index":569,"title":{},"body":{"interfaces/DataTableTranslations.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["need",{"_index":1081,"title":{},"body":{"index.html":{}}}],["needed",{"_index":1148,"title":{},"body":{"index.html":{}}}],["needs",{"_index":1161,"title":{},"body":{"index.html":{}}}],["new",{"_index":444,"title":{},"body":{"classes/DataTableResource.html":{},"components/DataTableRowComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{},"classes/MyErrorStateMatcher.html":{},"coverage.html":{}}}],["newcondition",{"_index":947,"title":{},"body":{"directives/HideDirective.html":{}}}],["newvalue",{"_index":370,"title":{},"body":{"components/DataTablePaginationComponent.html":{}}}],["next",{"_index":1355,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nextid",{"_index":337,"title":{},"body":{"components/DataTablePaginationComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["nextpage",{"_index":381,"title":{},"body":{"components/DataTablePaginationComponent.html":{},"interfaces/DataTableTranslations.html":{},"miscellaneous/variables.html":{}}}],["ng",{"_index":810,"title":{},"body":{"components/FieldFilterPopupDialog.html":{},"index.html":{}}}],["ngafterviewinit",{"_index":610,"title":{},"body":{"interfaces/DialogData.html":{},"components/FieldFilterChooserPopupDialog.html":{}}}],["ngclass",{"_index":81,"title":{},"body":{"directives/DataTableColumnDirective.html":{}}}],["ngform",{"_index":635,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["ngmodule",{"_index":252,"title":{},"body":{"modules/DataTableModule.html":{},"index.html":{}}}],["ngondestroy",{"_index":460,"title":{},"body":{"components/DataTableRowComponent.html":{}}}],["ngoninit",{"_index":23,"title":{},"body":{"directives/DataTableColumnDirective.html":{},"components/DataTableRowComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{},"classes/MyErrorStateMatcher.html":{},"index.html":{}}}],["ngx",{"_index":288,"title":{},"body":{"modules/DataTableModule.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{},"classes/MyErrorStateMatcher.html":{},"dependencies.html":{}}}],["ngxpopupdialogmodule",{"_index":286,"title":{},"body":{"modules/DataTableModule.html":{}}}],["nodatamessage",{"_index":1185,"title":{},"body":{"index.html":{}}}],["node",{"_index":1029,"title":{},"body":{"dependencies.html":{}}}],["node_modules/bootstrap/dist/css/bootstrap.min.css",{"_index":1093,"title":{},"body":{"index.html":{}}}],["node_modules/font",{"_index":1094,"title":{},"body":{"index.html":{}}}],["nodes",{"_index":1237,"title":{},"body":{"index.html":{}}}],["none",{"_index":179,"title":{},"body":{"components/DataTableHeaderComponent.html":{},"components/DataTablePaginationComponent.html":{},"components/DataTableRowComponent.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{},"directives/HideDirective.html":{}}}],["noninfringement",{"_index":1310,"title":{},"body":{"license.html":{}}}],["normal",{"_index":518,"title":{},"body":{"components/DataTableRowComponent.html":{}}}],["not_contains",{"_index":571,"title":{},"body":{"interfaces/DataTableTranslations.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["note",{"_index":1164,"title":{},"body":{"index.html":{}}}],["nothing",{"_index":1188,"title":{},"body":{"index.html":{}}}],["notice",{"_index":1294,"title":{},"body":{"license.html":{}}}],["npm",{"_index":1083,"title":{},"body":{"index.html":{}}}],["null",{"_index":94,"title":{},"body":{"directives/DataTableColumnDirective.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{},"directives/HideDirective.html":{},"classes/MyErrorStateMatcher.html":{},"index.html":{}}}],["number",{"_index":49,"title":{},"body":{"directives/DataTableColumnDirective.html":{},"components/DataTablePaginationComponent.html":{},"interfaces/DataTableParams.html":{},"classes/DataTableResource.html":{},"components/DataTableRowComponent.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"interfaces/FilterableField.html":{},"pipes/MinPipe.html":{},"classes/MyErrorStateMatcher.html":{},"pipes/PixelConverter.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["number(split[0",{"_index":722,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["number(split[1",{"_index":721,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["number,items",{"_index":416,"title":{},"body":{"classes/DataTableResource.html":{}}}],["numeric",{"_index":1360,"title":{},"body":{"miscellaneous/variables.html":{}}}],["numericoperators",{"_index":652,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["numericvaluerequired",{"_index":543,"title":{},"body":{"interfaces/DataTableTranslations.html":{},"miscellaneous/variables.html":{}}}],["obj",{"_index":949,"title":{},"body":{"directives/HideDirective.html":{},"miscellaneous/functions.html":{}}}],["object",{"_index":68,"title":{},"body":{"directives/DataTableColumnDirective.html":{},"components/FieldFilterPopupDialog.html":{}}}],["obtaining",{"_index":1272,"title":{},"body":{"license.html":{}}}],["offset",{"_index":396,"title":{},"body":{"interfaces/DataTableParams.html":{}}}],["old",{"_index":886,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["onchange",{"_index":114,"title":{},"body":{"components/DataTableHeaderComponent.html":{}}}],["onchange(event",{"_index":129,"title":{},"body":{"components/DataTableHeaderComponent.html":{}}}],["onclickhandler(event",{"_index":139,"title":{},"body":{"components/DataTableHeaderComponent.html":{}}}],["ondestroy",{"_index":451,"title":{},"body":{"components/DataTableRowComponent.html":{}}}],["onfieldsearch",{"_index":725,"title":{},"body":{"components/FieldFilterChooserPopupDialog.html":{}}}],["onfieldsearch(searchquery",{"_index":613,"title":{},"body":{"interfaces/DialogData.html":{},"components/FieldFilterChooserPopupDialog.html":{}}}],["onfilterapply",{"_index":689,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["oninit",{"_index":8,"title":{},"body":{"directives/DataTableColumnDirective.html":{},"components/DataTableRowComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["onkeyuphandler(event",{"_index":143,"title":{},"body":{"components/DataTableHeaderComponent.html":{}}}],["openfieldchooserdialog",{"_index":844,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["openfieldchooserdialog(triggeredelement",{"_index":859,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["openfieldfilterdialog",{"_index":845,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["openfieldfilterdialog(triggeredelement",{"_index":862,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["operator",{"_index":693,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"interfaces/Filter.html":{},"classes/MyErrorStateMatcher.html":{}}}],["option",{"_index":708,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["option.displaytext",{"_index":711,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["option.value",{"_index":709,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["optional",{"_index":59,"title":{},"body":{"directives/DataTableColumnDirective.html":{},"components/DataTableHeaderComponent.html":{},"components/DataTablePaginationComponent.html":{},"interfaces/DataTableParams.html":{},"classes/DataTableResource.html":{},"components/DataTableRowComponent.html":{},"interfaces/DataTableTranslations.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"interfaces/Filter.html":{},"components/FilterBarComponent.html":{},"interfaces/FilterableField.html":{},"directives/HideDirective.html":{},"pipes/MinPipe.html":{},"classes/MyErrorStateMatcher.html":{},"pipes/PixelConverter.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":921,"title":{},"body":{"components/FilterBarComponent.html":{},"index.html":{}}}],["order",{"_index":1169,"title":{},"body":{"index.html":{}}}],["original",{"_index":430,"title":{},"body":{"classes/DataTableResource.html":{}}}],["otherwise",{"_index":1212,"title":{},"body":{"index.html":{},"license.html":{}}}],["out",{"_index":245,"title":{},"body":{"modules/DataTableModule.html":{},"license.html":{},"overview.html":{}}}],["outer",{"_index":826,"title":{},"body":{"components/FieldFilterPopupDialog.html":{}}}],["outline",{"_index":178,"title":{},"body":{"components/DataTableHeaderComponent.html":{},"components/DataTablePaginationComponent.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{}}}],["output",{"_index":485,"title":{},"body":{"components/DataTableRowComponent.html":{}}}],["outputs",{"_index":461,"title":{},"body":{"components/DataTableRowComponent.html":{}}}],["overflow",{"_index":519,"title":{},"body":{"components/DataTableRowComponent.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{}}}],["overlay",{"_index":903,"title":{},"body":{"components/FilterBarComponent.html":{},"index.html":{}}}],["overview",{"_index":1327,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1000,"title":{"dependencies.html":{}},"body":{}}],["packaged",{"_index":1070,"title":{},"body":{"index.html":{}}}],["packagr",{"_index":1071,"title":{},"body":{"index.html":{}}}],["padding",{"_index":190,"title":{},"body":{"components/DataTableHeaderComponent.html":{},"components/DataTablePaginationComponent.html":{},"components/DataTableRowComponent.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{}}}],["page",{"_index":328,"title":{},"body":{"components/DataTablePaginationComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["page(value",{"_index":364,"title":{},"body":{"components/DataTablePaginationComponent.html":{}}}],["pageback",{"_index":319,"title":{},"body":{"components/DataTablePaginationComponent.html":{}}}],["pagefirst",{"_index":320,"title":{},"body":{"components/DataTablePaginationComponent.html":{}}}],["pageforward",{"_index":321,"title":{},"body":{"components/DataTablePaginationComponent.html":{}}}],["pageinput",{"_index":318,"title":{},"body":{"components/DataTablePaginationComponent.html":{}}}],["pagelast",{"_index":322,"title":{},"body":{"components/DataTablePaginationComponent.html":{}}}],["pagelimits",{"_index":1189,"title":{},"body":{"index.html":{}}}],["pagelimits's",{"_index":1206,"title":{},"body":{"index.html":{}}}],["pagenumber",{"_index":544,"title":{},"body":{"interfaces/DataTableTranslations.html":{},"miscellaneous/variables.html":{}}}],["pagenumberlabel",{"_index":545,"title":{},"body":{"interfaces/DataTableTranslations.html":{},"miscellaneous/variables.html":{}}}],["pagenumbernofm",{"_index":546,"title":{},"body":{"interfaces/DataTableTranslations.html":{},"miscellaneous/variables.html":{}}}],["pages",{"_index":389,"title":{},"body":{"components/DataTablePaginationComponent.html":{}}}],["pagination",{"_index":313,"title":{},"body":{"components/DataTablePaginationComponent.html":{},"index.html":{}}}],["pagination'},{'name",{"_index":214,"title":{},"body":{"components/DataTableHeaderComponent.html":{},"components/DataTablePaginationComponent.html":{},"components/DataTableRowComponent.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{}}}],["pagination.component.css",{"_index":314,"title":{},"body":{"components/DataTablePaginationComponent.html":{}}}],["pagination.component.html",{"_index":315,"title":{},"body":{"components/DataTablePaginationComponent.html":{}}}],["paginationlimit",{"_index":547,"title":{},"body":{"interfaces/DataTableTranslations.html":{},"miscellaneous/variables.html":{}}}],["paginationtext",{"_index":548,"title":{},"body":{"interfaces/DataTableTranslations.html":{},"miscellaneous/variables.html":{}}}],["paginationtotalpages",{"_index":549,"title":{},"body":{"interfaces/DataTableTranslations.html":{},"miscellaneous/variables.html":{}}}],["panel",{"_index":175,"title":{},"body":{"components/DataTableHeaderComponent.html":{}}}],["parameters",{"_index":57,"title":{},"body":{"directives/DataTableColumnDirective.html":{},"components/DataTableHeaderComponent.html":{},"components/DataTablePaginationComponent.html":{},"classes/DataTableResource.html":{},"components/DataTableRowComponent.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{},"directives/HideDirective.html":{},"pipes/MinPipe.html":{},"classes/MyErrorStateMatcher.html":{},"pipes/PixelConverter.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":418,"title":{},"body":{"classes/DataTableResource.html":{}}}],["params.limit",{"_index":441,"title":{},"body":{"classes/DataTableResource.html":{}}}],["params.offset",{"_index":440,"title":{},"body":{"classes/DataTableResource.html":{}}}],["params.sortasc",{"_index":438,"title":{},"body":{"classes/DataTableResource.html":{}}}],["params.sortby",{"_index":431,"title":{},"body":{"classes/DataTableResource.html":{}}}],["params.type",{"_index":301,"title":{},"body":{"modules/DataTableModule.html":{},"classes/DataTableResource.html":{}}}],["params.type.ts",{"_index":395,"title":{},"body":{"interfaces/DataTableParams.html":{},"coverage.html":{}}}],["params.type.ts:5",{"_index":400,"title":{},"body":{"interfaces/DataTableParams.html":{}}}],["particular",{"_index":1308,"title":{},"body":{"license.html":{}}}],["pass",{"_index":1149,"title":{},"body":{"index.html":{}}}],["passing",{"_index":621,"title":{},"body":{"interfaces/DialogData.html":{},"components/FieldFilterChooserPopupDialog.html":{}}}],["per",{"_index":1193,"title":{},"body":{"index.html":{}}}],["permission",{"_index":1266,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1288,"title":{},"body":{"license.html":{}}}],["person",{"_index":1271,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1289,"title":{},"body":{"license.html":{}}}],["perspective",{"_index":1199,"title":{},"body":{"index.html":{}}}],["pipe",{"_index":958,"title":{"pipes/MinPipe.html":{},"pipes/PixelConverter.html":{}},"body":{"pipes/MinPipe.html":{},"pipes/PixelConverter.html":{},"coverage.html":{}}}],["pipes",{"_index":959,"title":{},"body":{"pipes/MinPipe.html":{},"pipes/PixelConverter.html":{},"overview.html":{}}}],["pipetransform",{"_index":965,"title":{},"body":{"pipes/MinPipe.html":{},"pipes/PixelConverter.html":{}}}],["pixelconverter",{"_index":242,"title":{"pipes/PixelConverter.html":{}},"body":{"modules/DataTableModule.html":{},"pipes/PixelConverter.html":{},"coverage.html":{},"overview.html":{}}}],["pixels",{"_index":1219,"title":{},"body":{"index.html":{}}}],["place",{"_index":1166,"title":{},"body":{"index.html":{}}}],["pointer",{"_index":516,"title":{},"body":{"components/DataTableRowComponent.html":{},"components/FilterBarComponent.html":{}}}],["popper.js",{"_index":1032,"title":{},"body":{"dependencies.html":{}}}],["popup",{"_index":221,"title":{},"body":{"components/DataTableHeaderComponent.html":{},"modules/DataTableModule.html":{},"components/DataTablePaginationComponent.html":{},"components/DataTableRowComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{},"classes/MyErrorStateMatcher.html":{},"coverage.html":{},"dependencies.html":{}}}],["popup_dialog_close",{"_index":585,"title":{},"body":{"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["popupdialog",{"_index":871,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["popupdialogservice",{"_index":287,"title":{},"body":{"modules/DataTableModule.html":{},"components/FilterBarComponent.html":{}}}],["portions",{"_index":1298,"title":{},"body":{"license.html":{}}}],["position",{"_index":182,"title":{},"body":{"components/DataTableHeaderComponent.html":{}}}],["possible",{"_index":920,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["possibleoptions",{"_index":932,"title":{},"body":{"interfaces/FilterableField.html":{}}}],["previous",{"_index":1352,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prevpage",{"_index":550,"title":{},"body":{"interfaces/DataTableTranslations.html":{},"miscellaneous/variables.html":{}}}],["primary",{"_index":1197,"title":{},"body":{"index.html":{}}}],["primarycolumn",{"_index":1194,"title":{},"body":{"index.html":{}}}],["private",{"_index":18,"title":{},"body":{"directives/DataTableColumnDirective.html":{},"components/DataTableHeaderComponent.html":{},"components/DataTableRowComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{},"directives/HideDirective.html":{},"classes/MyErrorStateMatcher.html":{}}}],["project",{"_index":1080,"title":{},"body":{"index.html":{}}}],["promise",{"_index":412,"title":{},"body":{"classes/DataTableResource.html":{}}}],["promise((resolve",{"_index":445,"title":{},"body":{"classes/DataTableResource.html":{}}}],["properties",{"_index":15,"title":{},"body":{"directives/DataTableColumnDirective.html":{},"components/DataTableHeaderComponent.html":{},"components/DataTablePaginationComponent.html":{},"interfaces/DataTableParams.html":{},"components/DataTableRowComponent.html":{},"interfaces/DataTableTranslations.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"interfaces/Filter.html":{},"components/FilterBarComponent.html":{},"interfaces/FilterableField.html":{},"directives/HideDirective.html":{}}}],["property",{"_index":27,"title":{},"body":{"directives/DataTableColumnDirective.html":{},"interfaces/FilterableField.html":{},"index.html":{}}}],["provide",{"_index":1115,"title":{},"body":{"index.html":{}}}],["provided",{"_index":1299,"title":{},"body":{"license.html":{}}}],["providers",{"_index":236,"title":{},"body":{"modules/DataTableModule.html":{},"overview.html":{}}}],["public",{"_index":112,"title":{},"body":{"components/DataTableHeaderComponent.html":{},"modules/DataTableModule.html":{},"components/DataTablePaginationComponent.html":{},"components/DataTableRowComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["publish",{"_index":1283,"title":{},"body":{"license.html":{}}}],["pull",{"_index":1170,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":1309,"title":{},"body":{"license.html":{}}}],["px",{"_index":971,"title":{},"body":{"pipes/PixelConverter.html":{}}}],["query",{"_index":406,"title":{},"body":{"classes/DataTableResource.html":{}}}],["query(params",{"_index":413,"title":{},"body":{"classes/DataTableResource.html":{}}}],["querylist",{"_index":582,"title":{},"body":{"interfaces/DialogData.html":{},"components/FieldFilterChooserPopupDialog.html":{}}}],["radio",{"_index":821,"title":{},"body":{"components/FieldFilterPopupDialog.html":{}}}],["radius",{"_index":751,"title":{},"body":{"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{}}}],["re",{"_index":1162,"title":{},"body":{"index.html":{}}}],["reasons",{"_index":1114,"title":{},"body":{"index.html":{}}}],["recognized",{"_index":677,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["recommend",{"_index":1113,"title":{},"body":{"index.html":{}}}],["references",{"_index":1226,"title":{},"body":{"index.html":{}}}],["refers",{"_index":1241,"title":{},"body":{"index.html":{}}}],["reject",{"_index":446,"title":{},"body":{"classes/DataTableResource.html":{}}}],["relative",{"_index":183,"title":{},"body":{"components/DataTableHeaderComponent.html":{}}}],["reload",{"_index":1126,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["reloading",{"_index":1184,"title":{},"body":{"index.html":{}}}],["remote",{"_index":1062,"title":{},"body":{"index.html":{}}}],["removed",{"_index":1348,"title":{},"body":{"miscellaneous/variables.html":{}}}],["removefilter",{"_index":846,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["removefilter(filter",{"_index":864,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["removes",{"_index":1346,"title":{},"body":{"miscellaneous/variables.html":{}}}],["render",{"_index":1163,"title":{},"body":{"index.html":{}}}],["renderer",{"_index":465,"title":{},"body":{"components/DataTableRowComponent.html":{},"directives/HideDirective.html":{}}}],["renderer2",{"_index":466,"title":{},"body":{"components/DataTableRowComponent.html":{},"directives/HideDirective.html":{}}}],["replace('{column_name",{"_index":159,"title":{},"body":{"components/DataTableHeaderComponent.html":{}}}],["replace('{title",{"_index":161,"title":{},"body":{"components/DataTableHeaderComponent.html":{}}}],["repository",{"_index":1245,"title":{},"body":{"index.html":{}}}],["reset",{"_index":244,"title":{},"body":{"modules/DataTableModule.html":{},"overview.html":{}}}],["resizable",{"_index":28,"title":{},"body":{"directives/DataTableColumnDirective.html":{},"index.html":{}}}],["resizing",{"_index":1056,"title":{},"body":{"index.html":{}}}],["resolve(result",{"_index":448,"title":{},"body":{"classes/DataTableResource.html":{}}}],["resolve(this.items.length",{"_index":449,"title":{},"body":{"classes/DataTableResource.html":{}}}],["resource",{"_index":299,"title":{},"body":{"modules/DataTableModule.html":{}}}],["resource.ts",{"_index":404,"title":{},"body":{"classes/DataTableResource.html":{},"coverage.html":{}}}],["resource.ts:4",{"_index":409,"title":{},"body":{"classes/DataTableResource.html":{}}}],["resource.ts:43",{"_index":411,"title":{},"body":{"classes/DataTableResource.html":{}}}],["resource.ts:9",{"_index":417,"title":{},"body":{"classes/DataTableResource.html":{}}}],["resources",{"_index":1063,"title":{},"body":{"index.html":{}}}],["respectively",{"_index":1238,"title":{},"body":{"index.html":{}}}],["restricted",{"_index":1222,"title":{},"body":{"index.html":{}}}],["restriction",{"_index":1278,"title":{},"body":{"license.html":{}}}],["result",{"_index":96,"title":{},"body":{"directives/DataTableColumnDirective.html":{},"components/DataTableHeaderComponent.html":{},"modules/DataTableModule.html":{},"components/DataTablePaginationComponent.html":{},"interfaces/DataTableParams.html":{},"classes/DataTableResource.html":{},"components/DataTableRowComponent.html":{},"interfaces/DataTableTranslations.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"interfaces/Filter.html":{},"components/FilterBarComponent.html":{},"interfaces/FilterableField.html":{},"directives/HideDirective.html":{},"pipes/MinPipe.html":{},"classes/MyErrorStateMatcher.html":{},"pipes/PixelConverter.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result.length",{"_index":443,"title":{},"body":{"classes/DataTableResource.html":{}}}],["result.reverse",{"_index":439,"title":{},"body":{"classes/DataTableResource.html":{}}}],["result.slice(params.offset",{"_index":442,"title":{},"body":{"classes/DataTableResource.html":{}}}],["result.sort((a",{"_index":432,"title":{},"body":{"classes/DataTableResource.html":{}}}],["results",{"_index":98,"title":{},"body":{"directives/DataTableColumnDirective.html":{},"components/DataTableHeaderComponent.html":{},"modules/DataTableModule.html":{},"components/DataTablePaginationComponent.html":{},"interfaces/DataTableParams.html":{},"classes/DataTableResource.html":{},"components/DataTableRowComponent.html":{},"interfaces/DataTableTranslations.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"interfaces/Filter.html":{},"components/FilterBarComponent.html":{},"interfaces/FilterableField.html":{},"directives/HideDirective.html":{},"pipes/MinPipe.html":{},"classes/MyErrorStateMatcher.html":{},"pipes/PixelConverter.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":1214,"title":{},"body":{"index.html":{}}}],["return",{"_index":84,"title":{},"body":{"directives/DataTableColumnDirective.html":{},"modules/DataTableModule.html":{},"components/DataTablePaginationComponent.html":{},"classes/DataTableResource.html":{},"components/DataTableRowComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{},"directives/HideDirective.html":{},"pipes/MinPipe.html":{},"classes/MyErrorStateMatcher.html":{},"pipes/PixelConverter.html":{},"index.html":{}}}],["returning",{"_index":358,"title":{},"body":{"components/DataTablePaginationComponent.html":{}}}],["returns",{"_index":52,"title":{},"body":{"directives/DataTableColumnDirective.html":{},"components/DataTableHeaderComponent.html":{},"modules/DataTableModule.html":{},"components/DataTablePaginationComponent.html":{},"classes/DataTableResource.html":{},"components/DataTableRowComponent.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{},"directives/HideDirective.html":{},"pipes/MinPipe.html":{},"classes/MyErrorStateMatcher.html":{},"pipes/PixelConverter.html":{},"miscellaneous/functions.html":{}}}],["rgba(0",{"_index":753,"title":{},"body":{"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{}}}],["rgba(66",{"_index":827,"title":{},"body":{"components/FieldFilterPopupDialog.html":{}}}],["right",{"_index":177,"title":{},"body":{"components/DataTableHeaderComponent.html":{},"components/DataTablePaginationComponent.html":{}}}],["rights",{"_index":1280,"title":{},"body":{"license.html":{}}}],["ripple",{"_index":818,"title":{},"body":{"components/FieldFilterPopupDialog.html":{}}}],["root",{"_index":1091,"title":{},"body":{"index.html":{}}}],["row",{"_index":60,"title":{},"body":{"directives/DataTableColumnDirective.html":{},"components/DataTableRowComponent.html":{},"components/FieldFilterPopupDialog.html":{},"index.html":{}}}],["row.component.css",{"_index":453,"title":{},"body":{"components/DataTableRowComponent.html":{}}}],["row.component.html",{"_index":454,"title":{},"body":{"components/DataTableRowComponent.html":{}}}],["rowcallback",{"_index":295,"title":{},"body":{"modules/DataTableModule.html":{},"miscellaneous/typealiases.html":{}}}],["rowcolors",{"_index":1175,"title":{},"body":{"index.html":{}}}],["rows",{"_index":1055,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["rowtooltip",{"_index":1179,"title":{},"body":{"index.html":{}}}],["run",{"_index":1246,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":1034,"title":{},"body":{"dependencies.html":{}}}],["s",{"_index":717,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{},"index.html":{}}}],["s.split",{"_index":719,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["sample",{"_index":1230,"title":{},"body":{"index.html":{}}}],["sass",{"_index":1030,"title":{},"body":{"dependencies.html":{}}}],["scrollbar",{"_index":747,"title":{},"body":{"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{}}}],["search",{"_index":742,"title":{},"body":{"components/FieldFilterChooserPopupDialog.html":{},"miscellaneous/variables.html":{}}}],["searchfield",{"_index":551,"title":{},"body":{"interfaces/DataTableTranslations.html":{},"miscellaneous/variables.html":{}}}],["searchquery",{"_index":733,"title":{},"body":{"components/FieldFilterChooserPopupDialog.html":{}}}],["seen",{"_index":1233,"title":{},"body":{"index.html":{}}}],["select",{"_index":385,"title":{},"body":{"components/DataTablePaginationComponent.html":{},"components/DataTableRowComponent.html":{},"components/FieldFilterPopupDialog.html":{},"miscellaneous/variables.html":{}}}],["select's",{"_index":1146,"title":{},"body":{"index.html":{}}}],["selectable",{"_index":1157,"title":{},"body":{"index.html":{}}}],["selectallrows",{"_index":552,"title":{},"body":{"interfaces/DataTableTranslations.html":{},"miscellaneous/variables.html":{}}}],["selectcolumn",{"_index":553,"title":{},"body":{"interfaces/DataTableTranslations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["selected",{"_index":463,"title":{},"body":{"components/DataTableRowComponent.html":{}}}],["selected(selected",{"_index":488,"title":{},"body":{"components/DataTableRowComponent.html":{}}}],["selectedchange",{"_index":462,"title":{},"body":{"components/DataTableRowComponent.html":{}}}],["selectedoperator",{"_index":667,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["selectedvaluerequired",{"_index":554,"title":{},"body":{"interfaces/DataTableTranslations.html":{},"miscellaneous/variables.html":{}}}],["selecting",{"_index":1057,"title":{},"body":{"index.html":{}}}],["selection",{"_index":486,"title":{},"body":{"components/DataTableRowComponent.html":{},"index.html":{}}}],["selectonrowclick",{"_index":1156,"title":{},"body":{"index.html":{}}}],["selector",{"_index":10,"title":{},"body":{"directives/DataTableColumnDirective.html":{},"components/DataTableHeaderComponent.html":{},"components/DataTablePaginationComponent.html":{},"components/DataTableRowComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{},"directives/HideDirective.html":{},"classes/MyErrorStateMatcher.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["selectrow",{"_index":555,"title":{},"body":{"interfaces/DataTableTranslations.html":{},"miscellaneous/variables.html":{}}}],["sell",{"_index":1286,"title":{},"body":{"license.html":{}}}],["serve",{"_index":1247,"title":{},"body":{"index.html":{}}}],["server",{"_index":1067,"title":{},"body":{"index.html":{}}}],["set",{"_index":356,"title":{},"body":{"components/DataTablePaginationComponent.html":{},"components/DataTableRowComponent.html":{},"directives/HideDirective.html":{},"index.html":{}}}],["sethide(newcondition",{"_index":946,"title":{},"body":{"directives/HideDirective.html":{}}}],["setlimit(value",{"_index":346,"title":{},"body":{"components/DataTablePaginationComponent.html":{}}}],["setpage(value",{"_index":350,"title":{},"body":{"components/DataTablePaginationComponent.html":{}}}],["setselected(selected",{"_index":481,"title":{},"body":{"components/DataTableRowComponent.html":{}}}],["settimeout",{"_index":447,"title":{},"body":{"classes/DataTableResource.html":{}}}],["shadow",{"_index":185,"title":{},"body":{"components/DataTableHeaderComponent.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{}}}],["shall",{"_index":1295,"title":{},"body":{"license.html":{}}}],["shallow",{"_index":424,"title":{},"body":{"classes/DataTableResource.html":{}}}],["show",{"_index":1088,"title":{},"body":{"index.html":{}}}],["show/hide",{"_index":1132,"title":{},"body":{"index.html":{}}}],["showing",{"_index":1145,"title":{},"body":{"index.html":{}}}],["shown",{"_index":1123,"title":{},"body":{"index.html":{}}}],["showreloading",{"_index":1182,"title":{},"body":{"index.html":{}}}],["shows",{"_index":1138,"title":{},"body":{"index.html":{}}}],["showtitle",{"_index":1122,"title":{},"body":{"index.html":{}}}],["side",{"_index":1068,"title":{},"body":{"index.html":{}}}],["simple",{"_index":1048,"title":{},"body":{"index.html":{}}}],["single",{"_index":1159,"title":{},"body":{"index.html":{}}}],["single/multi",{"_index":1053,"title":{},"body":{"index.html":{}}}],["size",{"_index":798,"title":{},"body":{"components/FieldFilterPopupDialog.html":{}}}],["sizing",{"_index":509,"title":{},"body":{"components/DataTableRowComponent.html":{}}}],["snippet",{"_index":1235,"title":{},"body":{"index.html":{}}}],["software",{"_index":1273,"title":{},"body":{"license.html":{}}}],["solutions",{"_index":1050,"title":{},"body":{"index.html":{}}}],["sort",{"_index":1209,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["sortable",{"_index":29,"title":{},"body":{"directives/DataTableColumnDirective.html":{},"index.html":{}}}],["sortasc",{"_index":397,"title":{},"body":{"interfaces/DataTableParams.html":{},"index.html":{}}}],["sortascending",{"_index":556,"title":{},"body":{"interfaces/DataTableTranslations.html":{},"miscellaneous/variables.html":{}}}],["sortby",{"_index":398,"title":{},"body":{"interfaces/DataTableParams.html":{},"index.html":{}}}],["sortdescending",{"_index":557,"title":{},"body":{"interfaces/DataTableTranslations.html":{},"miscellaneous/variables.html":{}}}],["sorted",{"_index":1207,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["sortedascending",{"_index":558,"title":{},"body":{"interfaces/DataTableTranslations.html":{},"miscellaneous/variables.html":{}}}],["sorteddescending",{"_index":559,"title":{},"body":{"interfaces/DataTableTranslations.html":{},"miscellaneous/variables.html":{}}}],["sorting",{"_index":427,"title":{},"body":{"classes/DataTableResource.html":{},"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"directives/DataTableColumnDirective.html":{},"components/DataTableHeaderComponent.html":{},"modules/DataTableModule.html":{},"components/DataTablePaginationComponent.html":{},"interfaces/DataTableParams.html":{},"classes/DataTableResource.html":{},"components/DataTableRowComponent.html":{},"interfaces/DataTableTranslations.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"interfaces/Filter.html":{},"components/FilterBarComponent.html":{},"interfaces/FilterableField.html":{},"directives/HideDirective.html":{},"pipes/MinPipe.html":{},"classes/MyErrorStateMatcher.html":{},"pipes/PixelConverter.html":{}}}],["space",{"_index":793,"title":{},"body":{"components/FieldFilterPopupDialog.html":{}}}],["specific",{"_index":1141,"title":{},"body":{"index.html":{}}}],["split",{"_index":718,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["sporting",{"_index":1252,"title":{},"body":{"index.html":{}}}],["sr",{"_index":1121,"title":{},"body":{"index.html":{}}}],["src",{"_index":1092,"title":{},"body":{"index.html":{}}}],["started",{"_index":1047,"title":{"index.html":{},"license.html":{}},"body":{}}],["starts",{"_index":572,"title":{},"body":{"interfaces/DataTableTranslations.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["state",{"_index":80,"title":{},"body":{"directives/DataTableColumnDirective.html":{}}}],["statements",{"_index":976,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":248,"title":{},"body":{"modules/DataTableModule.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["string",{"_index":38,"title":{},"body":{"directives/DataTableColumnDirective.html":{},"interfaces/DataTableParams.html":{},"classes/DataTableResource.html":{},"interfaces/DataTableTranslations.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"interfaces/Filter.html":{},"components/FilterBarComponent.html":{},"interfaces/FilterableField.html":{},"directives/HideDirective.html":{},"pipes/MinPipe.html":{},"classes/MyErrorStateMatcher.html":{},"pipes/PixelConverter.html":{},"index.html":{}}}],["style",{"_index":204,"title":{},"body":{"components/DataTableHeaderComponent.html":{}}}],["styleclass",{"_index":30,"title":{},"body":{"directives/DataTableColumnDirective.html":{}}}],["styleclassobject",{"_index":19,"title":{},"body":{"directives/DataTableColumnDirective.html":{}}}],["styles",{"_index":103,"title":{},"body":{"components/DataTableHeaderComponent.html":{},"components/DataTablePaginationComponent.html":{},"components/DataTableRowComponent.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{},"index.html":{}}}],["styles.css",{"_index":1097,"title":{},"body":{"index.html":{}}}],["styleurls",{"_index":107,"title":{},"body":{"components/DataTableHeaderComponent.html":{},"components/DataTablePaginationComponent.html":{},"components/DataTableRowComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["sub",{"_index":1133,"title":{},"body":{"index.html":{}}}],["subject",{"_index":1291,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1285,"title":{},"body":{"license.html":{}}}],["submitted",{"_index":643,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["subset",{"_index":1150,"title":{},"body":{"index.html":{}}}],["substantial",{"_index":1297,"title":{},"body":{"license.html":{}}}],["support",{"_index":1324,"title":{},"body":{"modules.html":{}}}],["suppresscloseonclickselectors",{"_index":901,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["sure",{"_index":1078,"title":{},"body":{"index.html":{}}}],["svg",{"_index":1325,"title":{},"body":{"modules.html":{}}}],["t",{"_index":408,"title":{},"body":{"classes/DataTableResource.html":{}}}],["t,index",{"_index":415,"title":{},"body":{"classes/DataTableResource.html":{}}}],["table",{"_index":12,"title":{},"body":{"directives/DataTableColumnDirective.html":{},"components/DataTableHeaderComponent.html":{},"modules/DataTableModule.html":{},"components/DataTablePaginationComponent.html":{},"interfaces/DataTableParams.html":{},"classes/DataTableResource.html":{},"components/DataTableRowComponent.html":{},"interfaces/DataTableTranslations.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{},"classes/MyErrorStateMatcher.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["table's",{"_index":1110,"title":{},"body":{"index.html":{}}}],["table'},{'name",{"_index":211,"title":{},"body":{"components/DataTableHeaderComponent.html":{},"components/DataTablePaginationComponent.html":{},"components/DataTableRowComponent.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{}}}],["table/table.component",{"_index":136,"title":{},"body":{"components/DataTableHeaderComponent.html":{},"components/DataTablePaginationComponent.html":{},"components/DataTableRowComponent.html":{},"components/FilterBarComponent.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":999,"title":{},"body":{"coverage.html":{}}}],["targeting",{"_index":1236,"title":{},"body":{"index.html":{}}}],["template",{"_index":102,"title":{},"body":{"components/DataTableHeaderComponent.html":{},"components/DataTablePaginationComponent.html":{},"components/DataTableRowComponent.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{},"index.html":{}}}],["templates",{"_index":1220,"title":{},"body":{"index.html":{}}}],["templateurl",{"_index":109,"title":{},"body":{"components/DataTableHeaderComponent.html":{},"components/DataTablePaginationComponent.html":{},"components/DataTableRowComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["text",{"_index":387,"title":{},"body":{"components/DataTablePaginationComponent.html":{},"components/DataTableRowComponent.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"interfaces/FilterableField.html":{},"classes/MyErrorStateMatcher.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["textualoperators",{"_index":653,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["th",{"_index":525,"title":{},"body":{"components/DataTableRowComponent.html":{}}}],["this._dialogcloser(field",{"_index":617,"title":{},"body":{"interfaces/DialogData.html":{},"components/FieldFilterChooserPopupDialog.html":{}}}],["this._dialogcloser({field",{"_index":691,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this._displaystyle",{"_index":955,"title":{},"body":{"directives/HideDirective.html":{}}}],["this._elementref.nativeelement.style.display",{"_index":957,"title":{},"body":{"directives/HideDirective.html":{}}}],["this._initcellclass",{"_index":86,"title":{},"body":{"directives/DataTableColumnDirective.html":{}}}],["this._listeners.foreach(fn",{"_index":504,"title":{},"body":{"components/DataTableRowComponent.html":{}}}],["this._listeners.push",{"_index":496,"title":{},"body":{"components/DataTableRowComponent.html":{}}}],["this._prevcondition",{"_index":953,"title":{},"body":{"directives/HideDirective.html":{}}}],["this._selected",{"_index":487,"title":{},"body":{"components/DataTableRowComponent.html":{}}}],["this.activeitem",{"_index":627,"title":{},"body":{"interfaces/DialogData.html":{},"components/FieldFilterChooserPopupDialog.html":{}}}],["this.cellcolors",{"_index":82,"title":{},"body":{"directives/DataTableColumnDirective.html":{}}}],["this.cellcolors)(row.item",{"_index":85,"title":{},"body":{"directives/DataTableColumnDirective.html":{}}}],["this.columnselectoropen",{"_index":141,"title":{},"body":{"components/DataTableHeaderComponent.html":{}}}],["this.convertfiltertoemittedfilter(c",{"_index":892,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["this.convertfiltertoemittedfilter(filter",{"_index":887,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["this.convertfiltertoemittedfilter(result",{"_index":888,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["this.data.fieldfilter.field",{"_index":692,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.data.fieldfilter.field.datatype",{"_index":672,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.data.fieldfilter.field.header",{"_index":676,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.data.fieldfilter.operator",{"_index":679,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.data.fieldfilter.value",{"_index":683,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.data.fields.filter(c",{"_index":614,"title":{},"body":{"interfaces/DialogData.html":{},"components/FieldFilterChooserPopupDialog.html":{}}}],["this.data.labels.numericvaluerequired",{"_index":706,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.data.labels.selectedvaluerequired",{"_index":664,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.data.labels.validdaterequired",{"_index":702,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.data.labels.valuerequired",{"_index":704,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.datatable.columnselectornotification",{"_index":156,"title":{},"body":{"components/DataTableHeaderComponent.html":{}}}],["this.datatable.displayparams.offset",{"_index":491,"title":{},"body":{"components/DataTableRowComponent.html":{}}}],["this.datatable.filterablefields",{"_index":876,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["this.datatable.filteradded.emit(this.convertfiltertoemittedfilter(result",{"_index":900,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["this.datatable.filterchanged.emit(this.filters.map(c",{"_index":891,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["this.datatable.filterremoved.emit(this.convertfiltertoemittedfilter(filter",{"_index":905,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["this.datatable.filterupdated.emit",{"_index":885,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["this.datatable.itemcount",{"_index":367,"title":{},"body":{"components/DataTablePaginationComponent.html":{}}}],["this.datatable.labels",{"_index":896,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["this.datatable.labels.filteroperators[filter.operator",{"_index":915,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["this.datatable.labels.headercolumnselectoradded",{"_index":157,"title":{},"body":{"components/DataTableHeaderComponent.html":{}}}],["this.datatable.labels.headercolumnselectorremoved",{"_index":158,"title":{},"body":{"components/DataTableHeaderComponent.html":{}}}],["this.datatable.labels.not",{"_index":913,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["this.datatable.limit",{"_index":355,"title":{},"body":{"components/DataTablePaginationComponent.html":{}}}],["this.datatable.offset",{"_index":365,"title":{},"body":{"components/DataTablePaginationComponent.html":{}}}],["this.datatable.page",{"_index":363,"title":{},"body":{"components/DataTablePaginationComponent.html":{}}}],["this.datatable.pagination",{"_index":490,"title":{},"body":{"components/DataTableRowComponent.html":{}}}],["this.datatable.rowclick.observers.length",{"_index":495,"title":{},"body":{"components/DataTableRowComponent.html":{}}}],["this.datatable.rowclicked(this",{"_index":499,"title":{},"body":{"components/DataTableRowComponent.html":{}}}],["this.datatable.rowdoubleclick.observers.length",{"_index":500,"title":{},"body":{"components/DataTableRowComponent.html":{}}}],["this.datatable.rowdoubleclicked(this",{"_index":502,"title":{},"body":{"components/DataTableRowComponent.html":{}}}],["this.datatable.rowtooltip",{"_index":493,"title":{},"body":{"components/DataTableRowComponent.html":{}}}],["this.datatable.rowtooltip(this.item",{"_index":494,"title":{},"body":{"components/DataTableRowComponent.html":{}}}],["this.datatable.title",{"_index":155,"title":{},"body":{"components/DataTableHeaderComponent.html":{}}}],["this.datatype",{"_index":671,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.elemref.nativeelement.contains(event.target",{"_index":140,"title":{},"body":{"components/DataTableHeaderComponent.html":{}}}],["this.fieldchooserdialogref",{"_index":893,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["this.fieldchooserdialogref.afterclosed().subscribe(result",{"_index":897,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["this.fields",{"_index":875,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["this.filteredfields",{"_index":608,"title":{},"body":{"interfaces/DialogData.html":{},"components/FieldFilterChooserPopupDialog.html":{}}}],["this.filteroperators",{"_index":673,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.filteroperators[0",{"_index":680,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.filters",{"_index":878,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["this.filters.indexof(filter",{"_index":889,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["this.filters.push(result",{"_index":899,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["this.filters.splice(index",{"_index":904,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["this.filters[index",{"_index":890,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["this.filtervalue",{"_index":681,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.formatdate(value",{"_index":690,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.formatvalue(filter",{"_index":916,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["this.index",{"_index":492,"title":{},"body":{"components/DataTableRowComponent.html":{}}}],["this.initdisplaystyle",{"_index":951,"title":{},"body":{"directives/HideDirective.html":{}}}],["this.isatleastonevalueselected",{"_index":687,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.items.filter(filter",{"_index":422,"title":{},"body":{"classes/DataTableResource.html":{}}}],["this.items.slice",{"_index":423,"title":{},"body":{"classes/DataTableResource.html":{}}}],["this.keyboardeventsmanager",{"_index":611,"title":{},"body":{"interfaces/DialogData.html":{},"components/FieldFilterChooserPopupDialog.html":{}}}],["this.keyboardeventsmanager.activeitem",{"_index":626,"title":{},"body":{"interfaces/DialogData.html":{},"components/FieldFilterChooserPopupDialog.html":{}}}],["this.keyboardeventsmanager.onkeydown(event",{"_index":625,"title":{},"body":{"interfaces/DialogData.html":{},"components/FieldFilterChooserPopupDialog.html":{}}}],["this.keyboardeventsmanager.setfirstitemactive",{"_index":628,"title":{},"body":{"interfaces/DialogData.html":{},"components/FieldFilterChooserPopupDialog.html":{}}}],["this.keyboardeventsmanager.setlastitemactive",{"_index":629,"title":{},"body":{"interfaces/DialogData.html":{},"components/FieldFilterChooserPopupDialog.html":{}}}],["this.math",{"_index":353,"title":{},"body":{"components/DataTablePaginationComponent.html":{}}}],["this.maxpage",{"_index":369,"title":{},"body":{"components/DataTablePaginationComponent.html":{}}}],["this.openfieldchooserdialog(event.currenttarget",{"_index":881,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["this.openfieldfilterdialog(event.currenttarget",{"_index":883,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["this.openfieldfilterdialog(triggeredelement",{"_index":898,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["this.page",{"_index":361,"title":{},"body":{"components/DataTablePaginationComponent.html":{}}}],["this.pageinput.nativeelement.focus",{"_index":368,"title":{},"body":{"components/DataTablePaginationComponent.html":{}}}],["this.popupdialogservice.open",{"_index":894,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["this.property",{"_index":88,"title":{},"body":{"directives/DataTableColumnDirective.html":{}}}],["this.property.replace(/[^a",{"_index":92,"title":{},"body":{"directives/DataTableColumnDirective.html":{}}}],["this.renderer.listen(this.elementref.nativeelement",{"_index":497,"title":{},"body":{"components/DataTableRowComponent.html":{}}}],["this.renderer.setstyle(this._elementref.nativeelement",{"_index":954,"title":{},"body":{"directives/HideDirective.html":{}}}],["this.selected",{"_index":503,"title":{},"body":{"components/DataTableRowComponent.html":{}}}],["this.selectedchange.emit(selected",{"_index":489,"title":{},"body":{"components/DataTableRowComponent.html":{}}}],["this.selectedoperator",{"_index":678,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.styleclass",{"_index":87,"title":{},"body":{"directives/DataTableColumnDirective.html":{}}}],["this.styleclassobject",{"_index":95,"title":{},"body":{"directives/DataTableColumnDirective.html":{}}}],["this.todate(this.data.fieldfilter.value",{"_index":682,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.valueslist",{"_index":684,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.valueslist.concat(this.data.fieldfilter.value).filter(v",{"_index":685,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.valueslist.indexof(value",{"_index":697,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.valueslist.length",{"_index":688,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.valueslist.push(value",{"_index":696,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.valueslist.splice(index",{"_index":698,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["through",{"_index":1120,"title":{},"body":{"index.html":{}}}],["throw",{"_index":675,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["thumb",{"_index":750,"title":{},"body":{"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{}}}],["time",{"_index":1174,"title":{},"body":{"index.html":{}}}],["times",{"_index":1165,"title":{},"body":{"index.html":{}}}],["title",{"_index":154,"title":{},"body":{"components/DataTableHeaderComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["title]=\"datatable.labels.lastpage",{"_index":382,"title":{},"body":{"components/DataTablePaginationComponent.html":{}}}],["title]=\"datatable.labels.nextpage",{"_index":378,"title":{},"body":{"components/DataTablePaginationComponent.html":{}}}],["todate",{"_index":764,"title":{},"body":{"components/FieldFilterPopupDialog.html":{}}}],["todate(s",{"_index":716,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["tools",{"_index":291,"title":{},"body":{"modules/DataTableModule.html":{}}}],["tools/data",{"_index":298,"title":{},"body":{"modules/DataTableModule.html":{}}}],["tooltip",{"_index":1180,"title":{},"body":{"index.html":{}}}],["top",{"_index":192,"title":{},"body":{"components/DataTableHeaderComponent.html":{},"index.html":{}}}],["tort",{"_index":1320,"title":{},"body":{"license.html":{}}}],["total",{"_index":1351,"title":{},"body":{"miscellaneous/variables.html":{}}}],["touched",{"_index":642,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["transform",{"_index":961,"title":{},"body":{"pipes/MinPipe.html":{},"pipes/PixelConverter.html":{}}}],["transform(value",{"_index":962,"title":{},"body":{"pipes/MinPipe.html":{},"pipes/PixelConverter.html":{}}}],["translations.type",{"_index":294,"title":{},"body":{"modules/DataTableModule.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["translations.type.ts",{"_index":528,"title":{},"body":{"interfaces/DataTableTranslations.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["transparent",{"_index":928,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["tree",{"_index":105,"title":{},"body":{"components/DataTableHeaderComponent.html":{},"components/DataTablePaginationComponent.html":{},"components/DataTableRowComponent.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{}}}],["triggeredelement",{"_index":861,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["true",{"_index":47,"title":{},"body":{"directives/DataTableColumnDirective.html":{},"interfaces/DataTableTranslations.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{},"directives/HideDirective.html":{},"classes/MyErrorStateMatcher.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["tslint",{"_index":1036,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":1135,"title":{},"body":{"index.html":{}}}],["type",{"_index":33,"title":{},"body":{"directives/DataTableColumnDirective.html":{},"components/DataTableHeaderComponent.html":{},"components/DataTablePaginationComponent.html":{},"interfaces/DataTableParams.html":{},"classes/DataTableResource.html":{},"components/DataTableRowComponent.html":{},"interfaces/DataTableTranslations.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"interfaces/Filter.html":{},"components/FilterBarComponent.html":{},"interfaces/FilterableField.html":{},"directives/HideDirective.html":{},"pipes/MinPipe.html":{},"classes/MyErrorStateMatcher.html":{},"pipes/PixelConverter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1330,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":434,"title":{},"body":{"classes/DataTableResource.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{},"classes/MyErrorStateMatcher.html":{},"pipes/PixelConverter.html":{}}}],["types",{"_index":290,"title":{},"body":{"modules/DataTableModule.html":{}}}],["types/cell",{"_index":75,"title":{},"body":{"directives/DataTableColumnDirective.html":{},"modules/DataTableModule.html":{}}}],["types/data",{"_index":293,"title":{},"body":{"modules/DataTableModule.html":{},"classes/DataTableResource.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["types/filter.type",{"_index":637,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["types/filterable",{"_index":586,"title":{},"body":{"interfaces/DialogData.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FilterBarComponent.html":{}}}],["types/row",{"_index":296,"title":{},"body":{"modules/DataTableModule.html":{}}}],["undefined",{"_index":83,"title":{},"body":{"directives/DataTableColumnDirective.html":{},"classes/DataTableResource.html":{},"directives/HideDirective.html":{},"pipes/PixelConverter.html":{},"miscellaneous/functions.html":{}}}],["up_arrow",{"_index":592,"title":{},"body":{"interfaces/DialogData.html":{},"components/FieldFilterChooserPopupDialog.html":{}}}],["uphandler",{"_index":1338,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["usage",{"_index":1229,"title":{},"body":{"index.html":{}}}],["use",{"_index":426,"title":{},"body":{"classes/DataTableResource.html":{},"index.html":{},"license.html":{}}}],["used",{"_index":1060,"title":{},"body":{"index.html":{}}}],["useful",{"_index":1124,"title":{},"body":{"index.html":{}}}],["user",{"_index":522,"title":{},"body":{"components/DataTableRowComponent.html":{}}}],["utils",{"_index":282,"title":{},"body":{"modules/DataTableModule.html":{}}}],["utils/hide",{"_index":283,"title":{},"body":{"modules/DataTableModule.html":{}}}],["utils/min",{"_index":284,"title":{},"body":{"modules/DataTableModule.html":{}}}],["utils/px",{"_index":285,"title":{},"body":{"modules/DataTableModule.html":{}}}],["v",{"_index":686,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["v.displaytext",{"_index":910,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["v4.0",{"_index":1074,"title":{},"body":{"index.html":{}}}],["v4.7",{"_index":1076,"title":{},"body":{"index.html":{}}}],["valid",{"_index":1202,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["validate",{"_index":323,"title":{},"body":{"components/DataTablePaginationComponent.html":{}}}],["validate(event",{"_index":334,"title":{},"body":{"components/DataTablePaginationComponent.html":{}}}],["validdaterequired",{"_index":560,"title":{},"body":{"interfaces/DataTableTranslations.html":{},"miscellaneous/variables.html":{}}}],["value",{"_index":42,"title":{},"body":{"directives/DataTableColumnDirective.html":{},"components/DataTableHeaderComponent.html":{},"components/DataTablePaginationComponent.html":{},"components/DataTableRowComponent.html":{},"interfaces/DataTableTranslations.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"interfaces/Filter.html":{},"components/FilterBarComponent.html":{},"interfaces/FilterableField.html":{},"directives/HideDirective.html":{},"pipes/MinPipe.html":{},"classes/MyErrorStateMatcher.html":{},"pipes/PixelConverter.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["value.join",{"_index":912,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["valuecheckchange",{"_index":765,"title":{},"body":{"components/FieldFilterPopupDialog.html":{}}}],["valuecheckchange(value",{"_index":694,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"classes/MyErrorStateMatcher.html":{}}}],["valuerequired",{"_index":561,"title":{},"body":{"interfaces/DataTableTranslations.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":919,"title":{},"body":{"components/FilterBarComponent.html":{}}}],["valueslist",{"_index":668,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["var",{"_index":209,"title":{},"body":{"components/DataTableHeaderComponent.html":{},"components/DataTablePaginationComponent.html":{},"components/DataTableRowComponent.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{}}}],["variable",{"_index":985,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1341,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["versions",{"_index":1103,"title":{},"body":{"index.html":{}}}],["versionsusage",{"_index":1100,"title":{},"body":{"index.html":{}}}],["via",{"_index":1158,"title":{},"body":{"index.html":{}}}],["viewchild",{"_index":352,"title":{},"body":{"components/DataTablePaginationComponent.html":{}}}],["viewchild('pageinput",{"_index":340,"title":{},"body":{"components/DataTablePaginationComponent.html":{}}}],["viewchildren",{"_index":583,"title":{},"body":{"interfaces/DialogData.html":{},"components/FieldFilterChooserPopupDialog.html":{}}}],["viewchildren('listitem",{"_index":598,"title":{},"body":{"interfaces/DialogData.html":{},"components/FieldFilterChooserPopupDialog.html":{}}}],["viewer",{"_index":1256,"title":{},"body":{"index.html":{}}}],["visible",{"_index":31,"title":{},"body":{"directives/DataTableColumnDirective.html":{},"components/DataTableRowComponent.html":{},"index.html":{}}}],["void",{"_index":53,"title":{},"body":{"directives/DataTableColumnDirective.html":{},"components/DataTableHeaderComponent.html":{},"components/DataTablePaginationComponent.html":{},"classes/DataTableResource.html":{},"components/DataTableRowComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"components/FilterBarComponent.html":{},"directives/HideDirective.html":{},"classes/MyErrorStateMatcher.html":{},"index.html":{}}}],["want",{"_index":1125,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":1305,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1300,"title":{},"body":{"license.html":{}}}],["webkit",{"_index":508,"title":{},"body":{"components/DataTableRowComponent.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{}}}],["weight",{"_index":526,"title":{},"body":{"components/DataTableRowComponent.html":{}}}],["whatever",{"_index":1243,"title":{},"body":{"index.html":{}}}],["whether",{"_index":1317,"title":{},"body":{"license.html":{}}}],["white",{"_index":188,"title":{},"body":{"components/DataTableHeaderComponent.html":{}}}],["whole",{"_index":1242,"title":{},"body":{"index.html":{}}}],["width",{"_index":32,"title":{},"body":{"directives/DataTableColumnDirective.html":{},"components/DataTableHeaderComponent.html":{},"components/DataTablePaginationComponent.html":{},"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{},"index.html":{}}}],["without",{"_index":1277,"title":{},"body":{"license.html":{}}}],["wrapper",{"_index":181,"title":{},"body":{"components/DataTableHeaderComponent.html":{}}}],["y",{"_index":745,"title":{},"body":{"components/FieldFilterChooserPopupDialog.html":{},"components/FieldFilterPopupDialog.html":{}}}],["yes",{"_index":420,"title":{},"body":{"classes/DataTableResource.html":{},"components/FilterBarComponent.html":{},"pipes/PixelConverter.html":{}}}],["z",{"_index":194,"title":{},"body":{"components/DataTableHeaderComponent.html":{}}}],["z0",{"_index":90,"title":{},"body":{"directives/DataTableColumnDirective.html":{}}}],["za",{"_index":89,"title":{},"body":{"directives/DataTableColumnDirective.html":{}}}],["zone.js",{"_index":1039,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":243,"title":{},"body":{"modules/DataTableModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"directives/DataTableColumnDirective.html":{"url":"directives/DataTableColumnDirective.html","title":"directive - DataTableColumnDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DataTableColumnDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/datatable/src/directives/column/column.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            OnInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        data-table-column\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cellTemplate\n                            \n                            \n                                headerTemplate\n                            \n                            \n                                    Private\n                                styleClassObject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _initCellClass\n                            \n                            \n                                getCellColor\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cellColors\n                            \n                            \n                                header\n                            \n                            \n                                property\n                            \n                            \n                                resizable\n                            \n                            \n                                sortable\n                            \n                            \n                                styleClass\n                            \n                            \n                                visible\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        cellColors\n                    \n                \n                \n                    \n                        Type :         CellCallback\n\n                    \n                \n                        \n                            \n                                    Defined in libs/datatable/src/directives/column/column.directive.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        header\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/datatable/src/directives/column/column.directive.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        property\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/datatable/src/directives/column/column.directive.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        resizable\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in libs/datatable/src/directives/column/column.directive.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        sortable\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in libs/datatable/src/directives/column/column.directive.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        styleClass\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/datatable/src/directives/column/column.directive.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        visible\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in libs/datatable/src/directives/column/column.directive.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n                \n                    \n                        Type :     number | string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/datatable/src/directives/column/column.directive.ts:19\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _initCellClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _initCellClass()\n                \n            \n\n\n            \n                \n                    Defined in libs/datatable/src/directives/column/column.directive.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCellColor\n                        \n                        \n                    \n                \n            \n            \n                \ngetCellColor(row: DataTableRowComponent, index: number)\n                \n            \n\n\n            \n                \n                    Defined in libs/datatable/src/directives/column/column.directive.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    row\n                                    \n                                                DataTableRowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in libs/datatable/src/directives/column/column.directive.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cellTemplate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChild('dataTableCell')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/datatable/src/directives/column/column.directive.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            headerTemplate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChild('dataTableHeader')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/datatable/src/directives/column/column.directive.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            styleClassObject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in libs/datatable/src/directives/column/column.directive.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import {ContentChild, Directive, ElementRef, Input, OnInit} from '@angular/core';\nimport {DataTableRowComponent} from '../../components/row/row.component';\nimport {CellCallback} from '../../types/cell-callback.type';\n\n\n@Directive({\n  selector: 'data-table-column'\n})\nexport class DataTableColumnDirective implements OnInit {\n\n  // init:\n  @Input() header: string;\n  @Input() sortable = false;\n  @Input() resizable = false;\n  @Input() property: string;\n  @Input() styleClass: string;\n  @Input() cellColors: CellCallback;\n  // init and state:\n  @Input() width: number | string;\n  @Input() visible = true;\n  @ContentChild('dataTableCell') cellTemplate: ElementRef;\n  @ContentChild('dataTableHeader') headerTemplate: ElementRef;\n  private styleClassObject = {}; // for [ngClass]\n\n  getCellColor(row: DataTableRowComponent, index: number) {\n    if (this.cellColors !== undefined) {\n      return (this.cellColors)(row.item, row, this, index);\n    }\n  }\n\n  ngOnInit() {\n    this._initCellClass();\n  }\n\n  private _initCellClass() {\n    if (!this.styleClass && this.property) {\n      if (/^[a-zA-Z0-9_]+$/.test(this.property)) {\n        this.styleClass = 'column-' + this.property;\n      } else {\n        this.styleClass = 'column-' + this.property.replace(/[^a-zA-Z0-9_]/g, '');\n      }\n    }\n\n    if (this.styleClass != null) {\n      this.styleClassObject = {\n        [this.styleClass]: true\n      };\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DataTableHeaderComponent.html":{"url":"components/DataTableHeaderComponent.html","title":"component - DataTableHeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DataTableHeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/datatable/src/components/header/header.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                data-table-header\n            \n\n            \n                styleUrls\n                ./header.component.css\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                columnSelectorOpen\n                            \n                            \n                                    Public\n                                dataTable\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onChange\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                            \n                                document:keyup\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataTable: DataTableComponent, elemRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in libs/datatable/src/components/header/header.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataTable\n                                                  \n                                                        \n                                                                        DataTableComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elemRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            document:click\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:click(event)\n                \n            \n\n\n            \n                \n                    Defined in libs/datatable/src/components/header/header.component.ts:17\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            document:keyup\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:keyup(event)\n                \n            \n\n\n            \n                \n                    Defined in libs/datatable/src/components/header/header.component.ts:23\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onChange\n                        \n                        \n                    \n                \n            \n            \n                \nonChange(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in libs/datatable/src/components/header/header.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnSelectorOpen\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in libs/datatable/src/components/header/header.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dataTable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DataTableComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/datatable/src/components/header/header.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, ElementRef, forwardRef, HostListener, Inject} from '@angular/core';\nimport {DataTableComponent} from '../table/table.component';\n\n@Component({\n  selector: 'data-table-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class DataTableHeaderComponent {\n\n  columnSelectorOpen = false;\n\n  constructor(@Inject(forwardRef(() => DataTableComponent)) public dataTable: DataTableComponent,\n              private elemRef: ElementRef) {\n  }\n\n  @HostListener('document:click', ['$event']) onClickHandler(event) {\n    if (!this.elemRef.nativeElement.contains(event.target)) {\n      this.columnSelectorOpen = false;\n    }\n  }\n\n  @HostListener('document:keyup', ['$event']) onKeyUpHandler(event) {\n    if (event.keyCode === 27 || (event.keyCode === 9 && !this.elemRef.nativeElement.contains(event.target))) {\n      this.columnSelectorOpen = false;\n    }\n  }\n\n  onChange(event: Event) {\n    const isChecked = (event.target).checked;\n    const columnName = (event.target).parentElement.textContent.trim();\n    const interpolateParams = {\n      'column_name': columnName,\n      'title': this.dataTable.title\n    };\n\n    this.dataTable.columnSelectorNotification = (isChecked ? this.dataTable.labels.headerColumnSelectorAdded :\n      this.dataTable.labels.headerColumnSelectorRemoved)\n      .replace('{column_name}', interpolateParams.column_name)\n      .replace('{title}', interpolateParams.title);\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n    \n    \n      \n    \n    \n      \n        \n          \n            \n              \n              \n            \n          \n          \n            \n              \n              \n            \n          \n          \n            \n              \n              \n            \n          \n          \n            \n              \n                \n                \n              \n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./header.component.css\n                \n                .data-table-header {\n  min-height: 25px;\n  margin-bottom: 10px;\n}\n\n.title {\n  display: inline-block;\n  margin: 5px 0 0 5px;\n}\n\n.button-panel {\n  float: right;\n}\n\n.button-panel button {\n  outline: none !important;\n}\n\n.column-selector-wrapper {\n  position: relative;\n}\n\n.column-selector-box {\n  box-shadow: 0 0 10px lightgray;\n  background: white;\n  width: 150px;\n  padding: 10px;\n  position: absolute;\n  right: 0;\n  top: 1px;\n  z-index: 1060;\n}\n\n.column-selector-box .list-group-item.column-selector-column {\n  padding: .5rem .25rem;\n}\n\n.column-selector-box .list-group-item.column-selector-column label {\n  margin-bottom: 0;\n}\n\n.column-selector-box .list-group-item.column-selector-column input {\n  margin-right: 4px;\n  font-style: italic;\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                                                                                                                                                                                                      '\n    var COMPONENTS = [{'name': 'DataTableComponent', 'selector': 'data-table'},{'name': 'DataTableHeaderComponent', 'selector': 'data-table-header'},{'name': 'DataTablePaginationComponent', 'selector': 'data-table-pagination'},{'name': 'DataTableRowComponent', 'selector': '[dataTableRow]'},{'name': 'FieldFilterChooserPopupDialog', 'selector': 'app-field-filter-chooser-popup-dialog'},{'name': 'FieldFilterPopupDialog', 'selector': 'app-field-filter-popup-dialog'},{'name': 'FilterBarComponent', 'selector': 'filter-bar'}];\n    var DIRECTIVES = [{'name': 'DataTableColumnDirective', 'selector': 'data-table-column'},{'name': 'HideDirective', 'selector': '[hide]'}];\n    var ACTUAL_COMPONENT = {'name': 'DataTableHeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DataTableModule.html":{"url":"modules/DataTableModule.html","title":"module - DataTableModule","body":"\n                   \n\n\n\n\n    Modules\n    DataTableModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DataTableModule\n\n\n\ncluster_DataTableModule_declarations\n\n\n\ncluster_DataTableModule_exports\n\n\n\n\nDataTableColumnDirective\n\nDataTableColumnDirective\n\n\n\nDataTableModule\n\nDataTableModule\n\nDataTableModule -->\n\nDataTableColumnDirective->DataTableModule\n\n\n\n\n\nDataTableComponent\n\nDataTableComponent\n\nDataTableModule -->\n\nDataTableComponent->DataTableModule\n\n\n\n\n\nDataTableHeaderComponent\n\nDataTableHeaderComponent\n\nDataTableModule -->\n\nDataTableHeaderComponent->DataTableModule\n\n\n\n\n\nDataTablePaginationComponent\n\nDataTablePaginationComponent\n\nDataTableModule -->\n\nDataTablePaginationComponent->DataTableModule\n\n\n\n\n\nDataTableRowComponent\n\nDataTableRowComponent\n\nDataTableModule -->\n\nDataTableRowComponent->DataTableModule\n\n\n\n\n\nFieldFilterChooserPopupDialog\n\nFieldFilterChooserPopupDialog\n\nDataTableModule -->\n\nFieldFilterChooserPopupDialog->DataTableModule\n\n\n\n\n\nFieldFilterPopupDialog\n\nFieldFilterPopupDialog\n\nDataTableModule -->\n\nFieldFilterPopupDialog->DataTableModule\n\n\n\n\n\nFilterBarComponent\n\nFilterBarComponent\n\nDataTableModule -->\n\nFilterBarComponent->DataTableModule\n\n\n\n\n\nHideDirective\n\nHideDirective\n\nDataTableModule -->\n\nHideDirective->DataTableModule\n\n\n\n\n\nMinPipe\n\nMinPipe\n\nDataTableModule -->\n\nMinPipe->DataTableModule\n\n\n\n\n\nPixelConverter\n\nPixelConverter\n\nDataTableModule -->\n\nPixelConverter->DataTableModule\n\n\n\n\n\nDataTableColumnDirective \n\nDataTableColumnDirective \n\nDataTableColumnDirective  -->\n\nDataTableModule->DataTableColumnDirective \n\n\n\n\n\nDataTableComponent \n\nDataTableComponent \n\nDataTableComponent  -->\n\nDataTableModule->DataTableComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/datatable/src/datatable.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DataTableColumnDirective\n                        \n                        \n                            DataTableComponent\n                        \n                        \n                            DataTableHeaderComponent\n                        \n                        \n                            DataTablePaginationComponent\n                        \n                        \n                            DataTableRowComponent\n                        \n                        \n                            FieldFilterChooserPopupDialog\n                        \n                        \n                            FieldFilterPopupDialog\n                        \n                        \n                            FilterBarComponent\n                        \n                        \n                            HideDirective\n                        \n                        \n                            MinPipe\n                        \n                        \n                            PixelConverter\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            FieldFilterChooserPopupDialog\n                        \n                        \n                            FieldFilterPopupDialog\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DataTableColumnDirective\n                        \n                        \n                            DataTableComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot()\n                \n            \n\n\n            \n                \n                    Defined in libs/datatable/src/datatable.module.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        // modules\nimport {ModuleWithProviders, NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\n// material\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatNativeDateModule} from '@angular/material/core';\n// utils\nimport {HideDirective} from './utils/hide';\nimport {MinPipe} from './utils/min';\nimport {PixelConverter} from './utils/px';\nimport {NgxPopupDialogModule, PopupDialogService} from 'ngx-popup-dialog';\n// types & tools\nimport {DataTableTranslations} from './types/data-table-translations.type';\nimport {CellCallback} from './types/cell-callback.type';\nimport {RowCallback} from './types/row-callback.type';\nimport {DataTableResource} from './tools/data-table-resource';\nimport {DataTableParams} from './types/data-table-params.type';\n// components & directives\nimport {DataTableComponent} from './components/table/table.component';\nimport {DataTableRowComponent} from './components/row/row.component';\nimport {DataTableColumnDirective} from './directives/column/column.directive';\nimport {DataTableHeaderComponent} from './components/header/header.component';\nimport {DataTablePaginationComponent} from './components/pagination/pagination.component';\nimport {FilterBarComponent} from './components/filter-bar/filter-bar.component';\nimport {FieldFilterChooserPopupDialog} from './components/filter-bar/field-filter-chooser-popup-dialog/field-filter-chooser-popup-dialog';\nimport {FieldFilterPopupDialog} from './components/filter-bar/field-filter-popup-dialog/field-filter-popup-dialog';\n\nexport {\n  DataTableComponent,\n  DataTableColumnDirective,\n  DataTableRowComponent,\n  DataTablePaginationComponent,\n  DataTableHeaderComponent,\n  DataTableResource,\n  DataTableParams, DataTableTranslations,\n  CellCallback, RowCallback\n};\n\n@NgModule({\n  declarations: [\n    DataTableComponent,\n    DataTableColumnDirective,\n    DataTableRowComponent,\n    DataTablePaginationComponent,\n    DataTableHeaderComponent,\n    PixelConverter,\n    HideDirective,\n    MinPipe,\n    FilterBarComponent,\n    FieldFilterChooserPopupDialog,\n    FieldFilterPopupDialog\n  ],\n  entryComponents: [\n    FieldFilterChooserPopupDialog,\n    FieldFilterPopupDialog\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    {\n      ngModule: NgxPopupDialogModule,\n      providers: [PopupDialogService]\n    },\n    MatFormFieldModule,\n    MatIconModule,\n    MatDialogModule,\n    MatChipsModule,\n    MatInputModule,\n    MatButtonModule,\n    MatListModule,\n    MatSelectModule,\n    MatCheckboxModule,\n    MatRadioModule,\n    MatDatepickerModule,\n    MatNativeDateModule\n  ],\n  exports: [DataTableComponent, DataTableColumnDirective]\n})\n\nexport class DataTableModule {\n  public static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: DataTableModule,\n      providers: []\n    };\n  }\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DataTablePaginationComponent.html":{"url":"components/DataTablePaginationComponent.html","title":"component - DataTablePaginationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DataTablePaginationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/datatable/src/components/pagination/pagination.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                data-table-pagination\n            \n\n            \n                styleUrls\n                ./pagination.component.css\n            \n\n\n\n            \n                templateUrl\n                ./pagination.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dataTable\n                            \n                            \n                                id\n                            \n                            \n                                Math\n                            \n                            \n                                pageInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                pageBack\n                            \n                            \n                                pageFirst\n                            \n                            \n                                pageForward\n                            \n                            \n                                pageLast\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                limits\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    maxPage\n                                \n                                \n                                    limit\n                                \n                                \n                                    page\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataTable: DataTableComponent)\n                    \n                \n                        \n                            \n                                Defined in libs/datatable/src/components/pagination/pagination.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataTable\n                                                  \n                                                        \n                                                                        DataTableComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        limits\n                    \n                \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                        \n                            \n                                    Defined in libs/datatable/src/components/pagination/pagination.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            pageBack\n                        \n                        \n                    \n                \n            \n            \n                \npageBack()\n                \n            \n\n\n            \n                \n                    Defined in libs/datatable/src/components/pagination/pagination.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            pageFirst\n                        \n                        \n                    \n                \n            \n            \n                \npageFirst()\n                \n            \n\n\n            \n                \n                    Defined in libs/datatable/src/components/pagination/pagination.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            pageForward\n                        \n                        \n                    \n                \n            \n            \n                \npageForward()\n                \n            \n\n\n            \n                \n                    Defined in libs/datatable/src/components/pagination/pagination.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            pageLast\n                        \n                        \n                    \n                \n            \n            \n                \npageLast()\n                \n            \n\n\n            \n                \n                    Defined in libs/datatable/src/components/pagination/pagination.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(event)\n                \n            \n\n\n            \n                \n                    Defined in libs/datatable/src/components/pagination/pagination.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dataTable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DataTableComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/datatable/src/components/pagination/pagination.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `pagination-${nextId++}`\n                        \n                    \n                        \n                            \n                                    Defined in libs/datatable/src/components/pagination/pagination.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Math\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/datatable/src/components/pagination/pagination.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pageInput\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('pageInput')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/datatable/src/components/pagination/pagination.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        maxPage\n                    \n                \n\n                \n                    \n                        getmaxPage()\n                    \n                \n                            \n                                \n                                    Defined in libs/datatable/src/components/pagination/pagination.component.ts:25\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        limit\n                    \n                \n\n                \n                    \n                        getlimit()\n                    \n                \n                            \n                                \n                                    Defined in libs/datatable/src/components/pagination/pagination.component.ts:29\n                                \n                            \n\n                \n                    \n                        setlimit(value)\n                    \n                \n                            \n                                \n                                    Defined in libs/datatable/src/components/pagination/pagination.component.ts:33\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        page\n                    \n                \n\n                \n                    \n                        getpage()\n                    \n                \n                            \n                                \n                                    Defined in libs/datatable/src/components/pagination/pagination.component.ts:39\n                                \n                            \n\n                \n                    \n                        setpage(value)\n                    \n                \n                            \n                                \n                                    Defined in libs/datatable/src/components/pagination/pagination.component.ts:43\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {Component, ElementRef, forwardRef, Inject, Input, ViewChild} from '@angular/core';\nimport {DataTableComponent} from '../table/table.component';\n\nlet nextId = 0;\n\n@Component({\n  selector: 'data-table-pagination',\n  templateUrl: './pagination.component.html',\n  styleUrls: ['./pagination.component.css']\n})\nexport class DataTablePaginationComponent {\n\n  id = `pagination-${nextId++}`;\n\n  @ViewChild('pageInput') pageInput: ElementRef;\n\n  Math: any;\n\n  @Input() limits: number[];\n\n  constructor(@Inject(forwardRef(() => DataTableComponent)) public dataTable: DataTableComponent) {\n    this.Math = Math;\n  }\n\n  get maxPage() {\n    return Math.ceil(this.dataTable.itemCount / this.dataTable.limit);\n  }\n\n  get limit() {\n    return this.dataTable.limit;\n  }\n\n  set limit(value) {\n    this.dataTable.limit = +value;\n    // returning back to the first page.\n    this.page = 1;\n  }\n\n  get page() {\n    return this.dataTable.page;\n  }\n\n  set page(value) {\n    this.dataTable.page = +value;\n  }\n\n  pageBack() {\n    this.dataTable.offset -= Math.min(this.dataTable.limit, this.dataTable.offset);\n    if (this.dataTable.offset = this.dataTable.itemCount) {\n      this.pageInput.nativeElement.focus();\n    }\n  }\n\n  pageFirst() {\n    this.dataTable.offset = 0;\n    this.pageInput.nativeElement.focus();\n  }\n\n  pageLast() {\n    this.dataTable.offset = (this.maxPage - 1) * this.dataTable.limit;\n    if ((this.dataTable.offset + this.dataTable.limit) >= this.dataTable.itemCount) {\n      this.pageInput.nativeElement.focus();\n    }\n  }\n\n  validate(event) {\n    const newValue = +event.target.value;\n    if (newValue !== this.page) {\n      this.page = (event.target.value > this.maxPage) ? this.maxPage : (newValue \n    \n\n    \n        \n  \n    \n  \n  \n    \n      \n        \n          \n        \n        \n          {{ l }}\n        \n      \n    \n    \n      \n        \n      \n      \n        \n      \n      \n        \n          \n            \n              {{ dataTable.labels.pageNumberLabel }}\n            \n          \n          \n          \n            \n              {{ dataTable.labels.paginationTotalPages }}&nbsp;{{ dataTable.lastPage }}\n            \n          \n        \n      \n      = dataTable.itemCount\"\n              [title]=\"dataTable.labels.nextPage\"\n              class=\"btn btn-default pagination-nextpage\">\n        \n      \n      = dataTable.itemCount\"\n              [title]=\"dataTable.labels.lastPage\"\n              class=\"btn btn-default pagination-lastpage\">\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./pagination.component.css\n                \n                .pagination-controllers select {\n  min-width: 5rem;\n  /*padding: 1px 0px 0px 5px;*/\n  text-align: right;\n}\n\n.pagination-pages > * {\n  margin: 0 0.15rem;\n}\n\n.pagination-limit {\n  margin-right: 1.5rem;\n}\n\n.pagination-box button {\n  outline: none !important;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                {{ l }}                                                                                                                {{ dataTable.labels.pageNumberLabel }}                                                                    {{ dataTable.labels.paginationTotalPages }} {{ dataTable.lastPage }}                                          = dataTable.itemCount\"              [title]=\"dataTable.labels.nextPage\"              class=\"btn btn-default pagination-nextpage\">                    = dataTable.itemCount\"              [title]=\"dataTable.labels.lastPage\"              class=\"btn btn-default pagination-lastpage\">                    '\n    var COMPONENTS = [{'name': 'DataTableComponent', 'selector': 'data-table'},{'name': 'DataTableHeaderComponent', 'selector': 'data-table-header'},{'name': 'DataTablePaginationComponent', 'selector': 'data-table-pagination'},{'name': 'DataTableRowComponent', 'selector': '[dataTableRow]'},{'name': 'FieldFilterChooserPopupDialog', 'selector': 'app-field-filter-chooser-popup-dialog'},{'name': 'FieldFilterPopupDialog', 'selector': 'app-field-filter-popup-dialog'},{'name': 'FilterBarComponent', 'selector': 'filter-bar'}];\n    var DIRECTIVES = [{'name': 'DataTableColumnDirective', 'selector': 'data-table-column'},{'name': 'HideDirective', 'selector': '[hide]'}];\n    var ACTUAL_COMPONENT = {'name': 'DataTablePaginationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DataTableParams.html":{"url":"interfaces/DataTableParams.html","title":"interface - DataTableParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DataTableParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/datatable/src/types/data-table-params.type.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        limit\n                                \n                                \n                                            Optional\n                                        offset\n                                \n                                \n                                            Optional\n                                        sortAsc\n                                \n                                \n                                            Optional\n                                        sortBy\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [index: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in libs/datatable/src/types/data-table-params.type.ts:5\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        limit\n                                    \n                                \n                                \n                                    \n                                        limit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offset\n                                    \n                                \n                                \n                                    \n                                        offset:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sortAsc\n                                    \n                                \n                                \n                                    \n                                        sortAsc:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sortBy\n                                    \n                                \n                                \n                                    \n                                        sortBy:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DataTableParams {\n  offset?: number;\n  limit?: number;\n  sortBy?: string;\n  sortAsc?: boolean;\n\n  [index: string]: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DataTableResource.html":{"url":"classes/DataTableResource.html","title":"class - DataTableResource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DataTableResource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/datatable/src/tools/data-table-resource.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                count\n                            \n                            \n                                query\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(items: T[])\n                    \n                \n                        \n                            \n                                Defined in libs/datatable/src/tools/data-table-resource.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                  \n                                                        \n                                                                    T[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            count\n                        \n                        \n                    \n                \n            \n            \n                \ncount()\n                \n            \n\n\n            \n                \n                    Defined in libs/datatable/src/tools/data-table-resource.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            query\n                        \n                        \n                    \n                \n            \n            \n                \nquery(params: DataTableParams, filter?: (item?: T,index?: number,items?: T[]) => void)\n                \n            \n\n\n            \n                \n                    Defined in libs/datatable/src/tools/data-table-resource.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                DataTableParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                                function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {DataTableParams} from '../types/data-table-params.type';\n\n\nexport class DataTableResource {\n\n  constructor(private items: T[]) {\n  }\n\n  query(params: DataTableParams, filter?: (item: T, index: number, items: T[]) => boolean): Promise {\n\n    let result: T[] = [];\n    if (filter) {\n      result = this.items.filter(filter);\n    } else {\n      result = this.items.slice(); // shallow copy to use for sorting instead of changing the original\n    }\n\n    if (params.sortBy) {\n      result.sort((a: DataTableParams, b: DataTableParams) => {\n        if (typeof a[params.sortBy] === 'string') {\n          return a[params.sortBy].localeCompare(b[params.sortBy]);\n        } else {\n          return a[params.sortBy] - b[params.sortBy];\n        }\n      });\n      if (params.sortAsc === false) {\n        result.reverse();\n      }\n    }\n    if (params.offset !== undefined) {\n      if (params.limit === undefined) {\n        result = result.slice(params.offset, result.length);\n      } else {\n        result = result.slice(params.offset, params.offset + params.limit);\n      }\n    }\n\n    return new Promise((resolve, reject) => {\n      setTimeout(() => resolve(result));\n    });\n  }\n\n  count(): Promise {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => resolve(this.items.length));\n    });\n\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DataTableRowComponent.html":{"url":"components/DataTableRowComponent.html","title":"component - DataTableRowComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DataTableRowComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/datatable/src/components/row/row.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                [dataTableRow]\n            \n\n            \n                styleUrls\n                ./row.component.css\n            \n\n\n\n            \n                templateUrl\n                ./row.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _listeners\n                            \n                            \n                                    Private\n                                _selected\n                            \n                            \n                                    Public\n                                _this\n                            \n                            \n                                    Public\n                                dataTable\n                            \n                            \n                                expanded\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTooltip\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                index\n                            \n                            \n                                item\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectedChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    selected\n                                \n                                \n                                    displayIndex\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataTable: DataTableComponent, renderer: Renderer2, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in libs/datatable/src/components/row/row.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataTable\n                                                  \n                                                        \n                                                                        DataTableComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in libs/datatable/src/components/row/row.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        item\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in libs/datatable/src/components/row/row.component.ts:24\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selectedChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in libs/datatable/src/components/row/row.component.ts:27\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTooltip\n                        \n                        \n                    \n                \n            \n            \n                \ngetTooltip()\n                \n            \n\n\n            \n                \n                    Defined in libs/datatable/src/components/row/row.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in libs/datatable/src/components/row/row.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in libs/datatable/src/components/row/row.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _listeners\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in libs/datatable/src/components/row/row.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/datatable/src/components/row/row.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _this\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this\n                        \n                    \n                        \n                            \n                                    Defined in libs/datatable/src/components/row/row.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dataTable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DataTableComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/datatable/src/components/row/row.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expanded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/datatable/src/components/row/row.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n\n                \n                    \n                        getselected()\n                    \n                \n                            \n                                \n                                    Defined in libs/datatable/src/components/row/row.component.ts:37\n                                \n                            \n\n                \n                    \n                        setselected(selected)\n                    \n                \n                            \n                                \n                                    Defined in libs/datatable/src/components/row/row.component.ts:41\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            selected\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        displayIndex\n                    \n                \n\n                \n                    \n                        getdisplayIndex()\n                    \n                \n                            \n                                \n                                    Defined in libs/datatable/src/components/row/row.component.ts:47\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  Renderer2\n} from '@angular/core';\nimport {DataTableComponent} from '../table/table.component';\n\n@Component({\n  selector: '[dataTableRow]',\n  templateUrl: './row.component.html',\n  styleUrls: ['./row.component.css']\n})\nexport class DataTableRowComponent implements OnInit, OnDestroy {\n\n  public _this = this;\n\n  @Input() item: any;\n  @Input() index: number;\n  expanded: boolean;\n  @Output() selectedChange = new EventEmitter();\n  private _listeners = [];\n\n  constructor(@Inject(forwardRef(() => DataTableComponent)) public dataTable: DataTableComponent,\n              private renderer: Renderer2, private elementRef: ElementRef) {\n  }\n\n  // row selection:\n  private _selected: boolean;\n\n  get selected() {\n    return this._selected;\n  }\n\n  set selected(selected) {\n    this._selected = selected;\n    this.selectedChange.emit(selected);\n  }\n\n  // other:\n  get displayIndex() {\n    if (this.dataTable.pagination) {\n      return this.dataTable.displayParams.offset + this.index + 1;\n    } else {\n      return this.index + 1;\n    }\n  }\n\n  getTooltip() {\n    if (this.dataTable.rowTooltip) {\n      return this.dataTable.rowTooltip(this.item, this, this.index);\n    }\n    return '';\n  }\n\n  ngOnInit() {\n    if (this.dataTable.rowClick.observers.length > 0) {\n      this._listeners.push(\n        this.renderer.listen(this.elementRef.nativeElement, 'click',\n          (event) => this.dataTable.rowClicked(this, event))\n      );\n    }\n    if (this.dataTable.rowDoubleClick.observers.length > 0) {\n      this._listeners.push(\n        this.renderer.listen(this.elementRef.nativeElement, 'dblclick',\n          (event) => this.dataTable.rowDoubleClicked(this, event))\n      );\n    }\n  }\n\n  ngOnDestroy() {\n    this.selected = false;\n    this._listeners.forEach(fn => fn());\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n  \n  \n  \n    \n  \n  \n    \n      \n      \n    \n    \n      \n      \n    \n  \n\n\n  \n    \n  \n\n\n    \n\n    \n                \n                    ./row.component.css\n                \n                .select-column {\n  text-align: center;\n}\n\n.row-expand-button {\n  -webkit-box-sizing: content-box;\n  -moz-box-sizing: content-box;\n  box-sizing: content-box;\n  background: none;\n  border: 0;\n  color: inherit;\n  cursor: pointer;\n  font: inherit;\n  line-height: normal;\n  overflow: visible;\n  padding: 0.15rem 0.75rem;\n  -webkit-appearance: button;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n}\n\n.clickable {\n  cursor: pointer;\n}\n\nth {\n  font-weight: initial;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                '\n    var COMPONENTS = [{'name': 'DataTableComponent', 'selector': 'data-table'},{'name': 'DataTableHeaderComponent', 'selector': 'data-table-header'},{'name': 'DataTablePaginationComponent', 'selector': 'data-table-pagination'},{'name': 'DataTableRowComponent', 'selector': '[dataTableRow]'},{'name': 'FieldFilterChooserPopupDialog', 'selector': 'app-field-filter-chooser-popup-dialog'},{'name': 'FieldFilterPopupDialog', 'selector': 'app-field-filter-popup-dialog'},{'name': 'FilterBarComponent', 'selector': 'filter-bar'}];\n    var DIRECTIVES = [{'name': 'DataTableColumnDirective', 'selector': 'data-table-column'},{'name': 'HideDirective', 'selector': '[hide]'}];\n    var ACTUAL_COMPONENT = {'name': 'DataTableRowComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DataTableTranslations.html":{"url":"interfaces/DataTableTranslations.html","title":"interface - DataTableTranslations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DataTableTranslations\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/datatable/src/types/data-table-translations.type.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        addFilter\n                                \n                                \n                                            Optional\n                                        apply\n                                \n                                \n                                            Optional\n                                        date\n                                \n                                \n                                            Optional\n                                        expandColumn\n                                \n                                \n                                            Optional\n                                        expandRow\n                                \n                                \n                                            Optional\n                                        filterOperators\n                                \n                                \n                                            Optional\n                                        firstPage\n                                \n                                \n                                            Optional\n                                        headerColumnSelector\n                                \n                                \n                                            Optional\n                                        headerColumnSelectorAdded\n                                \n                                \n                                            Optional\n                                        headerColumnSelectorRemoved\n                                \n                                \n                                            Optional\n                                        headerReload\n                                \n                                \n                                            Optional\n                                        indexColumn\n                                \n                                \n                                            Optional\n                                        lastPage\n                                \n                                \n                                            Optional\n                                        loadedText\n                                \n                                \n                                            Optional\n                                        loadingText\n                                \n                                \n                                            Optional\n                                        nextPage\n                                \n                                \n                                            Optional\n                                        not\n                                \n                                \n                                            Optional\n                                        numericValueRequired\n                                \n                                \n                                            Optional\n                                        pageNumber\n                                \n                                \n                                            Optional\n                                        pageNumberLabel\n                                \n                                \n                                            Optional\n                                        pageNumberNofM\n                                \n                                \n                                            Optional\n                                        paginationLimit\n                                \n                                \n                                            Optional\n                                        paginationText\n                                \n                                \n                                            Optional\n                                        paginationTotalPages\n                                \n                                \n                                            Optional\n                                        prevPage\n                                \n                                \n                                            Optional\n                                        searchField\n                                \n                                \n                                            Optional\n                                        selectAllRows\n                                \n                                \n                                            Optional\n                                        selectColumn\n                                \n                                \n                                            Optional\n                                        selectedValueRequired\n                                \n                                \n                                            Optional\n                                        selectRow\n                                \n                                \n                                            Optional\n                                        sortAscending\n                                \n                                \n                                            Optional\n                                        sortDescending\n                                \n                                \n                                            Optional\n                                        sortedAscending\n                                \n                                \n                                            Optional\n                                        sortedDescending\n                                \n                                \n                                            Optional\n                                        validDateRequired\n                                \n                                \n                                            Optional\n                                        value\n                                \n                                \n                                            Optional\n                                        valueRequired\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        addFilter\n                                    \n                                \n                                \n                                    \n                                        addFilter:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        apply\n                                    \n                                \n                                \n                                    \n                                        apply:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                    \n                                \n                                \n                                    \n                                        date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expandColumn\n                                    \n                                \n                                \n                                    \n                                        expandColumn:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expandRow\n                                    \n                                \n                                \n                                    \n                                        expandRow:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filterOperators\n                                    \n                                \n                                \n                                    \n                                        filterOperators:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstPage\n                                    \n                                \n                                \n                                    \n                                        firstPage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headerColumnSelector\n                                    \n                                \n                                \n                                    \n                                        headerColumnSelector:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headerColumnSelectorAdded\n                                    \n                                \n                                \n                                    \n                                        headerColumnSelectorAdded:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headerColumnSelectorRemoved\n                                    \n                                \n                                \n                                    \n                                        headerColumnSelectorRemoved:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headerReload\n                                    \n                                \n                                \n                                    \n                                        headerReload:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        indexColumn\n                                    \n                                \n                                \n                                    \n                                        indexColumn:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastPage\n                                    \n                                \n                                \n                                    \n                                        lastPage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loadedText\n                                    \n                                \n                                \n                                    \n                                        loadedText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loadingText\n                                    \n                                \n                                \n                                    \n                                        loadingText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nextPage\n                                    \n                                \n                                \n                                    \n                                        nextPage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        not\n                                    \n                                \n                                \n                                    \n                                        not:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numericValueRequired\n                                    \n                                \n                                \n                                    \n                                        numericValueRequired:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageNumber\n                                    \n                                \n                                \n                                    \n                                        pageNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageNumberLabel\n                                    \n                                \n                                \n                                    \n                                        pageNumberLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageNumberNofM\n                                    \n                                \n                                \n                                    \n                                        pageNumberNofM:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        paginationLimit\n                                    \n                                \n                                \n                                    \n                                        paginationLimit:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        paginationText\n                                    \n                                \n                                \n                                    \n                                        paginationText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        paginationTotalPages\n                                    \n                                \n                                \n                                    \n                                        paginationTotalPages:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        prevPage\n                                    \n                                \n                                \n                                    \n                                        prevPage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        searchField\n                                    \n                                \n                                \n                                    \n                                        searchField:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectAllRows\n                                    \n                                \n                                \n                                    \n                                        selectAllRows:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectColumn\n                                    \n                                \n                                \n                                    \n                                        selectColumn:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedValueRequired\n                                    \n                                \n                                \n                                    \n                                        selectedValueRequired:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectRow\n                                    \n                                \n                                \n                                    \n                                        selectRow:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sortAscending\n                                    \n                                \n                                \n                                    \n                                        sortAscending:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sortDescending\n                                    \n                                \n                                \n                                    \n                                        sortDescending:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sortedAscending\n                                    \n                                \n                                \n                                    \n                                        sortedAscending:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sortedDescending\n                                    \n                                \n                                \n                                    \n                                        sortedDescending:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        validDateRequired\n                                    \n                                \n                                \n                                    \n                                        validDateRequired:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        valueRequired\n                                    \n                                \n                                \n                                    \n                                        valueRequired:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export declare type FilterOperator =\n  'lt'\n  | 'gt'\n  | 'lte'\n  | 'gte'\n  | 'eq'\n  | 'ne'\n  | 'contains'\n  | 'not_contains'\n  | 'starts'\n  | 'ends'\n  | 'empty'\n  | 'true'\n  | 'false';\n\nexport interface DataTableTranslations {\n  headerReload?: string;\n  headerColumnSelector?: string;\n  headerColumnSelectorAdded?: string;\n  headerColumnSelectorRemoved?: string;\n  indexColumn?: string;\n  selectColumn?: string;\n  selectRow?: string;\n  selectAllRows?: string;\n  expandColumn?: string;\n  expandRow?: string;\n  sortedAscending?: string;\n  sortedDescending?: string;\n  sortAscending?: string;\n  sortDescending?: string;\n  paginationLimit?: string;\n  paginationText?: string;\n  paginationTotalPages?: string;\n  firstPage?: string;\n  prevPage?: string;\n  pageNumberLabel?: string;\n  pageNumber?: string;\n  pageNumberNofM?: string;\n  nextPage?: string;\n  lastPage?: string;\n  loadingText?: string;\n  loadedText?: string;\n  addFilter?: string;\n  searchField?: string;\n  selectedValueRequired?: string;\n  validDateRequired?: string;\n  valueRequired?: string;\n  numericValueRequired?: string;\n  apply?: string;\n  value?: string;\n  date?: string;\n  not?: string;\n  filterOperators?: { [key in FilterOperator]: string }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DialogData.html":{"url":"interfaces/DialogData.html","title":"interface - DialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/datatable/src/components/filter-bar/field-filter-chooser-popup-dialog/field-filter-chooser-popup-dialog.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        fields\n                                \n                                \n                                        labels\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fields\n                                    \n                                \n                                \n                                    \n                                        fields:     FilterableField[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FilterableField[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        labels\n                                    \n                                \n                                \n                                    \n                                        labels:         DataTableTranslations\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DataTableTranslations\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Component, Inject, OnInit, QueryList, ViewChildren} from '@angular/core';\nimport {MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport {POPUP_DIALOG_CLOSE} from 'ngx-popup-dialog';\n\nimport {DataTableTranslations} from '../../../types/data-table-translations.type';\nimport {FilterableField} from '../../../types/filterable-field.type';\nimport {ListKeyManager} from '@angular/cdk/a11y';\nimport {DOWN_ARROW, ENTER, UP_ARROW} from '@angular/cdk/keycodes';\nimport {MatListItem} from '@angular/material/list';\n\n\ninterface DialogData {\n  fields: FilterableField[];\n  labels: DataTableTranslations\n}\n\n// @dynamic\n@Component({\n  selector: 'app-field-filter-chooser-popup-dialog',\n  templateUrl: './field-filter-chooser-popup-dialog.html',\n  styleUrls: ['./field-filter-chooser-popup-dialog.css']\n})\nexport class FieldFilterChooserPopupDialog implements OnInit {\n  @ViewChildren('listItem') listItem: QueryList\n  keyboardEventsManager: ListKeyManager;\n  activeItem: any;\n\n  fieldSearchQuery = '';\n  filteredFields: FilterableField[];\n\n  constructor(\n    @Inject(POPUP_DIALOG_CLOSE) private _dialogCloser: (dialogResult?: any) => void,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData\n  ) {\n    this.filteredFields = data.fields;\n  }\n\n  ngOnInit() {\n  }\n\n  ngAfterViewInit() {\n    this.keyboardEventsManager = new ListKeyManager(this.listItem);\n  }\n\n  onFieldSearch(searchQuery: string) {\n    this.filteredFields = this.data.fields.filter(c => c.header.toLowerCase().indexOf(searchQuery.toLowerCase()) != -1);\n  }\n\n  fieldSelected(field: FilterableField) {\n    this._dialogCloser(field);\n  }\n\n  handleKeyDown(event: KeyboardEvent) {\n    event.stopImmediatePropagation();\n    if (this.keyboardEventsManager) {\n      if (event.keyCode === DOWN_ARROW || event.keyCode === UP_ARROW) {\n        // passing the event to key manager so we get a change fired\n        this.keyboardEventsManager.onKeydown(event);\n        let activeItem = this.keyboardEventsManager.activeItem as MatListItem;\n        if (activeItem == this.activeItem) {\n          event.keyCode === DOWN_ARROW ? this.keyboardEventsManager.setFirstItemActive() : this.keyboardEventsManager.setLastItemActive();\n          activeItem = this.keyboardEventsManager.activeItem as MatListItem;\n        }\n        this.activeItem = activeItem;\n        (this.keyboardEventsManager.activeItem as MatListItem)._getHostElement().scrollIntoView();\n        return false;\n      } else if (event.keyCode === ENTER) {\n        (this.keyboardEventsManager.activeItem as MatListItem)._getHostElement().click();\n        return false;\n      }\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DialogData-1.html":{"url":"interfaces/DialogData-1.html","title":"interface - DialogData-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/datatable/src/components/filter-bar/field-filter-popup-dialog/field-filter-popup-dialog.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        fieldFilter\n                                \n                                \n                                        labels\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fieldFilter\n                                    \n                                \n                                \n                                    \n                                        fieldFilter:         Filter\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Filter\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        labels\n                                    \n                                \n                                \n                                    \n                                        labels:         DataTableTranslations\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DataTableTranslations\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Component, Inject, OnInit} from '@angular/core';\nimport {FormControl, FormGroupDirective, NgForm} from '@angular/forms';\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport {MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport {POPUP_DIALOG_CLOSE} from 'ngx-popup-dialog';\n\nimport {DataTableTranslations} from '../../../types/data-table-translations.type';\nimport {Filter} from '../../../types/filter.type';\n\ninterface DialogData {\n  fieldFilter: Filter;\n  labels: DataTableTranslations;\n}\n\n/** Error when invalid control is dirty, touched, or submitted. */\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n\n// @dynamic\n@Component({\n  selector: 'app-field-filter-popup-dialog',\n  templateUrl: './field-filter-popup-dialog.html',\n  styleUrls: ['./field-filter-popup-dialog.css']\n})\nexport class FieldFilterPopupDialog implements OnInit {\n  private static numericOperators = ['lt', 'gt', 'lte', 'gte', 'eq', 'ne', 'empty']\n  private static textualOperators = ['contains', 'not_contains', 'starts', 'ends', 'eq', 'ne', 'empty']\n  private static enumOperators = ['eq', 'ne', 'empty']\n  private static boolOperators = ['eq']\n  private static ALL_FILTER_OPERATORS = {\n    \"number\": FieldFilterPopupDialog.numericOperators,\n    \"date\": FieldFilterPopupDialog.numericOperators,\n    \"text\": FieldFilterPopupDialog.textualOperators,\n    \"enum\": FieldFilterPopupDialog.enumOperators,\n    \"bool\": FieldFilterPopupDialog.boolOperators\n  }\n  MUST_SELECT_VALUE_VALIDATION = this.data.labels.selectedValueRequired;\n  dataType;\n  filterOperators;\n  filterValue;\n  selectedOperator;\n  valuesList = [];\n  isAtleastOneValueSelected = true;\n\n  matcher = new MyErrorStateMatcher();\n\n  constructor(\n    @Inject(POPUP_DIALOG_CLOSE) private _dialogCloser: (dialogResult?: any) => void,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData\n  ) {\n    this.dataType = this.data.fieldFilter.field.dataType;\n    this.filterOperators = FieldFilterPopupDialog.ALL_FILTER_OPERATORS[this.dataType]\n    if (!this.filterOperators) throw `Data type '${this.dataType}' for field '${this.data.fieldFilter.field.header}' is not recognized`\n    this.selectedOperator = this.data.fieldFilter.operator || this.filterOperators[0];\n    this.filterValue = this.dataType == 'date' ? this.toDate(this.data.fieldFilter.value) : this.data.fieldFilter.value;\n    if (this.dataType == 'enum') {\n      if (this.data.fieldFilter.value) this.valuesList = this.valuesList.concat(this.data.fieldFilter.value).filter(v => v != null);\n      this.isAtleastOneValueSelected = this.valuesList.length != 0;\n    }\n    if (this.dataType == 'bool' && this.filterValue == null) {\n      this.filterValue = true;\n    }\n  }\n\n  ngOnInit() {\n  }\n\n  onFilterApply() {\n    let value = this.filterValue;\n    if (this.selectedOperator === 'empty') {\n      value = null;\n    } else {\n      if (this.dataType == 'date') value = this.formatDate(value)\n      if (this.dataType == 'enum') value = this.valuesList;\n    }\n    this._dialogCloser({field: this.data.fieldFilter.field, operator: this.selectedOperator, value: value});\n  }\n\n  valueCheckChange(value, checked: boolean) {\n    if (checked) {\n      this.valuesList.push(value)\n    } else {\n      let index = this.valuesList.indexOf(value);\n      if (index != -1) this.valuesList.splice(index, 1);\n    }\n    this.isAtleastOneValueSelected = this.valuesList.length != 0;\n  }\n\n  isValueChecked(value) {\n    return this.valuesList.indexOf(value) != -1;\n  }\n\n  getErrorMessage(field) {\n    if (field.hasError('matDatepickerParse')) return this.data.labels.validDateRequired;\n    else if (field.hasError('required')) return this.data.labels.valueRequired;\n    else if (field.hasError('pattern')) return this.data.labels.numericValueRequired;\n    else return '';\n  }\n\n  getPossibleOptionValue(option) {\n    return typeof option === 'string' ? option : option.value\n  }\n\n  getPossibleOptionDisplayText(option) {\n    return typeof option === 'string' ? option : option.displayText\n  }\n\n  private formatDate(d: Date) {\n    return [d.getDate(), d.getMonth() + 1, d.getFullYear()].join('/');\n  }\n\n  private toDate(s: string) {\n    if (!s) return new Date();\n    let split = s.split('/');\n    return new Date(Number(split[2]), Number(split[1]) - 1, Number(split[0]));\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FieldFilterChooserPopupDialog.html":{"url":"components/FieldFilterChooserPopupDialog.html","title":"component - FieldFilterChooserPopupDialog","body":"\n                   \n\n\n\n\n\n  Components\n  FieldFilterChooserPopupDialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/datatable/src/components/filter-bar/field-filter-chooser-popup-dialog/field-filter-chooser-popup-dialog.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-field-filter-chooser-popup-dialog\n            \n\n            \n                styleUrls\n                ./field-filter-chooser-popup-dialog.css\n            \n\n\n\n            \n                templateUrl\n                ./field-filter-chooser-popup-dialog.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeItem\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                fieldSearchQuery\n                            \n                            \n                                filteredFields\n                            \n                            \n                                keyboardEventsManager\n                            \n                            \n                                listItem\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fieldSelected\n                            \n                            \n                                handleKeyDown\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onFieldSearch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_dialogCloser: (dialogResult: any) => void, data: DialogData)\n                    \n                \n                        \n                            \n                                Defined in libs/datatable/src/components/filter-bar/field-filter-chooser-popup-dialog/field-filter-chooser-popup-dialog.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _dialogCloser\n                                                  \n                                                        \n                                                                        function\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        DialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fieldSelected\n                        \n                        \n                    \n                \n            \n            \n                \nfieldSelected(field: FilterableField)\n                \n            \n\n\n            \n                \n                    Defined in libs/datatable/src/components/filter-bar/field-filter-chooser-popup-dialog/field-filter-chooser-popup-dialog.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                                FilterableField\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleKeyDown\n                        \n                        \n                    \n                \n            \n            \n                \nhandleKeyDown(event: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in libs/datatable/src/components/filter-bar/field-filter-chooser-popup-dialog/field-filter-chooser-popup-dialog.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            KeyboardEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in libs/datatable/src/components/filter-bar/field-filter-chooser-popup-dialog/field-filter-chooser-popup-dialog.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in libs/datatable/src/components/filter-bar/field-filter-chooser-popup-dialog/field-filter-chooser-popup-dialog.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onFieldSearch\n                        \n                        \n                    \n                \n            \n            \n                \nonFieldSearch(searchQuery: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/datatable/src/components/filter-bar/field-filter-chooser-popup-dialog/field-filter-chooser-popup-dialog.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    searchQuery\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activeItem\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/datatable/src/components/filter-bar/field-filter-chooser-popup-dialog/field-filter-chooser-popup-dialog.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DialogData\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/datatable/src/components/filter-bar/field-filter-chooser-popup-dialog/field-filter-chooser-popup-dialog.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldSearchQuery\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in libs/datatable/src/components/filter-bar/field-filter-chooser-popup-dialog/field-filter-chooser-popup-dialog.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filteredFields\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FilterableField[]\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/datatable/src/components/filter-bar/field-filter-chooser-popup-dialog/field-filter-chooser-popup-dialog.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            keyboardEventsManager\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ListKeyManager\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/datatable/src/components/filter-bar/field-filter-chooser-popup-dialog/field-filter-chooser-popup-dialog.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listItem\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren('listItem')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/datatable/src/components/filter-bar/field-filter-chooser-popup-dialog/field-filter-chooser-popup-dialog.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Inject, OnInit, QueryList, ViewChildren} from '@angular/core';\nimport {MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport {POPUP_DIALOG_CLOSE} from 'ngx-popup-dialog';\n\nimport {DataTableTranslations} from '../../../types/data-table-translations.type';\nimport {FilterableField} from '../../../types/filterable-field.type';\nimport {ListKeyManager} from '@angular/cdk/a11y';\nimport {DOWN_ARROW, ENTER, UP_ARROW} from '@angular/cdk/keycodes';\nimport {MatListItem} from '@angular/material/list';\n\n\ninterface DialogData {\n  fields: FilterableField[];\n  labels: DataTableTranslations\n}\n\n// @dynamic\n@Component({\n  selector: 'app-field-filter-chooser-popup-dialog',\n  templateUrl: './field-filter-chooser-popup-dialog.html',\n  styleUrls: ['./field-filter-chooser-popup-dialog.css']\n})\nexport class FieldFilterChooserPopupDialog implements OnInit {\n  @ViewChildren('listItem') listItem: QueryList\n  keyboardEventsManager: ListKeyManager;\n  activeItem: any;\n\n  fieldSearchQuery = '';\n  filteredFields: FilterableField[];\n\n  constructor(\n    @Inject(POPUP_DIALOG_CLOSE) private _dialogCloser: (dialogResult?: any) => void,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData\n  ) {\n    this.filteredFields = data.fields;\n  }\n\n  ngOnInit() {\n  }\n\n  ngAfterViewInit() {\n    this.keyboardEventsManager = new ListKeyManager(this.listItem);\n  }\n\n  onFieldSearch(searchQuery: string) {\n    this.filteredFields = this.data.fields.filter(c => c.header.toLowerCase().indexOf(searchQuery.toLowerCase()) != -1);\n  }\n\n  fieldSelected(field: FilterableField) {\n    this._dialogCloser(field);\n  }\n\n  handleKeyDown(event: KeyboardEvent) {\n    event.stopImmediatePropagation();\n    if (this.keyboardEventsManager) {\n      if (event.keyCode === DOWN_ARROW || event.keyCode === UP_ARROW) {\n        // passing the event to key manager so we get a change fired\n        this.keyboardEventsManager.onKeydown(event);\n        let activeItem = this.keyboardEventsManager.activeItem as MatListItem;\n        if (activeItem == this.activeItem) {\n          event.keyCode === DOWN_ARROW ? this.keyboardEventsManager.setFirstItemActive() : this.keyboardEventsManager.setLastItemActive();\n          activeItem = this.keyboardEventsManager.activeItem as MatListItem;\n        }\n        this.activeItem = activeItem;\n        (this.keyboardEventsManager.activeItem as MatListItem)._getHostElement().scrollIntoView();\n        return false;\n      } else if (event.keyCode === ENTER) {\n        (this.keyboardEventsManager.activeItem as MatListItem)._getHostElement().click();\n        return false;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n  \n  \n    \n      {{field.header}}\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./field-filter-chooser-popup-dialog.css\n                \n                .dialog-container {\n  padding-bottom: 12px;\n}\n\n.search-field {\n  padding: 12px;\n  padding-bottom: 0px;\n}\n\n.fields-list {\n  max-height: 250px;\n  overflow-y: auto;\n}\n\n::-webkit-scrollbar {\n  width: 6px;\n  background-color: #F5F5F5;\n}\n\n::-webkit-scrollbar-thumb {\n  border-radius: 10px;\n  -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, .3);\n  background-color: #d9d9d9;\n}\n\n.mat-list-item.active {\n  background: rgba(0, 0, 0, .04);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{field.header}}            '\n    var COMPONENTS = [{'name': 'DataTableComponent', 'selector': 'data-table'},{'name': 'DataTableHeaderComponent', 'selector': 'data-table-header'},{'name': 'DataTablePaginationComponent', 'selector': 'data-table-pagination'},{'name': 'DataTableRowComponent', 'selector': '[dataTableRow]'},{'name': 'FieldFilterChooserPopupDialog', 'selector': 'app-field-filter-chooser-popup-dialog'},{'name': 'FieldFilterPopupDialog', 'selector': 'app-field-filter-popup-dialog'},{'name': 'FilterBarComponent', 'selector': 'filter-bar'}];\n    var DIRECTIVES = [{'name': 'DataTableColumnDirective', 'selector': 'data-table-column'},{'name': 'HideDirective', 'selector': '[hide]'}];\n    var ACTUAL_COMPONENT = {'name': 'FieldFilterChooserPopupDialog'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FieldFilterPopupDialog.html":{"url":"components/FieldFilterPopupDialog.html","title":"component - FieldFilterPopupDialog","body":"\n                   \n\n\n\n\n\n  Components\n  FieldFilterPopupDialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/datatable/src/components/filter-bar/field-filter-popup-dialog/field-filter-popup-dialog.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-field-filter-popup-dialog\n            \n\n            \n                styleUrls\n                ./field-filter-popup-dialog.css\n            \n\n\n\n            \n                templateUrl\n                ./field-filter-popup-dialog.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                ALL_FILTER_OPERATORS\n                            \n                            \n                                    Private\n                                    Static\n                                boolOperators\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                dataType\n                            \n                            \n                                    Private\n                                    Static\n                                enumOperators\n                            \n                            \n                                filterOperators\n                            \n                            \n                                filterValue\n                            \n                            \n                                isAtleastOneValueSelected\n                            \n                            \n                                matcher\n                            \n                            \n                                MUST_SELECT_VALUE_VALIDATION\n                            \n                            \n                                    Private\n                                    Static\n                                numericOperators\n                            \n                            \n                                selectedOperator\n                            \n                            \n                                    Private\n                                    Static\n                                textualOperators\n                            \n                            \n                                valuesList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                formatDate\n                            \n                            \n                                getErrorMessage\n                            \n                            \n                                getPossibleOptionDisplayText\n                            \n                            \n                                getPossibleOptionValue\n                            \n                            \n                                isValueChecked\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onFilterApply\n                            \n                            \n                                    Private\n                                toDate\n                            \n                            \n                                valueCheckChange\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_dialogCloser: (dialogResult: any) => void, data: DialogData)\n                    \n                \n                        \n                            \n                                Defined in libs/datatable/src/components/filter-bar/field-filter-popup-dialog/field-filter-popup-dialog.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _dialogCloser\n                                                  \n                                                        \n                                                                        function\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        DialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            formatDate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    formatDate(d: Date)\n                \n            \n\n\n            \n                \n                    Defined in libs/datatable/src/components/filter-bar/field-filter-popup-dialog/field-filter-popup-dialog.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    d\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getErrorMessage\n                        \n                        \n                    \n                \n            \n            \n                \ngetErrorMessage(field)\n                \n            \n\n\n            \n                \n                    Defined in libs/datatable/src/components/filter-bar/field-filter-popup-dialog/field-filter-popup-dialog.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPossibleOptionDisplayText\n                        \n                        \n                    \n                \n            \n            \n                \ngetPossibleOptionDisplayText(option)\n                \n            \n\n\n            \n                \n                    Defined in libs/datatable/src/components/filter-bar/field-filter-popup-dialog/field-filter-popup-dialog.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    option\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPossibleOptionValue\n                        \n                        \n                    \n                \n            \n            \n                \ngetPossibleOptionValue(option)\n                \n            \n\n\n            \n                \n                    Defined in libs/datatable/src/components/filter-bar/field-filter-popup-dialog/field-filter-popup-dialog.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    option\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isValueChecked\n                        \n                        \n                    \n                \n            \n            \n                \nisValueChecked(value)\n                \n            \n\n\n            \n                \n                    Defined in libs/datatable/src/components/filter-bar/field-filter-popup-dialog/field-filter-popup-dialog.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in libs/datatable/src/components/filter-bar/field-filter-popup-dialog/field-filter-popup-dialog.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onFilterApply\n                        \n                        \n                    \n                \n            \n            \n                \nonFilterApply()\n                \n            \n\n\n            \n                \n                    Defined in libs/datatable/src/components/filter-bar/field-filter-popup-dialog/field-filter-popup-dialog.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            toDate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toDate(s: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/datatable/src/components/filter-bar/field-filter-popup-dialog/field-filter-popup-dialog.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    s\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            valueCheckChange\n                        \n                        \n                    \n                \n            \n            \n                \nvalueCheckChange(value, checked: boolean)\n                \n            \n\n\n            \n                \n                    Defined in libs/datatable/src/components/filter-bar/field-filter-popup-dialog/field-filter-popup-dialog.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    checked\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            ALL_FILTER_OPERATORS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    \"number\": FieldFilterPopupDialog.numericOperators,\n    \"date\": FieldFilterPopupDialog.numericOperators,\n    \"text\": FieldFilterPopupDialog.textualOperators,\n    \"enum\": FieldFilterPopupDialog.enumOperators,\n    \"bool\": FieldFilterPopupDialog.boolOperators\n  }\n                        \n                    \n                        \n                            \n                                    Defined in libs/datatable/src/components/filter-bar/field-filter-popup-dialog/field-filter-popup-dialog.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            boolOperators\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['eq']\n                        \n                    \n                        \n                            \n                                    Defined in libs/datatable/src/components/filter-bar/field-filter-popup-dialog/field-filter-popup-dialog.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DialogData\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/datatable/src/components/filter-bar/field-filter-popup-dialog/field-filter-popup-dialog.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataType\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in libs/datatable/src/components/filter-bar/field-filter-popup-dialog/field-filter-popup-dialog.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            enumOperators\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['eq', 'ne', 'empty']\n                        \n                    \n                        \n                            \n                                    Defined in libs/datatable/src/components/filter-bar/field-filter-popup-dialog/field-filter-popup-dialog.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filterOperators\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in libs/datatable/src/components/filter-bar/field-filter-popup-dialog/field-filter-popup-dialog.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filterValue\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in libs/datatable/src/components/filter-bar/field-filter-popup-dialog/field-filter-popup-dialog.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAtleastOneValueSelected\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in libs/datatable/src/components/filter-bar/field-filter-popup-dialog/field-filter-popup-dialog.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            matcher\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new MyErrorStateMatcher()\n                        \n                    \n                        \n                            \n                                    Defined in libs/datatable/src/components/filter-bar/field-filter-popup-dialog/field-filter-popup-dialog.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MUST_SELECT_VALUE_VALIDATION\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.data.labels.selectedValueRequired\n                        \n                    \n                        \n                            \n                                    Defined in libs/datatable/src/components/filter-bar/field-filter-popup-dialog/field-filter-popup-dialog.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            numericOperators\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['lt', 'gt', 'lte', 'gte', 'eq', 'ne', 'empty']\n                        \n                    \n                        \n                            \n                                    Defined in libs/datatable/src/components/filter-bar/field-filter-popup-dialog/field-filter-popup-dialog.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedOperator\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in libs/datatable/src/components/filter-bar/field-filter-popup-dialog/field-filter-popup-dialog.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            textualOperators\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['contains', 'not_contains', 'starts', 'ends', 'eq', 'ne', 'empty']\n                        \n                    \n                        \n                            \n                                    Defined in libs/datatable/src/components/filter-bar/field-filter-popup-dialog/field-filter-popup-dialog.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valuesList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in libs/datatable/src/components/filter-bar/field-filter-popup-dialog/field-filter-popup-dialog.ts:46\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Inject, OnInit} from '@angular/core';\nimport {FormControl, FormGroupDirective, NgForm} from '@angular/forms';\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport {MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport {POPUP_DIALOG_CLOSE} from 'ngx-popup-dialog';\n\nimport {DataTableTranslations} from '../../../types/data-table-translations.type';\nimport {Filter} from '../../../types/filter.type';\n\ninterface DialogData {\n  fieldFilter: Filter;\n  labels: DataTableTranslations;\n}\n\n/** Error when invalid control is dirty, touched, or submitted. */\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n\n// @dynamic\n@Component({\n  selector: 'app-field-filter-popup-dialog',\n  templateUrl: './field-filter-popup-dialog.html',\n  styleUrls: ['./field-filter-popup-dialog.css']\n})\nexport class FieldFilterPopupDialog implements OnInit {\n  private static numericOperators = ['lt', 'gt', 'lte', 'gte', 'eq', 'ne', 'empty']\n  private static textualOperators = ['contains', 'not_contains', 'starts', 'ends', 'eq', 'ne', 'empty']\n  private static enumOperators = ['eq', 'ne', 'empty']\n  private static boolOperators = ['eq']\n  private static ALL_FILTER_OPERATORS = {\n    \"number\": FieldFilterPopupDialog.numericOperators,\n    \"date\": FieldFilterPopupDialog.numericOperators,\n    \"text\": FieldFilterPopupDialog.textualOperators,\n    \"enum\": FieldFilterPopupDialog.enumOperators,\n    \"bool\": FieldFilterPopupDialog.boolOperators\n  }\n  MUST_SELECT_VALUE_VALIDATION = this.data.labels.selectedValueRequired;\n  dataType;\n  filterOperators;\n  filterValue;\n  selectedOperator;\n  valuesList = [];\n  isAtleastOneValueSelected = true;\n\n  matcher = new MyErrorStateMatcher();\n\n  constructor(\n    @Inject(POPUP_DIALOG_CLOSE) private _dialogCloser: (dialogResult?: any) => void,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData\n  ) {\n    this.dataType = this.data.fieldFilter.field.dataType;\n    this.filterOperators = FieldFilterPopupDialog.ALL_FILTER_OPERATORS[this.dataType]\n    if (!this.filterOperators) throw `Data type '${this.dataType}' for field '${this.data.fieldFilter.field.header}' is not recognized`\n    this.selectedOperator = this.data.fieldFilter.operator || this.filterOperators[0];\n    this.filterValue = this.dataType == 'date' ? this.toDate(this.data.fieldFilter.value) : this.data.fieldFilter.value;\n    if (this.dataType == 'enum') {\n      if (this.data.fieldFilter.value) this.valuesList = this.valuesList.concat(this.data.fieldFilter.value).filter(v => v != null);\n      this.isAtleastOneValueSelected = this.valuesList.length != 0;\n    }\n    if (this.dataType == 'bool' && this.filterValue == null) {\n      this.filterValue = true;\n    }\n  }\n\n  ngOnInit() {\n  }\n\n  onFilterApply() {\n    let value = this.filterValue;\n    if (this.selectedOperator === 'empty') {\n      value = null;\n    } else {\n      if (this.dataType == 'date') value = this.formatDate(value)\n      if (this.dataType == 'enum') value = this.valuesList;\n    }\n    this._dialogCloser({field: this.data.fieldFilter.field, operator: this.selectedOperator, value: value});\n  }\n\n  valueCheckChange(value, checked: boolean) {\n    if (checked) {\n      this.valuesList.push(value)\n    } else {\n      let index = this.valuesList.indexOf(value);\n      if (index != -1) this.valuesList.splice(index, 1);\n    }\n    this.isAtleastOneValueSelected = this.valuesList.length != 0;\n  }\n\n  isValueChecked(value) {\n    return this.valuesList.indexOf(value) != -1;\n  }\n\n  getErrorMessage(field) {\n    if (field.hasError('matDatepickerParse')) return this.data.labels.validDateRequired;\n    else if (field.hasError('required')) return this.data.labels.valueRequired;\n    else if (field.hasError('pattern')) return this.data.labels.numericValueRequired;\n    else return '';\n  }\n\n  getPossibleOptionValue(option) {\n    return typeof option === 'string' ? option : option.value\n  }\n\n  getPossibleOptionDisplayText(option) {\n    return typeof option === 'string' ? option : option.displayText\n  }\n\n  private formatDate(d: Date) {\n    return [d.getDate(), d.getMonth() + 1, d.getFullYear()].join('/');\n  }\n\n  private toDate(s: string) {\n    if (!s) return new Date();\n    let split = s.split('/');\n    return new Date(Number(split[2]), Number(split[1]) - 1, Number(split[0]));\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{data.fieldFilter.field.header}}\n      \n        close\n      \n    \n    \n      \n        \n          \n            \n              \n                {{data.labels.filterOperators[operator]}}\n              \n            \n          \n        \n      \n      \n        \n          \n        \n        \n          \n        \n        \n          \n        \n        \n          \n        \n        \n          \n        \n      \n    \n    \n      {{data.labels.apply}}\n    \n\n\n    \n      \n        \n        \n        \n        {{getErrorMessage(filterValueInput)}}\n      \n    \n\n    \n      \n        \n        {{getErrorMessage(filterValueInput)}}\n      \n    \n\n    \n      \n        {{getPossibleOptionDisplayText(option)}}\n        {{MUST_SELECT_VALUE_VALIDATION}}\n      \n    \n\n    \n      \n        \n        \n        \n          \n            check\n          \n          \n            close\n          \n        \n      \n    \n\n    \n      \n        \n        {{getErrorMessage(filterValueInput)}}\n      \n    \n\n  \n\n\n    \n\n    \n                \n                    ./field-filter-popup-dialog.css\n                \n                .header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background: #3367d6;\n  border-radius: 2px 2px 0 0;\n  color: #fff;\n  font-size: 15px;\n  min-width: 176px;\n  padding: 8px;\n}\n\n.field-label {\n  padding: 0 8px;\n}\n\n.icon-button {\n  outline: none;\n}\n\n.content {\n  flex-direction: row;\n  display: flex;\n  overflow: hidden;\n  padding: 24px;\n  min-width: 200px;\n  max-height: 200px;\n  overflow-y: auto;\n}\n\n.footer {\n  display: flex;\n  justify-content: flex-end;\n  color: #4285f4;\n  padding: 8px 0;\n}\n\n::ng-deep .mat-select-value {\n  min-width: 24px !important;\n}\n\n.mat-auto-width ::ng-deep .mat-form-field {\n  width: auto !important;\n}\n\n.mat-auto-width ::ng-deep .mat-form-field-infix {\n  width: auto !important;\n}\n\n.mat-auto-width ::ng-deep .mat-select-value {\n  max-width: 100%;\n  width: auto;\n}\n\n::ng-deep .mat-checkbox:not(.mat-checkbox-disabled).mat-accent .mat-checkbox-ripple .mat-ripple-element {\n  background-color: #4285f4;\n}\n\n::ng-deep .mat-checkbox-checked.mat-accent .mat-checkbox-background, .mat-checkbox-indeterminate.mat-accent .mat-checkbox-background {\n  background-color: #4285f4;\n}\n\n::ng-deep .mat-radio-button.mat-accent .mat-radio-inner-circle {\n  background-color: #4285f4;\n}\n\n::ng-deep .mat-radio-button.mat-accent.mat-radio-checked .mat-radio-outer-circle {\n  border-color: #4285f4;\n}\n\n::ng-deep .mat-radio-button.mat-accent .mat-radio-ripple .mat-ripple-element {\n  background-color: rgba(66, 133, 244, 0.26) !important;\n}\n\n::-webkit-scrollbar {\n  width: 6px;\n  background-color: #F5F5F5;\n}\n\n::-webkit-scrollbar-thumb {\n  border-radius: 10px;\n  -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, .3);\n  background-color: #d9d9d9;\n}\n\n.ltr {\n  direction: ltr;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{data.fieldFilter.field.header}}              close                                                                                {{data.labels.filterOperators[operator]}}                                                                                                                                                                                                              {{data.labels.apply}}                                              {{getErrorMessage(filterValueInput)}}                                    {{getErrorMessage(filterValueInput)}}                            {{getPossibleOptionDisplayText(option)}}        {{MUST_SELECT_VALUE_VALIDATION}}                                                                  check                                close                                                      {{getErrorMessage(filterValueInput)}}            '\n    var COMPONENTS = [{'name': 'DataTableComponent', 'selector': 'data-table'},{'name': 'DataTableHeaderComponent', 'selector': 'data-table-header'},{'name': 'DataTablePaginationComponent', 'selector': 'data-table-pagination'},{'name': 'DataTableRowComponent', 'selector': '[dataTableRow]'},{'name': 'FieldFilterChooserPopupDialog', 'selector': 'app-field-filter-chooser-popup-dialog'},{'name': 'FieldFilterPopupDialog', 'selector': 'app-field-filter-popup-dialog'},{'name': 'FilterBarComponent', 'selector': 'filter-bar'}];\n    var DIRECTIVES = [{'name': 'DataTableColumnDirective', 'selector': 'data-table-column'},{'name': 'HideDirective', 'selector': '[hide]'}];\n    var ACTUAL_COMPONENT = {'name': 'FieldFilterPopupDialog'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Filter.html":{"url":"interfaces/Filter.html","title":"interface - Filter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Filter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/datatable/src/types/filter.type.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        field\n                                \n                                \n                                            Optional\n                                        operator\n                                \n                                \n                                            Optional\n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        field\n                                    \n                                \n                                \n                                    \n                                        field:         FilterableField\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FilterableField\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        operator\n                                    \n                                \n                                \n                                    \n                                        operator:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {FilterableField} from \"./filterable-field.type\";\n\nexport interface Filter {\n  field: FilterableField;\n  operator?: string,\n  value?: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FilterBarComponent.html":{"url":"components/FilterBarComponent.html","title":"component - FilterBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FilterBarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/datatable/src/components/filter-bar/filter-bar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                filter-bar\n            \n\n            \n                styleUrls\n                ./filter-bar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./filter-bar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dataTable\n                            \n                            \n                                fieldChooserDialogRef\n                            \n                            \n                                fields\n                            \n                            \n                                filters\n                            \n                            \n                                    Public\n                                popupDialogService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                chipClicked\n                            \n                            \n                                    Private\n                                convertFilterToEmittedFilter\n                            \n                            \n                                formatChipDisplayText\n                            \n                            \n                                formatValue\n                            \n                            \n                                inputFocused\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openFieldChooserDialog\n                            \n                            \n                                openFieldFilterDialog\n                            \n                            \n                                removeFilter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataTable: DataTableComponent, popupDialogService: PopupDialogService)\n                    \n                \n                        \n                            \n                                Defined in libs/datatable/src/components/filter-bar/filter-bar.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataTable\n                                                  \n                                                        \n                                                                        DataTableComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        popupDialogService\n                                                  \n                                                        \n                                                                    PopupDialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            chipClicked\n                        \n                        \n                    \n                \n            \n            \n                \nchipClicked(event: Event, filter: Filter)\n                \n            \n\n\n            \n                \n                    Defined in libs/datatable/src/components/filter-bar/filter-bar.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            convertFilterToEmittedFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convertFilterToEmittedFilter(filter: Filter)\n                \n            \n\n\n            \n                \n                    Defined in libs/datatable/src/components/filter-bar/filter-bar.component.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            formatChipDisplayText\n                        \n                        \n                    \n                \n            \n            \n                \nformatChipDisplayText(filter: Filter)\n                \n            \n\n\n            \n                \n                    Defined in libs/datatable/src/components/filter-bar/filter-bar.component.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            formatValue\n                        \n                        \n                    \n                \n            \n            \n                \nformatValue(filter: Filter)\n                \n            \n\n\n            \n                \n                    Defined in libs/datatable/src/components/filter-bar/filter-bar.component.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            inputFocused\n                        \n                        \n                    \n                \n            \n            \n                \ninputFocused(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in libs/datatable/src/components/filter-bar/filter-bar.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in libs/datatable/src/components/filter-bar/filter-bar.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openFieldChooserDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenFieldChooserDialog(triggeredElement)\n                \n            \n\n\n            \n                \n                    Defined in libs/datatable/src/components/filter-bar/filter-bar.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    triggeredElement\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openFieldFilterDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenFieldFilterDialog(triggeredElement, filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in libs/datatable/src/components/filter-bar/filter-bar.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    triggeredElement\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeFilter\n                        \n                        \n                    \n                \n            \n            \n                \nremoveFilter(filter: Filter)\n                \n            \n\n\n            \n                \n                    Defined in libs/datatable/src/components/filter-bar/filter-bar.component.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dataTable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DataTableComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/datatable/src/components/filter-bar/filter-bar.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldChooserDialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/datatable/src/components/filter-bar/filter-bar.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fields\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FilterableField[]\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/datatable/src/components/filter-bar/filter-bar.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filters\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Filter[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in libs/datatable/src/components/filter-bar/filter-bar.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            popupDialogService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     PopupDialogService\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/datatable/src/components/filter-bar/filter-bar.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, forwardRef, Inject, OnInit} from '@angular/core';\nimport {PopupDialogService} from 'ngx-popup-dialog';\n\nimport {Filter} from '../../types/filter.type';\nimport {FilterableField} from '../../types/filterable-field.type';\nimport {DataTableComponent} from '../table/table.component';\nimport {FieldFilterChooserPopupDialog} from './field-filter-chooser-popup-dialog/field-filter-chooser-popup-dialog';\nimport {FieldFilterPopupDialog} from './field-filter-popup-dialog/field-filter-popup-dialog';\nimport {MatDialogRef} from '@angular/material/dialog';\nimport {PopupDialog} from 'ngx-popup-dialog/lib/popup-dialog/popup-dialog';\n\n@Component({\n  selector: 'filter-bar',\n  templateUrl: './filter-bar.component.html',\n  styleUrls: ['./filter-bar.component.css']\n})\nexport class FilterBarComponent implements OnInit {\n  fieldChooserDialogRef: MatDialogRef;\n  filters: Filter[] = [];\n  fields: FilterableField[];\n\n  constructor(\n    @Inject(forwardRef(() => DataTableComponent)) public dataTable: DataTableComponent,\n    public popupDialogService: PopupDialogService) {\n    this.fields = this.dataTable.filterableFields;\n    if (dataTable.filters) {\n      this.filters = dataTable.filters\n    }\n  }\n\n  ngOnInit() {\n  }\n\n  inputFocused(event: Event) {\n    (event.currentTarget as HTMLElement).blur();\n    this.openFieldChooserDialog(event.currentTarget);\n  }\n\n  chipClicked(event: Event, filter: Filter) {\n    const dialogRef = this.openFieldFilterDialog(event.currentTarget, filter);\n    dialogRef.afterClosed().subscribe((result: Filter) => {\n      if (!result) return;\n      this.dataTable.filterUpdated.emit({\n        old: this.convertFilterToEmittedFilter(filter),\n        new: this.convertFilterToEmittedFilter(result)\n      });\n      let index = this.filters.indexOf(filter)\n      this.filters[index] = result;\n      this.dataTable.filterChanged.emit(this.filters.map(c => this.convertFilterToEmittedFilter(c)));\n      filter = result;\n    });\n  }\n\n  openFieldChooserDialog(triggeredElement) {\n    if (this.fieldChooserDialogRef) return;\n    this.fieldChooserDialogRef = this.popupDialogService.open(\n      FieldFilterChooserPopupDialog,\n      triggeredElement,\n      {\n        coverTriggeringElement: true,\n        data: {\n          fields: this.fields,\n          labels: this.dataTable.labels\n        }\n      });\n\n    this.fieldChooserDialogRef.afterClosed().subscribe(result => {\n      this.fieldChooserDialogRef = null;\n      if (!result) return;\n      const dialogRef = this.openFieldFilterDialog(triggeredElement, {field: result});\n      dialogRef.afterClosed().subscribe((result: Filter) => {\n        if (!result) return;\n        this.filters.push(result);\n        this.dataTable.filterAdded.emit(this.convertFilterToEmittedFilter(result));\n        this.dataTable.filterChanged.emit(this.filters.map(c => this.convertFilterToEmittedFilter(c)));\n      });\n    });\n  }\n\n  openFieldFilterDialog(triggeredElement, filter?: Filter) {\n    const dialogRef = this.popupDialogService.open(\n      FieldFilterPopupDialog,\n      triggeredElement,\n      {\n        suppressCloseOnClickSelectors: ['.cdk-overlay-container'],\n        coverTriggeringElement: true,\n        data: {\n          fieldFilter: filter,\n          labels: this.dataTable.labels\n        }\n      });\n    return dialogRef;\n  }\n\n  removeFilter(filter: Filter) {\n    const index = this.filters.indexOf(filter);\n\n    if (index >= 0) {\n      this.filters.splice(index, 1);\n      this.dataTable.filterRemoved.emit(this.convertFilterToEmittedFilter(filter));\n      this.dataTable.filterChanged.emit(this.filters.map(c => this.convertFilterToEmittedFilter(c)));\n    }\n  }\n\n  formatValue(filter: Filter) {\n    let value = filter.value;\n    if (filter.operator == 'empty') return '';\n\n    if (filter.field.dataType == \"enum\") {\n      value = (filter.value as any[]).map(v => typeof v === \"string\" ? v : v.displayText);\n    }\n\n    if (Array.isArray(value)) {\n      value = value.join(', ');\n    }\n\n    return value;\n  }\n\n  formatChipDisplayText(filter: Filter) {\n    if (filter.field.dataType == \"bool\") {\n      return filter.value == false ? `${this.dataTable.labels.not} ${filter.field.header}` : filter.field.header;\n    } else {\n      return `${filter.field.header} ${this.dataTable.labels.filterOperators[filter.operator]} ${this.formatValue(filter)}`\n    }\n  }\n\n  private convertFilterToEmittedFilter(filter: Filter) {\n    // clone the filter and extract values from enum possible options\n    let clonedFilter = JSON.parse(JSON.stringify(filter)) as Filter;\n    if (clonedFilter.operator == \"empty\") return clonedFilter;\n\n    if (clonedFilter.field.dataType == \"enum\") {\n      let valuesList = clonedFilter.value;\n      for (let i = 0; i \n    \n\n    \n        \n  \n    \n      \n      \n        {{formatChipDisplayText(filter)}}\n        cancel\n      \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./filter-bar.component.css\n                \n                .filter-input {\n  background-color: transparent;\n  border: 0;\n  height: 32px;\n  outline: none;\n  padding: 0;\n}\n\n.filter-icon {\n  color: #3367d6;\n  cursor: pointer;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          {{formatChipDisplayText(filter)}}        cancel                  '\n    var COMPONENTS = [{'name': 'DataTableComponent', 'selector': 'data-table'},{'name': 'DataTableHeaderComponent', 'selector': 'data-table-header'},{'name': 'DataTablePaginationComponent', 'selector': 'data-table-pagination'},{'name': 'DataTableRowComponent', 'selector': '[dataTableRow]'},{'name': 'FieldFilterChooserPopupDialog', 'selector': 'app-field-filter-chooser-popup-dialog'},{'name': 'FieldFilterPopupDialog', 'selector': 'app-field-filter-popup-dialog'},{'name': 'FilterBarComponent', 'selector': 'filter-bar'}];\n    var DIRECTIVES = [{'name': 'DataTableColumnDirective', 'selector': 'data-table-column'},{'name': 'HideDirective', 'selector': '[hide]'}];\n    var ACTUAL_COMPONENT = {'name': 'FilterBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FilterableField.html":{"url":"interfaces/FilterableField.html","title":"interface - FilterableField","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FilterableField\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/datatable/src/types/filterable-field.type.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        dataType\n                                \n                                \n                                        header\n                                \n                                \n                                            Optional\n                                        possibleOptions\n                                \n                                \n                                        property\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dataType\n                                    \n                                \n                                \n                                    \n                                        dataType:         FieldDataType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FieldDataType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        header\n                                    \n                                \n                                \n                                    \n                                        header:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        possibleOptions\n                                    \n                                \n                                \n                                    \n                                        possibleOptions:     (string | literal type)[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     (string | literal type)[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        property\n                                    \n                                \n                                \n                                    \n                                        property:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export declare type FieldDataType = 'text' | 'number' | 'date' | 'enum' | 'bool';\n\nexport interface FilterableField {\n  header: string;\n  property: string;\n  dataType: FieldDataType;\n  possibleOptions?: (string | { value: string, displayText: string })[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/HideDirective.html":{"url":"directives/HideDirective.html","title":"directive - HideDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  HideDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/datatable/src/utils/hide.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [hide]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _displayStyle\n                            \n                            \n                                    Private\n                                _prevCondition\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initDisplayStyle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                hide\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hide\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_elementRef: ElementRef, renderer: Renderer2)\n                    \n                \n                        \n                            \n                                Defined in libs/datatable/src/utils/hide.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _elementRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        hide\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in libs/datatable/src/utils/hide.ts:19\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initDisplayStyle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initDisplayStyle()\n                \n            \n\n\n            \n                \n                    Defined in libs/datatable/src/utils/hide.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _displayStyle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/datatable/src/utils/hide.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _prevCondition\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in libs/datatable/src/utils/hide.ts:12\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hide\n                    \n                \n\n\n                \n                    \n                        sethide(newCondition: boolean)\n                    \n                \n                            \n                                \n                                    Defined in libs/datatable/src/utils/hide.ts:19\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            newCondition\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import {Directive, ElementRef, Input, Renderer2} from '@angular/core';\n\nfunction isBlank(obj: any): boolean {\n  return obj === undefined || obj === null;\n}\n\n@Directive({\n  selector: '[hide]'\n})\nexport class HideDirective {\n\n  private _prevCondition = false;\n  private _displayStyle: string;\n\n  constructor(private _elementRef: ElementRef, private renderer: Renderer2) {\n  }\n\n  @Input()\n  set hide(newCondition: boolean) {\n    this.initDisplayStyle();\n\n    if (newCondition && (isBlank(this._prevCondition) || !this._prevCondition)) {\n      this._prevCondition = true;\n      this.renderer.setStyle(this._elementRef.nativeElement, 'display', 'none');\n    } else if (!newCondition && (isBlank(this._prevCondition) || this._prevCondition)) {\n      this._prevCondition = false;\n      this.renderer.setStyle(this._elementRef.nativeElement, 'display', this._displayStyle);\n    }\n  }\n\n  private initDisplayStyle() {\n    if (this._displayStyle === undefined) {\n      const displayStyle = this._elementRef.nativeElement.style.display;\n      if (displayStyle !== 'none') {\n        this._displayStyle = displayStyle;\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/MinPipe.html":{"url":"pipes/MinPipe.html","title":"pipe - MinPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  MinPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/datatable/src/utils/min.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        min\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: number[], args: string[])\n                \n            \n\n\n            \n                \n                    Defined in libs/datatable/src/utils/min.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\n\n\n@Pipe({\n  name: 'min'\n})\nexport class MinPipe implements PipeTransform {\n  transform(value: number[], args: string[]): any {\n    return Math.min.apply(null, value);\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MyErrorStateMatcher.html":{"url":"classes/MyErrorStateMatcher.html","title":"class - MyErrorStateMatcher","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MyErrorStateMatcher\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/datatable/src/components/filter-bar/field-filter-popup-dialog/field-filter-popup-dialog.ts\n        \n\n            \n                Description\n            \n            \n                Error when invalid control is dirty, touched, or submitted. \n\n            \n\n\n            \n                Implements\n            \n            \n                        ErrorStateMatcher\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isErrorState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isErrorState\n                        \n                        \n                    \n                \n            \n            \n                \nisErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null)\n                \n            \n\n\n            \n                \n                    Defined in libs/datatable/src/components/filter-bar/field-filter-popup-dialog/field-filter-popup-dialog.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                            FormControl | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    form\n                                    \n                                            FormGroupDirective | NgForm | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Component, Inject, OnInit} from '@angular/core';\nimport {FormControl, FormGroupDirective, NgForm} from '@angular/forms';\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport {MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport {POPUP_DIALOG_CLOSE} from 'ngx-popup-dialog';\n\nimport {DataTableTranslations} from '../../../types/data-table-translations.type';\nimport {Filter} from '../../../types/filter.type';\n\ninterface DialogData {\n  fieldFilter: Filter;\n  labels: DataTableTranslations;\n}\n\n/** Error when invalid control is dirty, touched, or submitted. */\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n\n// @dynamic\n@Component({\n  selector: 'app-field-filter-popup-dialog',\n  templateUrl: './field-filter-popup-dialog.html',\n  styleUrls: ['./field-filter-popup-dialog.css']\n})\nexport class FieldFilterPopupDialog implements OnInit {\n  private static numericOperators = ['lt', 'gt', 'lte', 'gte', 'eq', 'ne', 'empty']\n  private static textualOperators = ['contains', 'not_contains', 'starts', 'ends', 'eq', 'ne', 'empty']\n  private static enumOperators = ['eq', 'ne', 'empty']\n  private static boolOperators = ['eq']\n  private static ALL_FILTER_OPERATORS = {\n    \"number\": FieldFilterPopupDialog.numericOperators,\n    \"date\": FieldFilterPopupDialog.numericOperators,\n    \"text\": FieldFilterPopupDialog.textualOperators,\n    \"enum\": FieldFilterPopupDialog.enumOperators,\n    \"bool\": FieldFilterPopupDialog.boolOperators\n  }\n  MUST_SELECT_VALUE_VALIDATION = this.data.labels.selectedValueRequired;\n  dataType;\n  filterOperators;\n  filterValue;\n  selectedOperator;\n  valuesList = [];\n  isAtleastOneValueSelected = true;\n\n  matcher = new MyErrorStateMatcher();\n\n  constructor(\n    @Inject(POPUP_DIALOG_CLOSE) private _dialogCloser: (dialogResult?: any) => void,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData\n  ) {\n    this.dataType = this.data.fieldFilter.field.dataType;\n    this.filterOperators = FieldFilterPopupDialog.ALL_FILTER_OPERATORS[this.dataType]\n    if (!this.filterOperators) throw `Data type '${this.dataType}' for field '${this.data.fieldFilter.field.header}' is not recognized`\n    this.selectedOperator = this.data.fieldFilter.operator || this.filterOperators[0];\n    this.filterValue = this.dataType == 'date' ? this.toDate(this.data.fieldFilter.value) : this.data.fieldFilter.value;\n    if (this.dataType == 'enum') {\n      if (this.data.fieldFilter.value) this.valuesList = this.valuesList.concat(this.data.fieldFilter.value).filter(v => v != null);\n      this.isAtleastOneValueSelected = this.valuesList.length != 0;\n    }\n    if (this.dataType == 'bool' && this.filterValue == null) {\n      this.filterValue = true;\n    }\n  }\n\n  ngOnInit() {\n  }\n\n  onFilterApply() {\n    let value = this.filterValue;\n    if (this.selectedOperator === 'empty') {\n      value = null;\n    } else {\n      if (this.dataType == 'date') value = this.formatDate(value)\n      if (this.dataType == 'enum') value = this.valuesList;\n    }\n    this._dialogCloser({field: this.data.fieldFilter.field, operator: this.selectedOperator, value: value});\n  }\n\n  valueCheckChange(value, checked: boolean) {\n    if (checked) {\n      this.valuesList.push(value)\n    } else {\n      let index = this.valuesList.indexOf(value);\n      if (index != -1) this.valuesList.splice(index, 1);\n    }\n    this.isAtleastOneValueSelected = this.valuesList.length != 0;\n  }\n\n  isValueChecked(value) {\n    return this.valuesList.indexOf(value) != -1;\n  }\n\n  getErrorMessage(field) {\n    if (field.hasError('matDatepickerParse')) return this.data.labels.validDateRequired;\n    else if (field.hasError('required')) return this.data.labels.valueRequired;\n    else if (field.hasError('pattern')) return this.data.labels.numericValueRequired;\n    else return '';\n  }\n\n  getPossibleOptionValue(option) {\n    return typeof option === 'string' ? option : option.value\n  }\n\n  getPossibleOptionDisplayText(option) {\n    return typeof option === 'string' ? option : option.displayText\n  }\n\n  private formatDate(d: Date) {\n    return [d.getDate(), d.getMonth() + 1, d.getFullYear()].join('/');\n  }\n\n  private toDate(s: string) {\n    if (!s) return new Date();\n    let split = s.split('/');\n    return new Date(Number(split[2]), Number(split[1]) - 1, Number(split[0]));\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/PixelConverter.html":{"url":"pipes/PixelConverter.html","title":"pipe - PixelConverter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  PixelConverter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/datatable/src/utils/px.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        px\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: string | number, args?: string[])\n                \n            \n\n\n            \n                \n                    Defined in libs/datatable/src/utils/px.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'px'\n})\nexport class PixelConverter implements PipeTransform {\n  transform(value: string | number, args?: string[]): any {\n    if (value === undefined) {\n      return;\n    }\n    if (typeof value === 'string') {\n      return value;\n    }\n    if (typeof value === 'number') {\n      return value + 'px';\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                libs/datatable/src/components/filter-bar/field-filter-chooser-popup-dialog/field-filter-chooser-popup-dialog.ts\n            \n            component\n            FieldFilterChooserPopupDialog\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                libs/datatable/src/components/filter-bar/field-filter-chooser-popup-dialog/field-filter-chooser-popup-dialog.ts\n            \n            interface\n            DialogData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/datatable/src/components/filter-bar/field-filter-popup-dialog/field-filter-popup-dialog.ts\n            \n            component\n            FieldFilterPopupDialog\n            \n                0 %\n                (0/25)\n            \n        \n        \n            \n                \n                libs/datatable/src/components/filter-bar/field-filter-popup-dialog/field-filter-popup-dialog.ts\n            \n            class\n            MyErrorStateMatcher\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                libs/datatable/src/components/filter-bar/field-filter-popup-dialog/field-filter-popup-dialog.ts\n            \n            interface\n            DialogData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/datatable/src/components/filter-bar/filter-bar.component.ts\n            \n            component\n            FilterBarComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                libs/datatable/src/components/header/header.component.ts\n            \n            component\n            DataTableHeaderComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                libs/datatable/src/components/pagination/pagination.component.ts\n            \n            component\n            DataTablePaginationComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                libs/datatable/src/components/pagination/pagination.component.ts\n            \n            variable\n            nextId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/datatable/src/components/row/row.component.ts\n            \n            component\n            DataTableRowComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                libs/datatable/src/components/table/table.component.ts\n            \n            component\n            DataTableComponent\n            \n                0 %\n                (0/90)\n            \n        \n        \n            \n                \n                libs/datatable/src/components/table/table.component.ts\n            \n            variable\n            nextId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/datatable/src/directives/column/column.directive.ts\n            \n            directive\n            DataTableColumnDirective\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                libs/datatable/src/tools/data-table-resource.ts\n            \n            class\n            DataTableResource\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                libs/datatable/src/types/data-table-params.type.ts\n            \n            interface\n            DataTableParams\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                libs/datatable/src/types/data-table-translations.type.ts\n            \n            interface\n            DataTableTranslations\n            \n                0 %\n                (0/38)\n            \n        \n        \n            \n                \n                libs/datatable/src/types/default-translations.type.ts\n            \n            variable\n            defaultTranslations\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/datatable/src/types/filter.type.ts\n            \n            interface\n            Filter\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                libs/datatable/src/types/filterable-field.type.ts\n            \n            interface\n            FilterableField\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                libs/datatable/src/utils/drag.ts\n            \n            function\n            drag\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/datatable/src/utils/hide.ts\n            \n            directive\n            HideDirective\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                libs/datatable/src/utils/hide.ts\n            \n            function\n            isBlank\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/datatable/src/utils/min.ts\n            \n            pipe\n            MinPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/datatable/src/utils/px.ts\n            \n            pipe\n            PixelConverter\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^7.2.4\n        \n            @angular/cdk : ^7.3.1\n        \n            @angular/common : ^7.2.4\n        \n            @angular/compiler : ^7.2.4\n        \n            @angular/core : ^7.2.4\n        \n            @angular/flex-layout : ^7.0.0-beta.23\n        \n            @angular/forms : ^7.2.4\n        \n            @angular/http : ^7.2.4\n        \n            @angular/material : ^7.3.1\n        \n            @angular/platform-browser : ^7.2.4\n        \n            @angular/platform-browser-dynamic : ^7.2.4\n        \n            @angular/router : ^7.2.4\n        \n            bootstrap : ^4.0.0\n        \n            core-js : ^2.6.3\n        \n            font-awesome : ^4.7.0\n        \n            highlight.js : ^9.12.0\n        \n            lodash-es : ^4.17.4\n        \n            ngx-md : ^7.1.3\n        \n            ngx-popup-dialog : ^1.0.8\n        \n            node-sass : ^4.12.0\n        \n            popper.js : ^1.14.3\n        \n            rxjs : ^6.4.0\n        \n            tslint-angular : ^1.1.1\n        \n            zone.js : ^0.8.29\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            drag   (libs/.../drag.ts)\n                        \n                        \n                            isBlank   (libs/.../hide.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/datatable/src/utils/drag.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            drag\n                        \n                        \n                    \n                \n            \n            \n                \ndrag(event, undefined)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    libs/datatable/src/utils/hide.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            isBlank\n                        \n                        \n                    \n                \n            \n            \n                \nisBlank(obj: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAngular All DataTable\nA simple Angular All data table, with built-in solutions for features including:\n\npagination\nsorting\nrow selection (single/multi)\nexpandable rows\ncolumn resizing\nselecting visible columns\naccessibility\n\nThe component can be used not just with local data, but remote resources too, ie. when sorting and/or pagination are implemented server side.\nThe library is packaged with ng-packagr.\nDependencies\nFurthermore the component is based on Bootstrap v4.0 (CSS-only) and Font-Awesome v4.7, hence be sure to include them into your project.\nMost likely you need to install them as dependencies...\nnpm install bootstrap@4.0.0 font-awesome@4.7.0... then you need to include the CSS bundles into .angular-cli.json file as show below.\n{\n  \"apps\": [\n    {\n      \"root\": \"src\",\n      \"styles\": [\n        \"../node_modules/bootstrap/dist/css/bootstrap.min.css\",\n        \"../node_modules/font-awesome/css/font-awesome.css\",\n        \"styles.css\"\n      ]\n    }\n ]\n}Installation\nnpm install angular-datatables-all-versionsUsage\n1.Import Datatable module\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { DataTableModule } from 'angular-datatables-all-versions';\n\n@NgModule({\n  imports: [\n  ...\n  DataTableModule.forRoot()\n  ...\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }2. Include  and  into your component's template.\n\n\n...\n \n  \n  \n  \n\n...\nAPI\ndata-table\n\ntitle (string | default: '') table's name - it's highly recommend it's set for accessibility reasons as this will provide a better experience when interacting with the component, especially through a SR.\nshowTitle (boolean | default: true): if false, the title is not shown into the component. Useful when want the header component visible (with its Reload and Coulumn Selector buttons), but not the title.\nitems (JsonObject[] | default: []) table data to show.\nitemCount (number | default: 0) items's count.\nheader (boolean | default: true) show/hide the table header sub-component - this holds the table name and two buttons (reload table and column selector).\npagination (boolean | default: ) enable pagination. If true, pagination controls are shown at the bottom of the table.\nindexColumn (boolean | default: true) when true the table shows a 0-indexed column.\nindexColumnHeader (string | default: '') text shown as column header for the index column.\nselectColumn (boolean | default: false) when true the table shows a checkbox column for selecting specific row.\nmultiSelect (boolean | default: false) allows multi-row selection, showing a checkbox at select's column header.\nlabels (DataTableTranslations | default: defaultTranslations) interface holding all needed labels. You can pass a subset of the labels. The missing labels will be defaulted.\nexpandableRow (boolean | default: false) when true each row will have a collapsible content.\nselectOnRowClick (boolean | default: false) when true each row is selectable via a single-click.\nreload (function(): void | default: null) function that is invoked when the table needs to re-render its data. Note: most of the times this is the place where the developer connects to a server in order to pull down the item set.\nautoReload  (boolean | default: false) when true, the reload function gets invoked and init time (ngOnInit).\nrowColors (function(): 'color | default: null) custom function that must return a CSS color that will be applied to the entire row.\nrowTooltip (function | default: null) custom function to show a title tooltip when hovering the row.\nshowReloading (boolean | default: true) when true an overlay with a gear icon is shown on top of the table while it's reloading.\nnoDataMessage (string | default: '') message displayed when no item are displayed. If it's empty nothing is shown.\npageLimits (number[] | default: [10, 25, 50, 100, 250]) items per page selector options.\nprimaryColumn (string | default: first data column) it identifies which columns has be marked as primary. This is an important aspect from an accessibility and SR perspective. If not given, the first column will be the primary column.\npage (number | default: 0) page to load, valid only if pagination is enabled.\nlimit (number | default: 10) number of items per page, valid only pagination is enabled. If limit value is not a valid (not contained into pageLimits array) it will be defaulted to pageLimits's first value.\nsortBy (string | default: '') column table is sorted by.\nsortAsc (boolean | default: true) valid only if sortBy is not defaulted. Defines the sorting order. If true sort is ascending, descending otherwise.\n\ndata-table-column\n\nproperty (string | default: no default) item's JSONObject key used to retrieve the row cell content.\nheader (string | default: no default) column header text.\nsortable (boolean | default: false) marks the columns as sortable.\nresizable (boolean | default: false) marks the columns as resizable.\nvisible (boolean | default: true) marks the columns visible.\nwidth (number | string | default: '') defines the column width. It can be a string like 2rem or a number. If it's a number, it will be considered as pixels.\n\nCustom column templates\ndata-column's content and header are not restricted to be text only - they can hold complex content too. In order to do that developers can use two references: #dataTableHeader and #dataTableCell.\nUsage and sample\n\n  ...\n  \n    \n      Actions\n    \n    \n      Buy\n    \n  \n  ...\nAs it can be seen from the above snippet, the dataTableHeader and dataTableCell are targeting two s nodes which will be used respectively as column header and cell content. In both cases item refers to the whole row item, so developers can use whatever they may need.\nDemo app\nClone this repository, run npm install and ng serve, then navigate to http:localhost:4200 where you can access to the demo application sporting a few demos with code viewer and docs.\n##Examples\n\n\n\n\n\nLicense\nMIT License\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018 Bruno Bruzzano\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        DataTableModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DataTableModule\n\n\n\ncluster_DataTableModule_declarations\n\n\n\ncluster_DataTableModule_exports\n\n\n\n\nDataTableColumnDirective\n\nDataTableColumnDirective\n\n\n\nDataTableModule\n\nDataTableModule\n\nDataTableModule -->\n\nDataTableColumnDirective->DataTableModule\n\n\n\n\n\nDataTableComponent\n\nDataTableComponent\n\nDataTableModule -->\n\nDataTableComponent->DataTableModule\n\n\n\n\n\nDataTableHeaderComponent\n\nDataTableHeaderComponent\n\nDataTableModule -->\n\nDataTableHeaderComponent->DataTableModule\n\n\n\n\n\nDataTablePaginationComponent\n\nDataTablePaginationComponent\n\nDataTableModule -->\n\nDataTablePaginationComponent->DataTableModule\n\n\n\n\n\nDataTableRowComponent\n\nDataTableRowComponent\n\nDataTableModule -->\n\nDataTableRowComponent->DataTableModule\n\n\n\n\n\nFieldFilterChooserPopupDialog\n\nFieldFilterChooserPopupDialog\n\nDataTableModule -->\n\nFieldFilterChooserPopupDialog->DataTableModule\n\n\n\n\n\nFieldFilterPopupDialog\n\nFieldFilterPopupDialog\n\nDataTableModule -->\n\nFieldFilterPopupDialog->DataTableModule\n\n\n\n\n\nFilterBarComponent\n\nFilterBarComponent\n\nDataTableModule -->\n\nFilterBarComponent->DataTableModule\n\n\n\n\n\nHideDirective\n\nHideDirective\n\nDataTableModule -->\n\nHideDirective->DataTableModule\n\n\n\n\n\nMinPipe\n\nMinPipe\n\nDataTableModule -->\n\nMinPipe->DataTableModule\n\n\n\n\n\nPixelConverter\n\nPixelConverter\n\nDataTableModule -->\n\nPixelConverter->DataTableModule\n\n\n\n\n\nDataTableColumnDirective \n\nDataTableColumnDirective \n\nDataTableColumnDirective  -->\n\nDataTableModule->DataTableColumnDirective \n\n\n\n\n\nDataTableComponent \n\nDataTableComponent \n\nDataTableComponent  -->\n\nDataTableModule->DataTableComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    7 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    2 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CellCallback   (libs/.../cell-callback.type.ts)\n                        \n                        \n                            FieldDataType   (libs/.../filterable-field.type.ts)\n                        \n                        \n                            FilterOperator   (libs/.../data-table-translations.type.ts)\n                        \n                        \n                            MoveHandler   (libs/.../drag.ts)\n                        \n                        \n                            RowCallback   (libs/.../row-callback.type.ts)\n                        \n                        \n                            UpHandler   (libs/.../drag.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/datatable/src/types/cell-callback.type.ts\n    \n    \n        \n            \n                \n                    \n                    CellCallback\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    libs/datatable/src/types/filterable-field.type.ts\n    \n    \n        \n            \n                \n                    \n                    FieldDataType\n                \n            \n            \n                \n                        \"text\" | \"number\" | \"date\" | \"enum\" | \"bool\"\n\n                \n            \n        \n    \n    libs/datatable/src/types/data-table-translations.type.ts\n    \n    \n        \n            \n                \n                    \n                    FilterOperator\n                \n            \n            \n                \n                        \"lt\" | \"gt\" | \"lte\" | \"gte\" | \"eq\" | \"ne\" | \"contains\" | \"not_contains\" | \"starts\" | \"ends\" | \"empty\" | \"true\" | \"false\"\n\n                \n            \n        \n    \n    libs/datatable/src/utils/drag.ts\n    \n    \n        \n            \n                \n                    \n                    MoveHandler\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UpHandler\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    libs/datatable/src/types/row-callback.type.ts\n    \n    \n        \n            \n                \n                    \n                    RowCallback\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            defaultTranslations   (libs/.../default-translations.type.ts)\n                        \n                        \n                            nextId   (libs/.../pagination.component.ts)\n                        \n                        \n                            nextId   (libs/.../table.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/datatable/src/types/default-translations.type.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultTranslations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DataTableTranslations\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  headerReload: 'reload {title} table',\n  headerColumnSelector: 'column selector - adds or removes columns from {title} table',\n  headerColumnSelectorAdded: '{column_name} added to {title} table',\n  headerColumnSelectorRemoved: '{column_name} removed from {title} table',\n  indexColumn: 'index',\n  selectColumn: 'select',\n  selectRow: 'select {cell_content}',\n  selectAllRows: 'select all rows',\n  expandColumn: 'expand',\n  expandRow: 'expand {cell_content}',\n  sortedAscending: '{title} table sorted by {header} ascending',\n  sortedDescending: '{title} table sorted by {header} descending',\n  sortAscending: 'activate to sort ascending',\n  sortDescending: 'activate to sort descending',\n  paginationLimit: 'Limit',\n  paginationText: 'Results: {from} to {to} of {total}',\n  paginationTotalPages: 'of',\n  firstPage: 'first page',\n  prevPage: 'previous page',\n  pageNumberLabel: 'Page',\n  pageNumber: 'page number',\n  pageNumberNofM: '({N} of {M})',\n  nextPage: 'next page',\n  lastPage: 'last page',\n  loadingText: '{title} table is loading',\n  loadedText: '{title} table loaded',\n  addFilter: 'Add filter',\n  searchField: 'Search Field',\n  selectedValueRequired: 'You must select a value',\n  validDateRequired: 'You must enter valid date',\n  valueRequired: 'You must enter a value',\n  numericValueRequired: 'You must enter a numeric value',\n  apply: 'Apply',\n  value: 'Value',\n  date: 'Date',\n  not: 'Not',\n  filterOperators: {\n    'lt': '',\n    'lte': '=',\n    'eq': '=',\n    'ne': 'not equal to',\n    'contains': 'contains',\n    'not_contains': 'not contains',\n    'starts': 'starts with',\n    'ends': 'ends with',\n    'empty': 'is empty',\n    'true': 'true',\n    'false': 'false'\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    libs/datatable/src/components/pagination/pagination.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            nextId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n\n\n            \n        \n\n    libs/datatable/src/components/table/table.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            nextId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
